{"version":3,"sources":["context/AppReducer.js","context/Actions.js","context/GlobalState.js","components/Util/PublicRoute.js","components/Util/PrivateRoute.js","context/Api.js","components/Login/Reset.js","components/Login/Index.js","components/Util/DrawerMenu.js","components/Util/NavBar.js","components/Util/LogoutPopup.js","components/Dashboard/Index.js","components/Registro/PuestoTr.js","components/Registro/HeaderReg.js","components/Registro/DatosProduccion.js","components/Registro/DatosParada.js","components/Registro/DataPanel.js","components/Registro/DataCompPanel.js","components/Registro/Index.js","components/Registro/ProdForm.js","components/Registro/DataCompForm.js","components/Registro/ParadaForm.js","components/OrdenProduccion/Componentes.js","components/OrdenProduccion/Index.js","components/Chatarra/ChatarraHead.js","components/Chatarra/ChatarraPos.js","components/Chatarra/HeaderPanel.js","components/Chatarra/index.js","components/Chatarra/ChatarraForm.js","components/Demora/SearchDemora.js","components/Demora/DataDemora.js","components/Demora/Index.js","components/Notif/HeadSearch.js","components/Notif/HeaderTable.js","components/Notif/NotifPos.js","components/Notif/Index.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","puestosTrabajo","payload","user","isLogin","userInfo","turnos","grupos","integrantesGrp","isLam","headerReg","regproddata","regparaddata","ordenes","cargos","fallaAreas","chatarraHeader","chatarraPos","tipoChatarra","motivoChatara","regDemora","compNumber","regprodcompdata","InitialState","equipos","LocalState","JSON","parse","localStorage","getItem","GlobalContex","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","getPuestoTrabajo","ptrabajo","getTurnos","getGrupos","getIntegrantesGrupos","lista","setUserLogin","setHeaderRegActive","header","r","PuestoTrabajoId","setUserInfo","info","LogoutUser","removeItem","clearHeaderRegActive","loadRegProdData","regProData","loadRegPadadData","getOrdenes","LoadCargos","LoadFallaArea","LoadChataraHeader","ClearChatarra","ChatarraMotivo","motivo","ChatarraTipo","tipo","SetChatarraPos","chaPos","LoadDemora","demora","ClearDemora","LoadRegCompData","CompData","SetNumComp","Num","PublicRoute","Component","component","restricted","rest","useContext","render","props","to","PrivateRoute","base","getOdenenComp","Orden","callback","axios","post","headers","then","response","data","catch","error","insRegProd","proddat","useStyle","makeStyles","theme","root","padding","spacing","LogPanel","textAlign","FormCenter","margin","InputTextStyle","marginBottom","FormInputs","border","ButtonArea","btnB","background","color","btnY","LogoSize","breakpoints","down","width","heigth","up","Reset","HandlerClose","classes","history","useHistory","Grid","container","direction","justify","alignItems","className","item","xs","sm","md","lg","Paper","elevation","src","alt","onSubmit","e","preventDefault","push","AccountCircleRounded","TextField","id","name","label","CodeRounded","Tooltip","title","placement","VpnKeyRounded","Button","onClick","LinkArea","position","modalPanel","MainModal","Login","AceroContext","useState","open","setOpen","handleClose","window","location","origin","target","elements","password","CodigoEmp","Password","LoginUser","parseInt","logininfo","toast","POSITION","BOTTOM_RIGHT","console","log","message","undefined","length","warn","wrap","variant","href","Modal","onClose","aria-labelledby","aria-describedby","useStyles","list","fullList","linkStyle","textDecoration","userPanel","height","userSection","BtnLogout","DrawerMenu","draw","onToggle","onHandlerLogout","Drawer","role","onKeyDown","AccountCircle","codigoEmp","nombres","List","ListItem","button","ListItemIcon","Note","ListItemText","primary","Divider","NextWeek","startIcon","PowerSettingsNew","flexGrow","menuButton","marginRight","logoStyles","marginLeft","NavBar","setDraw","toggleDrawer","event","key","AppBar","Toolbar","IconButton","edge","aria-label","Menu","Typography","LogoutPopup","warnTimeout","logoutTimeout","autoClose","logoutAction","logout","setTimeout","setTimeouts","clearTimeouts","clearTimeout","events","resetTimeout","i","addEventListener","removeEventListener","Dashboard","err","get","getCargos","getApiOdenenes","getApiGrupos","getApiIntegrantesGrp","formControl","minWidth","formStyle","GridMain","paddin","PtContainer","display","justifyContent","alignContent","grupoContainer","PaperStyle","SelectStyle","DatePick","ButtonSection","PuestoTr","AceroContex","React","Date","TodayDate","setTodayDate","puestos","map","puesto","PuestoTrId","Descrit","TypeNot","TipoNotif","listaGrupos","grp","grupo","Id","arr","prop","nuevoArray","lookup","eliminarObjetosDuplicados","Set","Ptr","Fecha","Grupo","Turno","GrupoId","TurnoId","Estatus","UsrReg","RegDate","res","FormControl","InputLabel","Select","native","data-type","utils","MomentUtils","autoOk","inputVariant","format","InputAdornmentProps","onChange","date","turno","Descripcion","PaperSite","flexDirection","flexWrap","overflow","GridContainer","GridSections","GridSideTable","dividerStyle","bottom","left","HeaderReg","aceroContext","listaGrp","nombre","Nombres","filter","g","headerid","getRegParada","ArrowBackIosRounded","moment","Puesto","l","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Delete","rows","FabStyle","right","top","zIndex","DatosProduccion","page","setPage","rowsPerPage","setRowsPerPage","columns","align","toLocaleString","data-Id","handleAddMPrima","Pageview","Edit","currentTarget","dataset","reg","Hora","Fab","Add","stickyHeader","column","style","slice","row","hover","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","DatosParada","red","horaI","horaF","idreg","TabPanel","index","other","hidden","Box","p","a11yProps","backgroundColor","palette","paper","navTapStyle","DataPanel","setValue","Tabs","newValue","Tab","DataProduccion","DataCompPanel","Registro","subChildren","ProdFrom","hora","setHora","mprima","setMprima","comb","setComb","Lam","c","orden","consacumulado","prodacumulado","observ","combustible","conscombustible","torden","o","HeaderRegId","OrdenProdId","MPrima","PT_UME","PT_UMB","Notas","EPH","TotalComb","Total_Potencia","nativeEvent","selectedIndex","text","prima","Componente","KeyboardButtonProps","multiline","DataCompForm","Lote","MpUme","MpFactor","MpUmb","PosProdId","CodComponentes","ParadaForm","HoraInicio","setHoraInicio","HoraFin","setHoraFin","subArea","setSubArea","lugarFalla","setLugarFalla","setEquipos","regParadaD","PlqPerd","PlqDesc","InCargo","SeArea","SeSubArea","SELugarF","SEquipo","SOrden","Observ","HoraI","HoraF","Cargo","AreaFallaId","LugarAveriaId","Motivo","MpPerd","MpDesc","cargo","Codigo","AreaId","areaid","area","Denominacion","SubArea","subAreaid","sub","lugarId","Lug","eq","Idnrk","Aufnr","Meins","rootContainer","SearchPaper","SearchImput","SearchButton","ResultPaper","Componentes","Arbpl","Eph","Gamng","Gltrs","Gmein","Gstrp","Plnbez","Plnnr","Verid","Vgw01","Vornr","Werks","Bmsch","OrdenProduccion","placeholder","Search","ChatarraHead","UserC","ChatarraHeader","insChatarraHeader","Operador","HeaderId","ChatarraPos","HeaderPanel","btn","RegistroSap","disabled","dareg","Posiciones","Header","DocDate","getFullYear","getMonth","getDate","PstngDate","HeaderTxt","OperadorId","Material","Plant","StgeLoc","MoveType","EntryQnt","EntryUom","Costcenter","MoveReas","ZgmAcerogmChatarra","sapSendChatarra","Chatarra","GetMotivoChatarra","ChatarraForm","puestotr","PesoEnt","PesoSal","motchatarra","Texto","PesoEntrada","PesoSalida","PesoChatarra","TipoChatarra","MotivoChatarra","UpdDate","t","buttonSearch","marginTop","SearchDemora","FechaI","SetFechaI","FechaF","SetFechaF","ptr","getDemoras","PtrId","_d","DataDemora","Demora","HeadSearch","SetFecha","NewReleases","HeaderTable","Index","App","exact","path","ProdForm","ProdCompForm","Notif","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cd43407d.chunk.js","sourcesContent":["import {\r\n    GET_PUESTOS_TRABAJO,\r\n    USER_INFO,\r\n    USER_LOGIN,\r\n    LOGOUT,\r\n    GET_TURNOS,\r\n    GET_GRUPOS,\r\n    GET_INTEGRANTES_GRUPOS,\r\n    LOAD_HEADER_REG,\r\n    GET_REG_PARAD_DATA,\r\n    CLEAR_HEADER_REG,\r\n    IS_LAM,\r\n    GET_REG_PROD_DATA,\r\n    GET_ORDENES,\r\n    GET_CARGOS,\r\n    LOAD_FALLA_AREA,\r\n    LOAD_CHATARRA,\r\n    CLEAR_CHATARRA,\r\n    LOAD_TIPOCHATARRA,\r\n    LOAD_MOTIVOCHATERRA,\r\n    LOAD_CHATARRA_POS,\r\n    LOAD_DEMORA,\r\n    CLEAR_DEMORA,\r\n    LOAD_REG_COMP_DATA,\r\n    LOAD_COMP_NUMBER\r\n} from './Actions'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_PUESTOS_TRABAJO:\r\n            return {\r\n                ...state,\r\n                puestosTrabajo: [action.payload, ...state.puestosTrabajo]\r\n            }\r\n        case USER_LOGIN:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isLogin: true\r\n            }\r\n        case USER_INFO:\r\n            return {\r\n                ...state,\r\n                userInfo: action.payload\r\n            }\r\n        case LOGOUT: \r\n            return {\r\n                state: action.payload\r\n            }\r\n        \r\n        case GET_TURNOS: \r\n            return {\r\n                ...state,\r\n                turnos: action.payload\r\n                }\r\n        case GET_GRUPOS:\r\n            return {\r\n                ...state,\r\n                grupos: action.payload\r\n            }\r\n        case GET_INTEGRANTES_GRUPOS:\r\n            return {\r\n                ...state,\r\n                integrantesGrp: action.payload\r\n            }\r\n        case IS_LAM:\r\n            return {\r\n                ...state,\r\n                isLam: action.payload\r\n            }\r\n        case LOAD_HEADER_REG:\r\n            return {\r\n                ...state,\r\n                headerReg: action.payload\r\n            }\r\n        case CLEAR_HEADER_REG:\r\n            return {\r\n                ...state,\r\n                headerReg: null,\r\n                regproddata: null,\r\n                regparaddata: null,\r\n            }\r\n        case GET_REG_PROD_DATA:\r\n            return {\r\n                ...state,\r\n                regproddata: action.payload\r\n            }\r\n        case GET_ORDENES:\r\n            return {\r\n                ...state,\r\n                ordenes: action.payload\r\n            }\r\n        case GET_CARGOS:\r\n            return {\r\n                ...state,\r\n                cargos: action.payload\r\n            }\r\n        case LOAD_FALLA_AREA:\r\n            return {\r\n                ...state,\r\n                fallaAreas: action.payload\r\n            }\r\n        case GET_REG_PARAD_DATA:\r\n            return {\r\n                ...state,\r\n                regparaddata: action.payload\r\n            }\r\n        case LOAD_CHATARRA:\r\n            return {\r\n                ...state,\r\n                chatarraHeader: action.payload\r\n            }\r\n        case CLEAR_CHATARRA:\r\n            return {\r\n                ...state,\r\n                chatarraHeader: null,\r\n                chatarraPos: null\r\n            }\r\n        case LOAD_TIPOCHATARRA: \r\n            return {\r\n                ...state,\r\n                tipoChatarra: action.payload\r\n            }\r\n        case LOAD_MOTIVOCHATERRA: \r\n            return {\r\n                ...state,\r\n                motivoChatara: action.payload\r\n            }\r\n        case LOAD_CHATARRA_POS:\r\n            return {\r\n                ...state,\r\n                chatarraPos: action.payload\r\n            }\r\n        case LOAD_DEMORA:\r\n            return {\r\n                ...state,\r\n                regDemora: action.payload\r\n            }\r\n        case CLEAR_DEMORA:\r\n            return {\r\n                ...state,\r\n                regDemora: null\r\n            }\r\n        case LOAD_COMP_NUMBER:\r\n            return {\r\n                ...state,\r\n                compNumber: action.payload\r\n            }\r\n        case LOAD_REG_COMP_DATA:\r\n            return {\r\n                ...state,\r\n                regprodcompdata: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const GET_PUESTOS_TRABAJO = 'GET_PUESTOS_TRABAJO'\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_INFO = 'USER_INFO'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const GET_TURNOS = 'GET_TURNOS'\r\nexport const GET_GRUPOS = 'GET_GRUPOS'\r\nexport const GET_INTEGRANTES_GRUPOS = 'GET_INTEGRANTES_GRUPOS'\r\nexport const LOAD_HEADER_REG = 'LOAD_HEADER_REG'\r\nexport const CLEAR_HEADER_REG = 'CLEAR_HEADER_REG'\r\nexport const IS_LAM = 'IS_LAM'\r\nexport const GET_REG_PROD_DATA = 'GET_REG_PROD_DATA'\r\nexport const GET_ORDENES = 'GET_ORDENES'\r\nexport const GET_REG_PARAD_DATA = 'GET_REG_PARAD_DATA' \r\nexport const GET_CARGOS = 'GET_CARGOS'\r\nexport const LOAD_FALLA_AREA = 'LOAD_FALLA_AREA'\r\nexport const LOAD_CHATARRA = 'LOAD_CHATARRA'\r\nexport const CLEAR_CHATARRA = 'CLEAR_CHATARRA'\r\nexport const LOAD_TIPOCHATARRA = 'LOAD_TIPOCHATARRA'\r\nexport const LOAD_MOTIVOCHATERRA = 'LOAD_MOTIVOCHATERRA'\r\nexport const LOAD_CHATARRA_POS = 'LOAD_CHATARRA_POS'\r\nexport const LOAD_DEMORA = 'LOAD_DEMORA'\r\nexport const CLEAR_DEMORA = 'CLEAR_DEMORA'\r\nexport const LOAD_REG_COMP_DATA = 'LOAD_REG_COMP_DATA'\r\nexport const LOAD_COMP_NUMBER = 'LOAD_COMP_NUMBER'\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport {\r\n    GET_PUESTOS_TRABAJO,\r\n    USER_LOGIN,\r\n    USER_INFO,\r\n    LOGOUT,\r\n    GET_TURNOS,\r\n    GET_GRUPOS,\r\n    GET_INTEGRANTES_GRUPOS,\r\n    LOAD_HEADER_REG,\r\n    CLEAR_HEADER_REG,\r\n    IS_LAM,\r\n    GET_REG_PROD_DATA,\r\n    GET_ORDENES,\r\n    GET_REG_PARAD_DATA,\r\n    GET_CARGOS,\r\n    LOAD_FALLA_AREA,\r\n    LOAD_CHATARRA,\r\n    CLEAR_CHATARRA,\r\n    LOAD_MOTIVOCHATERRA,\r\n    LOAD_TIPOCHATARRA,\r\n    LOAD_CHATARRA_POS,\r\n    LOAD_DEMORA,\r\n    CLEAR_DEMORA,\r\n    LOAD_COMP_NUMBER,\r\n    LOAD_REG_COMP_DATA,\r\n} from \"./Actions\";\r\n\r\nconst InitialState = {\r\n  puestosTrabajo: [],\r\n    user: {},\r\n    turnos: null,\r\n    isLam: false,\r\n    grupos: null,\r\n    cargos: null,\r\n    equipos: null,\r\n    integrantesGrp: null,\r\n    isLogin: false,\r\n    userInfo: [],\r\n    headerReg: null,\r\n    regproddata: null,\r\n    regparaddata: null,\r\n    regprodcompdata: null,\r\n    ordenes: null,\r\n    fallaAreas: null,\r\n    chatarraHeader: null,\r\n    chatarraPos: null,\r\n    motivoChatara: null,\r\n    tipoChatarra: null,\r\n    regDemora: null,\r\n    compNumber: null,\r\n};\r\n\r\nconst LocalState = JSON.parse(localStorage.getItem(\"acero\"))\r\n\r\nexport const GlobalContex = createContext(InitialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, LocalState || InitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"acero\", JSON.stringify(state))\r\n    }, [state])\r\n\r\n  function getPuestoTrabajo(ptrabajo) {\r\n    dispatch({\r\n      type: GET_PUESTOS_TRABAJO,\r\n      payload: ptrabajo\r\n    });\r\n  }\r\n\r\n  function setUserLogin(user) {\r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n  }\r\n\r\n    function setUserInfo(info) {\r\n        dispatch({\r\n            type: USER_INFO,\r\n            payload: info\r\n        })\r\n    }\r\n\r\n    function LogoutUser() {\r\n        localStorage.removeItem(\"acero\")\r\n        dispatch( {\r\n            type: LOGOUT,\r\n            payload: InitialState\r\n        })\r\n    }\r\n\r\n    function getTurnos(turnos) {\r\n        dispatch({\r\n            type: GET_TURNOS,\r\n            payload: turnos\r\n        })\r\n    }\r\n\r\n    function getGrupos(grupos) {\r\n        dispatch({\r\n            type: GET_GRUPOS,\r\n            payload: grupos\r\n        })\r\n    }\r\n\r\n    function getIntegrantesGrupos(lista){\r\n        dispatch({\r\n            type: GET_INTEGRANTES_GRUPOS,\r\n            payload: lista\r\n        })\r\n    }\r\n\r\n    function setHeaderRegActive(header) {\r\n        let r = false\r\n        if (header.PuestoTrabajoId === 1 || header.PuestoTrabajoId === 2) {\r\n            r = true\r\n        }\r\n        dispatch({\r\n            type: IS_LAM,\r\n            payload: r\r\n        })\r\n\r\n        dispatch({\r\n            type: LOAD_HEADER_REG,\r\n            payload: header\r\n        })\r\n    }\r\n\r\n    function clearHeaderRegActive() {\r\n        dispatch({\r\n            type: CLEAR_HEADER_REG,\r\n        })\r\n    }\r\n\r\n    function loadRegProdData(regProData) {\r\n        dispatch({\r\n            type: GET_REG_PROD_DATA,\r\n            payload: regProData\r\n        })\r\n    }\r\n\r\n    function loadRegPadadData(regparaddata){\r\n      dispatch({\r\n        type: GET_REG_PARAD_DATA,\r\n        payload: regparaddata\r\n      })\r\n    }\r\n\r\n    function getOrdenes(ordenes) {\r\n        dispatch({\r\n            type: GET_ORDENES,\r\n            payload: ordenes\r\n        })\r\n    }\r\n\r\n    function LoadCargos(cargos){\r\n      dispatch({\r\n        type: GET_CARGOS,\r\n        payload: cargos\r\n      })\r\n    }\r\n\r\n    function LoadFallaArea(fallaAreas){\r\n      dispatch({\r\n        type: LOAD_FALLA_AREA,\r\n        payload: fallaAreas\r\n      })\r\n    }\r\n\r\n    function LoadChataraHeader(chatarraHeader){\r\n      dispatch({\r\n        type: LOAD_CHATARRA,\r\n        payload: chatarraHeader\r\n      })\r\n    }\r\n\r\n    function LoadDemora(demora) {\r\n      dispatch({\r\n        type: LOAD_DEMORA,\r\n        payload: demora\r\n      })\r\n    }\r\n\r\n    function ClearDemora() {\r\n      dispatch({\r\n        type: CLEAR_DEMORA\r\n      })\r\n    }\r\n\r\n    function ClearChatarra(){\r\n      dispatch({\r\n        type: CLEAR_CHATARRA\r\n      })\r\n    } \r\n\r\n    function ChatarraMotivo(motivo){\r\n      dispatch({\r\n        type: LOAD_MOTIVOCHATERRA,\r\n        payload: motivo\r\n      })\r\n    }\r\n\r\n    function ChatarraTipo(tipo){\r\n      dispatch({\r\n        type: LOAD_TIPOCHATARRA,\r\n        payload: tipo\r\n      })\r\n    }\r\n\r\n    function SetChatarraPos(chaPos){\r\n      dispatch({\r\n        type: LOAD_CHATARRA_POS,\r\n        payload: chaPos\r\n      })\r\n    }\r\n\r\n    function LoadRegCompData(CompData) {\r\n      dispatch({\r\n        type: LOAD_REG_COMP_DATA,\r\n        payload: CompData\r\n      })\r\n    }\r\n\r\n    function SetNumComp(Num) {\r\n      dispatch({\r\n        type: LOAD_COMP_NUMBER,\r\n        payload: Num\r\n      })\r\n    }\r\n\r\n  return (\r\n    <GlobalContex.Provider\r\n      value={{\r\n        getPuestoTrabajo,\r\n        getTurnos,\r\n        getGrupos,\r\n        getIntegrantesGrupos,\r\n        setUserLogin,\r\n        setHeaderRegActive,\r\n        setUserInfo,\r\n        LogoutUser,\r\n        clearHeaderRegActive,\r\n        loadRegProdData,\r\n        loadRegPadadData,\r\n        getOrdenes,\r\n        LoadCargos,\r\n        LoadFallaArea,\r\n        LoadChataraHeader,\r\n        ClearChatarra,\r\n        ChatarraMotivo,\r\n        ChatarraTipo,\r\n        SetChatarraPos,\r\n        LoadDemora,\r\n        ClearDemora,\r\n        LoadRegCompData,\r\n        SetNumComp,\r\n\r\n        userInfo: state.userInfo,\r\n        user: state.user,\r\n        isLogin: state.isLogin,\r\n        turnos: state.turnos,\r\n        grupos: state.grupos,\r\n        integrantesGrp: state.integrantesGrp,\r\n        headerReg: state.headerReg,\r\n        isLam: state.isLam,\r\n        regproddata: state.regproddata,\r\n        regparaddata: state.regparaddata,\r\n        regprodcompdata: state.regprodcompdata,\r\n        ordenes: state.ordenes,\r\n        cargos: state.cargos,\r\n        fallaAreas: state.fallaAreas,\r\n        chatarraHeader: state.chatarraHeader,\r\n        chatarraPos: state.chatarraPos,\r\n        motivoChatara: state.motivoChatara,\r\n        tipoChatarra: state.tipoChatarra,\r\n        regDemora: state.regDemora,\r\n        compNumber: state.compNumber,\r\n\r\n          }}\r\n    >\r\n      {children}\r\n    </GlobalContex.Provider>\r\n  );\r\n};\r\n","import React, { useContext} from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\n\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n    const AceroContex = useContext(GlobalContex)\r\n    const { isLogin } = AceroContex\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            isLogin && restricted ?\r\n                <Redirect to=\"/dashboard\" />\r\n                : <Component {...props} />\r\n        )} />\r\n        )\r\n}\r\n\r\n    export default PublicRoute","import React, { useContext} from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const AceroContex = useContext(GlobalContex)\r\n    const { isLogin } = AceroContex\r\n \r\n    return (\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin ?\r\n                <Component {...props} />\r\n                : <Redirect to=\"/\" />\r\n        )} />\r\n        )\r\n}\r\n\r\nexport default PrivateRoute","import axios from 'axios'\r\n\r\n//const base = \"http://10.82.33.70:5000/api\"\r\nconst base = \"http://localhost:5000/api\"\r\n\r\nconst LoginUser = (CodigoEmp, Password, callback) => {    \r\n    axios.post(`${base}/agm/loginUser`, {CodigoEmp, Password}\r\n    , {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then((response)=> {\r\n        callback(null, response.data)\r\n    })\r\n        .catch((error)=>{\r\n            callback(error, null)\r\n        })\r\n}\r\nconst UserInfo = (CodigoEmp, callback) => {\r\n\r\n    axios.post(`${base}/agm/getUserInfo`, {CodigoEmp}\r\n        , {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        }) \r\n}\r\nconst getApiIntegrantesGrp = (callback) => {\r\n    axios.get(`${base}/agm/getGruposIntegrantes`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\nconst getApiTurnos = (callback) => {\r\n    axios.get(`${base}/agm/getTurnos`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\nconst getApiGrupos = (callback) => {\r\n    axios.get(`${base}/agm/getGrupos`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst getCargos = (callback) => {\r\n    axios.get(`${base}/agm/getCargo`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst InsertHeaderRegistro = (header, callback) => {\r\n\r\n    axios.post(`${base}/registro/insHeaderReg`, {header}\r\n        , {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then(function (response) {\r\n        callback(null, response.data[0])\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\nconst getRegProd = (headerid, callback) => {\r\n    axios.get(`${base}/registro/getregproddata?headerid=${headerid}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst getApiOdenenes = (callback) => {\r\n    axios.get(`${base}/ordenes/getOrdenes`,\r\n        {\r\n            headers: {\r\n                    'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then((response) => {\r\n        callback(null, response.data)\r\n    }).catch((error) => {\r\n        callback(error, null)\r\n    })\r\n} \r\nconst getOdenenComp = (Orden, callback) => {\r\n    axios.post(`${base}/ordenes/getOrdenesComp`, { Orden }\r\n        , {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\nconst getOdenenPartida = (comp, callback) => {\r\n    const data = JSON.stringify( { comp })\r\n    axios.get(`${base}/ordenes/getOrdenesPartida`, {data},\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then((response) => {\r\n        callback(null, response.data)\r\n    }).catch((error) => {\r\n        callback(error, null)\r\n    })\r\n} \r\nconst insRegProd = (proddat, callback) => {\r\n\r\n    axios.post(`${base}/registro/insProdData`, {proddat},\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\nconst getMotivoFallaArea = (PuestoTr, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFallaArea?PuestoTr=${PuestoTr}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst getMotivoFallaSubArea = (AreaId, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFallaSubArea?AreaId=${AreaId}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst getMotivoFallaLugarAveria = (SubArea, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFallaLugarAveria?SubArea=${SubArea}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst getMotivoFalla = (LugarAveriaId, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFalla?LugarAveriaId=${LugarAveriaId}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst getTipoComb = (callback) => {\r\n    \r\n    axios.get(`${base}/registro/getTipoComb`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst getRegParada = (headerid, callback) => {\r\n    axios.get(`${base}/registro/getParadaData?headerid=${headerid}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst insRegParada = (regParadaD, callback) => {\r\n    axios.post(`${base}/registro/insPosRegParada`, {regParadaD},\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\n\r\nconst insChatarraHeader = (ChatarraHeader, callback) => {\r\n    axios.post(`${base}/Chatarra/InsHeader`, {ChatarraHeader}\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function(err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst insChatarraPos = (ChatarraPos, callback) => {\r\n    axios.post(`${base}/Chatarra/InsPos`, {ChatarraPos}\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function(err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst getChatarraPos = (HeaderId, callback) => {\r\n    axios.get(`${base}/Chatarra/getChatarra?HeaderId=${HeaderId}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst GetTipoChatarra = (callback) => {\r\n    axios.get(`${base}/chatarra/gettipo`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst GetMotivoChatarra = (callback) => {\r\n    axios.get(`${base}/chatarra/getmotivo`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst sapSendChatarra = (ZgmAcerogmChatarra, callback) => {\r\n    axios.post('http://appincap01/AgmSapApi/setChatarra', {ZgmAcerogmChatarra})\r\n            .then(function (response) {\r\n                callback(null, response.data)\r\n            }).catch(function(err) {\r\n                callback(err, null)\r\n            })\r\n}\r\n\r\nconst getDemoras = (demora, callback) => {\r\n    console.log('Esto es el post de demora')\r\n    axios.post(`${base}/demora`, {demora}\r\n    , {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(function(res) {\r\n            callback(null, res.data)\r\n        }).catch(function(err){\r\n            callback(err, null)\r\n        })\r\n} \r\n\r\nexport {\r\n    LoginUser,\r\n    UserInfo,\r\n    getCargos,\r\n    getApiIntegrantesGrp,\r\n    getApiTurnos,\r\n    getApiGrupos,\r\n    InsertHeaderRegistro,\r\n    getRegProd,\r\n    getApiOdenenes,\r\n    getOdenenComp,\r\n    getOdenenPartida,\r\n    insRegProd,\r\n    getRegParada,\r\n    insRegParada,\r\n    getMotivoFallaArea,\r\n    getMotivoFallaSubArea,\r\n    getMotivoFallaLugarAveria,\r\n    getMotivoFalla,\r\n    getTipoComb,\r\n    insChatarraHeader,\r\n    insChatarraPos,\r\n    getChatarraPos,\r\n    GetTipoChatarra,\r\n    GetMotivoChatarra,\r\n    sapSendChatarra,\r\n    getDemoras\r\n\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  makeStyles,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AccountCircleRounded,\r\n  VpnKeyRounded,\r\n  CodeRounded,\r\n} from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//import logo from \"../../assets/logo.png\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  LogPanel: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  FormCenter: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  InputTextStyle: {\r\n    marginBottom: \"1em\",\r\n  },\r\n  FormInputs: {\r\n    border: \"1px solid lightgray\",\r\n    padding: \"1em\",\r\n  },\r\n  ButtonArea: {\r\n    textAlign: \"center\",\r\n    margin: \"1.5em\",\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#015CB7\",\r\n    },\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n  LogoSize: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"11rem\",\r\n      heigth: \"2rem\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"16.5rem\",\r\n      heigth: \"3rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"22rem\",\r\n      heigth: \"4rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {},\r\n  },\r\n}));\r\nconst Reset = ({ HandlerClose }) => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n\r\n  function onFormSubmint(e) {\r\n    e.preventDefault();\r\n    // const { user, password } = e.target.elements;\r\n    // console.log(user.value, password.value);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={10} sm={8} md={6} lg={6}>\r\n          <Paper elevation={3} className={classes.LogPanel}>\r\n            <img src={process.env.PUBLIC_URL + '/logo.png'} className={classes.LogoSize} alt=\"logo\" />\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <form onSubmit={onFormSubmint}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccountCircleRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField id=\"rusername\" name=\"ruser\" label=\"Usuario\" />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <CodeRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"code\"\r\n                        name=\"rcode\"\r\n                        label=\"código\"\r\n                        type=\"number\"\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <VpnKeyRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"rpassword\"\r\n                      name=\"rpassword\"\r\n                      type=\"password\"\r\n                      label=\"Contraseña\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <VpnKeyRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"rusernamew\"\r\n                      name=\"rpassword2\"\r\n                      label=\"Confirmar Contaseña\"\r\n                      type=\"password\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <div className={classes.ButtonArea}>\r\n                  <Button type=\"submit\" className={classes.btnB}>\r\n                    Aceptar\r\n                  </Button>\r\n                  <Button className={classes.btnY} onClick={HandlerClose}>\r\n                    Cancelar\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  makeStyles,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, Link } from \"react-router-dom\"\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport { LoginUser, UserInfo } from '../../context/Api'\r\n\r\nimport Reset from \"./Reset\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  LogPanel: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  FormCenter: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  InputTextStyle: {\r\n    marginBottom: \"1em\",\r\n  },\r\n  FormInputs: {\r\n    border: \"1px solid lightgray\",\r\n    padding: \"1em\",\r\n  },\r\n  LinkArea: {\r\n    position: \"relative\",\r\n    textAlign: \"center\",\r\n    margin: \".5em 0 .5em -4.5em\",\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#015CB7\"\r\n    }\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#FFE166\"\r\n    }\r\n  },\r\n  LogoSize: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"11em\",\r\n      heigth: \"2em\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"16.5em\",\r\n      heigth: \"3em\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"22em\",\r\n      heigth: \"4em\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {},\r\n  },\r\n  modalPanel: {\r\n    \r\n  },\r\n  MainModal: {\r\n  },\r\n}));\r\nconst Login = () => {\r\n  const classes = useStyle();\r\n  const AceroContext = useContext(GlobalContex)\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n  };\r\n\r\n  function onFormSubmint(e) {\r\n    e.preventDefault();\r\n      const { setUserLogin, setUserInfo } = AceroContext\r\n    const { user, password } = e.target.elements;\r\n      LoginUser(parseInt(user.value), password.value, (error, logininfo) => {\r\n          if (error) {\r\n              toast.error(\"Error al intentar inicio\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT\r\n              });\r\n              console.log(error.message)\r\n              return\r\n          }\r\n          console.log(logininfo)\r\n          if (logininfo !== \"\" && logininfo !== undefined && logininfo !== null || logininfo.length != 0) {\r\n              setUserLogin(logininfo)\r\n              UserInfo(parseInt(user.value), (error, info) => {\r\n                  if (error) {\r\n                      toast.error(\"Error al cargar roles de usuario\", {\r\n                          position: toast.POSITION.BOTTOM_RIGHT\r\n                      });\r\n                      console.log(error.message)\r\n                      return\r\n                  }\r\n                  if (info !== \"\" && info !== undefined && info !== null) {\r\n                      setUserInfo(info)\r\n                      history.push(\"/dashboard\")\r\n                  } else {\r\n                      toast.warn(\"No se encontro Roles asociados al usuario!\", {\r\n                          position: toast.POSITION.BOTTOM_RIGHT\r\n                      });\r\n                  }\r\n              })\r\n          } else {\r\n              toast.warn(\"Verifique usuario y Contreaseña !\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT\r\n              });\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={10} sm={8} md={6} lg={6}>\r\n          <Paper elevation={3} className={classes.LogPanel}>\r\n                      <img src={window.location.origin + '/logo.png'} className={classes.LogoSize} alt=\"logo\" />\r\n            <h1>Acero Gm</h1>\r\n            <form className={classes.FormCenter} onSubmit={onFormSubmint}>\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                wrap=\"nowrap\"\r\n                className={classes.FormInputs}\r\n              >\r\n                <TextField\r\n                  id=\"Username\"\r\n                  name=\"user\"\r\n                  label=\"Usuario\"\r\n                  variant=\"outlined\"\r\n                  className={classes.InputTextStyle}\r\n                />\r\n                <TextField\r\n                  id=\"Password\"\r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  className={classes.InputTextStyle}\r\n                />\r\n              </Grid>\r\n              <div className={classes.LinkArea} xs={10} sm={8} md={6} lg={6}>\r\n                <a href=\"!#\" onClick={handleOpen}>Olvide mi Contraseña</a>\r\n                <br />\r\n                <Link to=\"\">Reporte Anomalias</Link>\r\n              </div>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.btnB}\r\n                type=\"submit\"\r\n              >\r\n                Aceptar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.btnY}\r\n                type=\"reset\"\r\n              >\r\n                Cancelar\r\n              </Button>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal\r\n        open={open}\r\n        xs={10} sm={8} md={6} lg={6}\r\n        className={classes.MainModal}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className={classes.modalPanel}>\r\n          <Reset HandlerClose={handleClose}/>\r\n        </div>\r\n          </Modal>\r\n          <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  makeStyles,\r\n  Drawer\r\n} from \"@material-ui/core\";\r\nimport { Note, NextWeek, AccountCircle, PowerSettingsNew } from \"@material-ui/icons\";\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n    },\r\n    linkStyle: {\r\n        color: \"inherit\",\r\n        textDecoration: \"none\"\r\n    },\r\n    userPanel: {\r\n        height: \"8rem\",\r\n        background: '#003366',\r\n        color: '#FFCC00'\r\n    },\r\n    userSection: {\r\n        margin: \"0 .5em\",\r\n\r\n    },\r\n    BtnLogout: {\r\n        background: \"red\",\r\n        color: \"white\",\r\n        margin: \"0 .5em\",\r\n        '&:hover': {\r\n            background: \"lightred\"\r\n        }\r\n    },\r\n});\r\n\r\nconst DrawerMenu = ({ draw, onToggle }) => {\r\n    const classes = useStyles();\r\n    const AceroContext = useContext(GlobalContex)\r\n    const { user, LogoutUser } = AceroContext\r\n\r\n    const onHandlerLogout = (e) => {\r\n        e.preventDefault()\r\n        LogoutUser()\r\n    }\r\n\r\n  const sideList = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={onToggle(false)}\r\n      onKeyDown={onToggle(false)}\r\n      >\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2} className={classes.userPanel}>\r\n              <Grid item>\r\n                  <AccountCircle/>\r\n              </Grid>\r\n              <Grid container direction=\"column\" spacing={1} className={classes.userSection}>\r\n                  <Grid item>\r\n                      Codigo: {user.codigoEmp}\r\n                  </Grid>\r\n                  <Grid item>\r\n                      Nombre: {user.nombres}\r\n                  </Grid>\r\n              </Grid>\r\n          </Grid>\r\n          <List>\r\n              <Link to='/registro' className={classes.linkStyle}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <Note />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Registro\" />\r\n            </ListItem>\r\n        </Link>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n              <Link to=\"/chatarra\" className={classes.linkStyle}> \r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <NextWeek />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"chatarra\" />\r\n            </ListItem>\r\n        </Link>\r\n          </List>\r\n      <Divider />\r\n      <List>\r\n              <Link to=\"/ordenprod\" className={classes.linkStyle}> \r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <NextWeek />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Ordenes de Produccion\" />\r\n            </ListItem>\r\n        </Link>\r\n          </List>\r\n          <Grid container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              spacing={1}>\r\n            <Grid item>\r\n                  \r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={onHandlerLogout}\r\n                    className={classes.BtnLogout}\r\n                    startIcon={<PowerSettingsNew />}\r\n                >\r\n                    Logout\r\n                </Button>\r\n            </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        open={draw}\r\n        onClose={onToggle(false)}\r\n      >\r\n        {sideList(\"left\")}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\n\r\nimport DrawerMenu from \"./DrawerMenu\";\r\n\r\n//import logo from \"../../assets/logo.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: '#ffcc00',\r\n    color: '#003366'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  logoStyles: { \r\n    width: '11em',\r\n    height: '2em',\r\n    marginRight: '.5em',\r\n    marginLeft: '-1.5em'\r\n  }\r\n}));\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const [draw, setDraw] = useState(false);\r\n  const toggleDrawer = open => event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    if (open === undefined) {\r\n      setDraw(true);\r\n    } else {\r\n      setDraw(open);\r\n    }\r\n  };\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={toggleDrawer()}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"logo\" className={classes.logoStyles} />\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          AceroGm\r\n        </Typography>\r\n      </Toolbar>\r\n      <DrawerMenu draw={draw} onToggle={toggleDrawer} />\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\nconst LogoutPopup = () => {\r\n    const signoutTime = 3660000;\r\n    const redirectTime = 3800;\r\n    const warningTime = 3540000;\r\n    const aceroContext = useContext(GlobalContex)\r\n    const { LogoutUser } = aceroContext\r\n    let warnTimeout;\r\n    let logoutTimeout;\r\n    let reditectTimeout;\r\n    \r\n\r\n    const warn = () => {\r\n        toast.warn(\"Tu sección sera cerrada en 1 minuto por inactividad\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            autoClose: 5000\r\n        });\r\n    };\r\n\r\n    const logoutAction = () => {\r\n        LogoutUser()\r\n    }\r\n\r\n    const logout = () => {\r\n        toast.error(\"Tu sección fue cerrada por inactividad\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            autoClose: 3000\r\n        });\r\n        reditectTimeout = setTimeout(logoutAction, redirectTime)\r\n    };\r\n\r\n    const setTimeouts = () => {\r\n        warnTimeout = setTimeout(warn, warningTime);\r\n        logoutTimeout = setTimeout(logout, signoutTime);\r\n    };\r\n\r\n    const clearTimeouts = () => {\r\n        if (warnTimeout) clearTimeout(warnTimeout);\r\n        if (logoutTimeout) clearTimeout(logoutTimeout);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const events = [\r\n            \"load\",\r\n            \"mousemove\",\r\n            \"mousedown\",\r\n            \"click\",\r\n            \"scroll\",\r\n            \"keypress\",\r\n        ];\r\n\r\n        const resetTimeout = () => {\r\n            clearTimeouts();\r\n            setTimeouts();\r\n        };\r\n\r\n        for (let i in events) {\r\n            window.addEventListener(events[i], resetTimeout);\r\n        }\r\n\r\n        setTimeouts();\r\n        return () => {\r\n            for (let i in events) {\r\n                window.removeEventListener(events[i], resetTimeout);\r\n                clearTimeouts();\r\n            }\r\n        };\r\n    }, [clearTimeouts, setTimeouts]);\r\n\r\n    return <div>\r\n        <ToastContainer />\r\n    </div>;\r\n};\r\nexport default LogoutPopup;\r\n","import React, { useContext, useEffect } from 'react'\r\n\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport { getApiTurnos, getApiGrupos, getApiIntegrantesGrp, getApiOdenenes, getCargos, getMotivoFallaArea } from '../../context/Api'\r\nimport NavigationBar from '../Util/NavBar'\r\nimport LogoutPopup from '../Util/LogoutPopup'\r\n\r\n\r\nconst Dashboard = () => {\r\n    const AceroContext = useContext(GlobalContex)\r\n    const { getTurnos\r\n        , getGrupos\r\n        , getIntegrantesGrupos\r\n        , turnos\r\n        , grupos\r\n        , cargos\r\n        , integrantesGrp\r\n        , ordenes\r\n        , getOrdenes\r\n        , LoadCargos\r\n        \r\n    } = AceroContext\r\n\r\n    useEffect(() => {\r\n        \r\n        if (turnos === null || turnos === undefined) {\r\n            getApiTurnos((err, data) => {\r\n                if (err) {\r\n\r\n                } else {\r\n                    getTurnos(data)\r\n                }\r\n            })\r\n        }\r\n\r\n        if(cargos === null || turnos === undefined) {\r\n            getCargos((err, data) => {\r\n                if(err) {\r\n\r\n                } else {\r\n                    LoadCargos(data)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (ordenes === null || ordenes === undefined) {\r\n            getApiOdenenes((err, data) => {\r\n                if (err) {\r\n\r\n                }\r\n                else {\r\n                    getOrdenes(data)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (grupos === null || grupos === undefined) {\r\n            getApiGrupos((err, grupos) => {\r\n                if (err) {\r\n\r\n                } else {\r\n                    getGrupos(grupos)\r\n                }\r\n            })\r\n            if (integrantesGrp === null || integrantesGrp === undefined) {\r\n                getApiIntegrantesGrp((err, lista) => {\r\n                    if (err) {\r\n\r\n                    } else {\r\n                        getIntegrantesGrupos(lista)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <NavigationBar/>\r\n            Dashboard\r\n            <LogoutPopup/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import \"moment\";\r\nimport React, { useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Paper,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport { InsertHeaderRegistro, GetHeaderRegistro } from '../../context/Api'\r\nconst useStyle = makeStyles(theme => ({\r\n\r\n  formControl: {\r\n    minWidth: 120\r\n  },\r\n  formStyle: {\r\n    padding: \"1em 0\",\r\n    margin: \"1em 0\"\r\n  },\r\n  GridMain: {\r\n    margin: \"2.5em\",\r\n    paddin: \"1em\"\r\n  },\r\n  PtContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    border: \"1px solid lightgray\",\r\n    margin: \"2em 1em\",\r\n    padding: \".5em .2em\",\r\n    width: \"30em\"\r\n  },\r\n  grupoContainer: {\r\n    margin: \"1em 0\"\r\n  },\r\n  PaperStyle: {\r\n    padding: \"1em\"\r\n  },\r\n  SelectStyle: {\r\n    width: \"12em\"\r\n  },\r\n  DatePick: {\r\n    margin: \".8em 0\",\r\n    width: \"12em\"\r\n  },\r\n  ButtonSection: {\r\n    margin: \".5em 0 0 -.5em\"\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#015CB7\"\r\n    }\r\n  },\r\n  \r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#FFE166\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst PuestoTr = () => {\r\n  const classes = useStyle();\r\n  const AceroContex = useContext(GlobalContex) \r\n  const { userInfo, turnos, grupos, user, setHeaderRegActive } = AceroContex\r\n  const [TodayDate, setTodayDate] = React.useState(new Date());\r\n  const puestos = userInfo.map(puesto => {\r\n        return {\r\n            id: puesto.PuestoTrId,\r\n            Descrit: puesto.PuestoTr,\r\n            TypeNot: puesto.TipoNotif\r\n        }\r\n    })\r\n  let listaGrupos = null\r\n  let grp = grupos.map(grupo => {\r\n      return { id: grupo.Id, grupo: grupo.grupo }\r\n  })\r\n\r\n    grp = [... new Set(grp)]\r\n    \r\n\r\n  const eliminarObjetosDuplicados = (arr, prop) => {\r\n        var nuevoArray = [];\r\n        var lookup = {};\r\n\r\n        for (var i in arr) {\r\n            lookup[arr[i][prop]] = arr[i];\r\n        }\r\n\r\n        for (i in lookup) {\r\n            nuevoArray.push(lookup[i]);\r\n        }\r\n\r\n        return nuevoArray;\r\n    }\r\n\r\n  listaGrupos = eliminarObjetosDuplicados(grp, \"id\")\r\n\r\n  const handlerSubmit = event => {\r\n    event.preventDefault();\r\n      const { Ptr, Fecha, Grupo, Turno } = event.target.elements\r\n\r\n      const data = {\r\n          Fecha: new Date(Fecha.value),\r\n          GrupoId: parseInt(Grupo.value),\r\n          TurnoId: parseInt(Turno.value),\r\n          PuestoTrabajoId: parseInt(Ptr.value),\r\n          Estatus: 'A',\r\n          UsrReg: user.CodigoEmp,\r\n          RegDate: new Date()\r\n      }\r\n      console.log(data)\r\n      \r\n      InsertHeaderRegistro(data, (err, res) => {\r\n          \r\n          setHeaderRegActive(res)\r\n          \r\n      })\r\n\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    setTodayDate(date);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        wrap=\"nowrap\"\r\n        className={classes.GridMain}\r\n      >\r\n        <Paper elevation={3} className={classes.PtContainer}>\r\n          <form onSubmit={handlerSubmit} className={classes.formStyle}>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"LPt\">Puesto de Trabajo</InputLabel>\r\n                <Select\r\n                  name=\"Ptr\"\r\n                  native\r\n                  label=\"Puesto de Trabajo\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  {puestos.map(puesto => {\r\n                    return (\r\n                      <option\r\n                        key={puesto.Descrit}\r\n                        value={puesto.id}\r\n                        data-type={puesto.TypeNot}\r\n                      >\r\n                        {puesto.Descrit}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  name=\"Fecha\"\r\n                  variant=\"inline\"\r\n                  inputVariant=\"outlined\"\r\n                  label=\"Seleccione Fecha\"\r\n                  format=\"MM/DD/YYYY\"\r\n                  className={classes.DatePick}\r\n                  value={TodayDate}\r\n                  InputAdornmentProps={{ position: \"end\" }}\r\n                  onChange={handleDateChange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"Lturno\">Turnos</InputLabel>\r\n                <Select\r\n                  native\r\n                  name=\"Turno\"\r\n                  label=\"Turnos\"\r\n                  id=\"Sturno\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  {turnos.map(turno => {\r\n                    return (\r\n                      <option key={turno.id} value={turno.Id}>\r\n                          {turno.Descripcion}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.grupoContainer}\r\n              >\r\n                <InputLabel id=\"LGrupo\">Grupos</InputLabel>\r\n                <Select\r\n                  native\r\n                  name=\"Grupo\"\r\n                  label=\"Grupos\"\r\n                  id=\"SGrupo\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  <option value=\"0\">\r\n                    {\" \"}\r\n                  </option>\r\n                    {listaGrupos.map(grupo => {\r\n                    return (\r\n                      <option key={grupo.id} value={grupo.id}>\r\n                        {grupo.grupo}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid className={classes.ButtonSection}>\r\n              <Button type=\"submit\" className={classes.btnB}>\r\n                Aceptar\r\n              </Button>\r\n              <Button type=\"reset\" className={classes.btnY}>\r\n                Cancelar\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PuestoTr;\r\n\r\n","import React, { useContext , useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Button,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow\n} from \"@material-ui/core\";\nimport { GlobalContex } from '../../context/GlobalState'\nimport {\n    ArrowBackIosRounded,\n    Delete\n} from '@material-ui/icons'\nimport moment from 'moment'\nimport { getRegProd, getRegParada } from '../../context/Api' \n\nconst useStyles = makeStyles(theme => ({\n    PaperSite: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"2rem\",\n    margin: \"2rem\",\n    height: \"16rem\",\n    [theme.breakpoints.down('xs')]: {\n        overflow: \"scroll\"\n    },\n    [theme.breakpoints.down('sm')]: {\n        overflow: \"scroll\"\n    },\n    [theme.breakpoints.up('md')]: {\n        overflow: \"hiden\"\n    },\n    [theme.breakpoints.up('lg')]: {\n        overflow: \"hiden\"\n    },\n    [theme.breakpoints.up('xl')]: {\n        overflow: \"hiden\"\n    }\n    \n  },\n  GridContainer: {\n    \n  },\n  GridSections: {\n      padding: \"2rem\",\n      margin: \"2rem\"\n  },\n  GridSideTable: {\n  },\n  dividerStyle: {\n    margin: '.3rem'\n  },\n\n  ButtonSection: {\n    bottom: '0',\n    left: '39rem'\n  },\n  btnB: {\n    background: \"red\",\n    color: \"white\",\n    margin: \"0 .5em\",\n    marginBottom: \"-5rm\",\n    '&:hover': {\n        color: 'black', \n        background: \" #ffcccb\"\n}\n  }\n\n}));\n\nconst HeaderReg = ({ header }) => {\n    const classes = useStyles();\n    const aceroContext = useContext(GlobalContex)\n    const { integrantesGrp, clearHeaderRegActive, loadRegProdData, loadRegPadadData  } = aceroContext\n\n    let listaGrp = integrantesGrp.map(grp => {\n        return {\n            nombre: grp.Nombres,\n            grupo: grp.grupo\n        }\n    }).filter(g => {\n        return g.grupo === header.Grupo\n    })\n    listaGrp = [... new Set(listaGrp)]\n\n    useEffect(() => {\n        console.log(header.id)\n        getRegProd(header.id, (err, data) => {\n            loadRegProdData(data)\n        })\n        getRegParada(header.id, (err, data) => {\n            loadRegPadadData(data)\n        })\n    },[])\n\n    const handlerBack = (e) => {\n        e.preventDefault()\n        clearHeaderRegActive()\n    }\n\n  return (\n    <>\n      <Paper elevation={4} className={classes.PaperSite}>\n        <Grid\n          spacing={3}\n          container\n          justify=\"flex-start\"\n          alignContent=\"space-between\"\n          wrap=\"wrap\"\n          direction=\"row\"\n        >\n          <Grid item>\n            <div><Button onClick={handlerBack}><ArrowBackIosRounded/></Button></div>\n            <div><b>Fecha:</b> {moment(header.Fecha).format('L')}</div>\n            <div><b>Turno:</b> {header.Turno}</div>\n            <div><b>Grupo:</b> {header.Grupo}</div>\n            <div><b>Puesto de Trabajo: </b> {header.Puesto}</div>\n            {\n                listaGrp.map(l => {\n                    return <div key={l.nombre}><b>Operador: </b>{l.nombre}</div>\n                })\n            }\n          </Grid>\n          <Grid item>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <b>TC</b>\n                    </TableCell>\n                    <TableCell>\n                      <b>TL</b>\n                    </TableCell>\n                    <TableCell>\n                      <b>TE</b>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>0</TableCell>\n                    <TableCell>0</TableCell>\n                    <TableCell>0</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item >\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <b>TI</b>\n                    </TableCell>\n                    <TableCell>\n                      <b>TP</b>\n                    </TableCell>\n                    <TableCell>\n                      <b>M</b>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>0</TableCell>\n                    <TableCell>0</TableCell>\n                    <TableCell>\n                      <b>M</b>\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>0</TableCell>\n                    <TableCell>0</TableCell>\n                    <TableCell>\n                      <b>O</b>\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>0</TableCell>\n                    <TableCell>0</TableCell>\n                    <TableCell>\n                      <b>TOT</b>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.GridSections}>\n            <Button type=\"submit\" className={classes.btnB} startIcon={<Delete />}>\n              Eliminar\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nexport default HeaderReg;\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport { Add, Pageview, Edit } from \"@material-ui/icons\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  FabStyle: {\r\n    position: \"absolute\",\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    right: \"0\",\r\n    top: \"-4rem\",\r\n    zIndex: \"999\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DatosProduccion = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const aceroContext = useContext(GlobalContex);\r\n  const { regproddata, loadRegProdData } = aceroContext;\r\n  const columns = [\r\n    {\r\n      id: \"id\",\r\n      label: \"Cod Reg\",\r\n      minWidth: \"100\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(), //toFixed(2),\r\n    },\r\n    {\r\n      id: \"Orden\",\r\n      label: \"Orden Prod\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"mprima\",\r\n      label: \"Materia Prima\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"lote\",\r\n      label: \"Lote Mp\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"producto\",\r\n      label: \"Producto\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"Hora\",\r\n      label: \"Hora\",\r\n      minWidth: \"200\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"Eph\",\r\n      label: \"EPH\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"ume\",\r\n      label: \"Consumo Acumulado\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"emb\",\r\n      label: \"Producción Acumulado\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"comb\",\r\n      label: \"Combustible\",\r\n      minWidth: \"170\",\r\n      align: \"center\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"conscomb\",\r\n      label: \"Consumo Combustible\",\r\n      minWidth: \"170\",\r\n      align: \"center\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"conselect\",\r\n      label: \"Consumo Electricidad\",\r\n      minWidth: \"170\",\r\n      align: \"center\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"Notas\",\r\n      label: \"Observación\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },{\r\n      id: \"id\",\r\n      label: \"\",\r\n      minWidth: \"100\",\r\n      align: \"left\",\r\n      format: (value) => <Button data-Id={value.toLocaleString()} onClick={handleAddMPrima}> <Pageview/> </Button>,\r\n    },{\r\n      id: \"id\",\r\n      label: \"\",\r\n      minWidth: \"100\",\r\n      align: \"left\",\r\n      format: (value) => <Button data-Id={value.toLocaleString()} onClick={handleAddMPrima}> <Edit/> </Button>,//value.toLocaleString(), //toFixed(2),\r\n    },\r\n  ]\r\n  \r\n  const handleAddMPrima = (e) => {\r\n    e.preventDefault()\r\n    console.log(e.currentTarget.dataset.id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (regproddata !== null && regproddata !== undefined) {\r\n      regproddata.map((reg) => {\r\n        reg.Hora = moment(new Date(reg.Hora)).format(\"LT\");\r\n        return reg;\r\n      });\r\n      rows = regproddata;\r\n    }\r\n  }, [regproddata]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Link to=\"/registro/prodreg\">\r\n        <Fab aria-label=\"add\" className={classes.FabStyle}>\r\n          <Add />\r\n        </Fab>\r\n      </Link>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  id={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default DatosProduccion;\r\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Fab,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { Link } from 'react-router-dom'\nimport { Add } from \"@material-ui/icons\";\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport { getMotivoFallaArea } from \"../../context/Api\";\nimport { red } from \"@material-ui/core/colors\";\nconst columns = [\n  {\n    id: \"idreg\",\n    label: \"Id\",\n    minWidth: \"100\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(), //toFixed(2),\n  },\n  {\n    id: \"horaI\",\n    label: \"Hora Inicio\",\n    minWidth: \"200\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"horaF\",\n    label: \"Hora Fin\",\n    minWidth: \"200\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Tiempo\",\n    label: \"Tiempo Parada\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"tprogramado\",\n    label: \"Tiempo Programado\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"cargo\",\n    label: \"Cargo\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"area\",\n    label: \"Area\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"equipo\",\n    label: \"Equipo\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"causa\",\n    label: \"Causa\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"plqp\",\n    label: \"PLQ Perdidas\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"plqd\",\n    label: \"PLQ Descartados\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"ordennp\",\n    label: \"Orden Producción\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"prod\",\n    label: \"Producto\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"proda\",\n    label: \"Producto Anterior\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Notas\",\n    label: \"Observaciones\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nlet rows = [];\n\nconst DatosParada = () => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      position: \"relative\",\n    },\n    FabStyle: {\n      position: \"absolute\",\n      background: \"#FFCC00\",\n      color: \"#003366\",\n      right: \"0\",\n      top: \"-4rem\",\n      zIndex: \"999\",\n      \"&:hover\": {\n        background: \"#FFE166\",\n      },\n      MainModal: {\n        overflow: \"scroll\",\n        background: red,\n        [theme.breakpoints.down(\"xs\")]: {\n          heigth: \"50em\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n          heigth: \"60em\",\n        },\n        [theme.breakpoints.up(\"md\")]: {\n          heigth: \"70em\",\n        },\n        [theme.breakpoints.up(\"lg\")]: {},\n      },\n    },\n  }));\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const AceroContext = useContext(GlobalContex);\n  const {\n    regparaddata,\n    fallaAreas,\n    LoadFallaArea,\n    headerReg,\n  } = AceroContext;\n\n  useEffect(() => {\n    if (regparaddata !== null && regparaddata !== undefined) {\n      regparaddata.map((reg) => {\n        reg.horaI = moment(new Date(reg.horaI)).format(\"LT\");\n        reg.horaF = moment(new Date(reg.horaF)).format(\"LT\");\n        return reg;\n      });\n      rows = regparaddata;\n    }\n\n    if (fallaAreas === null || fallaAreas === undefined) {\n      getMotivoFallaArea(headerReg.PuestoTrabajoId, (err, data) => {\n        if (err) {\n        } else {\n          LoadFallaArea(data);\n        }\n      });\n    }\n  }, [regparaddata]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Link to=\"/registro/paradreg\">\n        <Fab aria-label=\"add\" className={classes.FabStyle}>\n          <Add />\n        </Fab>\n      </Link>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  id={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idreg}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default DatosParada;\n","import React from \"react\";\nimport {\n  AppBar,\n  Box,\n  Tabs,\n  Tab,\n  Typography,\n  makeStyles\n} from \"@material-ui/core\";\n\nimport DataProduccion from './DatosProduccion'\nimport DatosParada from './DatosParada'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  \n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  navTapStyle: {\n    background: '#003366',\n    color: \"#FFCC00\"\n  }\n}));\n\nfunction DataPanel() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.navTapStyle}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"\"\n        >\n          <Tab label=\"Datos Producción\" {...a11yProps(0)} />\n          <Tab label=\"Paradas\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {DataProduccion}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {DatosParada}\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default DataPanel;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n} from \"@material-ui/core\";\nimport { GlobalContex } from \"../../context/GlobalState\";\n\nconst columns = [\n  {\n    id: \"id\",\n    label: \"Cod Reg\",\n    minWidth: \"100\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(), //toFixed(2),\n  },\n  {\n    id: \"CodComponentes\",\n    label: \"Componentes\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Descripcion\",\n    label: \"Descripcion\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Batch\",\n    label: \"Lote\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"MpUme\",\n    label: \"Consumo Acumulado\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"MpFactor\",\n    label: \"Factor\",\n    minWidth: \"200\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"MpUmb\",\n    label: \"UMB\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n]\n\nlet rows = [];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  FabStyle: {\n    position: \"absolute\",\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    right: \"0\",\n    top: \"-4rem\",\n    zIndex: \"999\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n}));\n\nconst DataCompPanel = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const aceroContext = useContext(GlobalContex);\n  const { } = aceroContext;\n  \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  id={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default DataCompPanel;\n","import React, { useContext } from 'react'\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\nimport NavigationBar from '../Util/NavBar'\r\nimport PuestoTr from \"./PuestoTr\"\r\nimport HeaderReg from './HeaderReg'\r\nimport DataPanel from './DataPanel'\r\nimport CompData from './DataCompPanel'\r\n\r\nconst Registro = () => {\r\n    const aceroContext = useContext(GlobalContex)\r\n    const { headerReg, regprodcompdata } = aceroContext\r\n    let children\r\n    let subChildren\r\n\r\n    if(regprodcompdata == null) {\r\n        subChildren = <></>\r\n    } else {\r\n        subChildren = <CompData/>\r\n    }\r\n\r\n\r\n    if (headerReg == null) {\r\n        children = <PuestoTr />\r\n    } else {\r\n        children = <div>\r\n            <HeaderReg header={headerReg}  />\r\n            <DataPanel/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavigationBar />\r\n            {children}\r\n            {subChildren}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Registro\r\n","import \"moment\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Select,\n  makeStyles,\n  InputLabel,\n  Tooltip,\n} from \"@material-ui/core\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from \"@material-ui/pickers\";\n\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport { getOdenenComp, insRegProd, getTipoComb } from \"../../context/Api\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    overflow: \"scroll\",\n  },\n  LogoSize: {\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"11rem\",\n      heigth: \"2rem\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"16.5rem\",\n      heigth: \"3rem\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"22rem\",\n      heigth: \"4rem\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {},\n  },\n  btnB: {\n    background: \"#003366\",\n    color: \"white\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#015CB7\",\n    },\n  },\n  btnY: {\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n  SelectStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n  InputTextStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n}));\n\nconst ProdFrom = () => {\n  const classes = useStyle();\n  const [hora, setHora] = useState(new Date());\n  const [mprima, setMprima] = useState([]);\n  const [comb, setComb] = useState([]);\n  const aceroContext = useContext(GlobalContex);\n  const { isLam, ordenes, headerReg, user, loadRegProdData } = aceroContext;\n  const history = useHistory();\n  let Lam = null;\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      orden,\n      mprima,\n      consacumulado,\n      prodacumulado,\n      observ,\n      combustible,\n      conscombustible,\n    } = e.target.elements;\n\n    let torden = ordenes.filter((o) => {\n      return o.Id == orden.value;\n    });\n\n    const data = {\n      HeaderRegId: headerReg.id,\n      OrdenProdId: orden.value,\n      Hora: hora,\n      MPrima: mprima.value,\n      PT_UME: consacumulado.value,\n      PT_UMB: prodacumulado.value,\n      Notas: observ.value,\n      EPH: torden.EPH,\n      TotalComb: combustible.value == undefined ? 0 : combustible.value,\n      Total_Potencia:\n        conscombustible.value == undefined ? 0 : combustible.value,\n      UsrReg: user.CodigoEmp,\n    };\n\n    insRegProd(data, (err, res) => {\n      loadRegProdData(res);\n      history.push(\"/registro\");\n    });\n  };\n\n  const HandlerClose = (e) => {\n    e.preventDefault();\n    history.push(\"/registro\");\n  };\n\n  const onChangeOrden = (e) => {\n    e.preventDefault();\n    let index = e.nativeEvent.target.selectedIndex;\n    let label = e.nativeEvent.target[index].text;\n\n    getOdenenComp(label, (err, data) => {\n      if (err) {\n      } else {\n        setMprima(data);\n      }\n    });\n  };\n\n  const handleDateChange = (date) => {\n    setHora(date);\n  };\n\n  if (isLam) {\n    Lam = (\n      <>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid item>\n            <InputLabel id=\"SCombustible\">Combustible</InputLabel>\n            <Select\n              native\n              label=\"Combustible\"\n              name=\"combustible\"\n              id=\"Smateria\"\n              className={classes.SelectStyle}\n            >\n              <option value=\"0\"></option>\n              {comb.map((c) => {\n                return (\n                  <option key={c.Id} value={c.Id}>\n                    {c.Descripcion}\n                  </option>\n                );\n              })}\n            </Select>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid item>\n            <Tooltip title=\"Solo Números\" placement=\"right\">\n              <TextField\n                id=\"ConsComb\"\n                name=\"conscombustible\"\n                label=\"Consumo Combustible\"\n                type=\"number\"\n                className={classes.InputTextStyle}\n              />\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n\n  useEffect(()=>{\n    if (isLam) {\n      getTipoComb((err, data) => {\n        if (err) {\n        } else {\n          setComb(data);\n        }\n      });\n    }\n  },[])\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={1}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.root}\n      >\n        <Grid item xs={10} sm={8} md={6} lg={6}>\n          <Paper elevation={3}>\n            <Grid\n              container\n              spacing={1}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              className={classes.root}\n            >\n              <form onSubmit={onFormSubmit}>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"SOrden\">Orden Producción</InputLabel>\n                    <Select\n                      native\n                      label=\"Orden\"\n                      name=\"orden\"\n                      className={classes.SelectStyle}\n                      onChange={onChangeOrden}\n                    >\n                      <option value=\"0\"> </option>\n                      {ordenes.map((orden) => {\n                        return (\n                          <option key={orden.Id} value={orden.Id}>\n                            {orden.Orden}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"Smateria\">Materia Prima</InputLabel>\n                    <Select\n                      native\n                      label=\"Materia Prima\"\n                      name=\"mprima\"\n                      className={classes.SelectStyle}\n                    >\n                      <option value=\"0\"> </option>\n                      {mprima.map((prima) => {\n                        return (\n                          <option key={prima.Id} value={prima.Id}>\n                            {prima.Componente}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                      <KeyboardTimePicker\n                        margin=\"normal\"\n                        id=\"time-picker\"\n                        label=\"Time picker\"\n                        value={hora}\n                        onChange={handleDateChange}\n                        className={classes.InputTextStyle}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change time\",\n                        }}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"ConsAcu\"\n                        name=\"consacumulado\"\n                        label=\"Consumo Acumulado\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"ProdAcu\"\n                        name=\"prodacumulado\"\n                        label=\"Producción Acumulado\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <TextField\n                      id=\"obs\"\n                      name=\"observ\"\n                      label=\"Observación\"\n                      multiline\n                      rows={2}\n                      className={classes.InputTextStyle}\n                    />\n                  </Grid>\n                </Grid>\n                {Lam}\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.btnB}\n                      type=\"submit\"\n                    >\n                      Aceptar\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.btnY}\n                      type=\"reset\"\n                      onClick={HandlerClose}\n                    >\n                      Cancelar\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ProdFrom;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Select,\n  makeStyles,\n  InputLabel,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport { getOdenenComp, insRegProd, getTipoComb } from \"../../context/Api\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    overflow: \"scroll\",\n  },\n  LogoSize: {\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"11rem\",\n      heigth: \"2rem\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"16.5rem\",\n      heigth: \"3rem\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"22rem\",\n      heigth: \"4rem\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {},\n  },\n  btnB: {\n    background: \"#003366\",\n    color: \"white\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#015CB7\",\n    },\n  },\n  btnY: {\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n  SelectStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n  InputTextStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n}));\n\nconst DataCompForm = ({ Id }) => {\n  const classes = useStyle();\n  const [mprima, setMprima] = useState([]);\n  const aceroContext = useContext(GlobalContex);\n  const { ordenes } = aceroContext;\n  const history = useHistory();\n\n  const onChangeOrden = (e) => {\n    e.preventDefault();\n    let index = e.nativeEvent.target.selectedIndex;\n    let label = e.nativeEvent.target[index].text;\n\n    getOdenenComp(label, (err, data) => {\n      if (err) {\n      } else {\n        setMprima(data);\n      }\n    });\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      orden,\n      mprima,\n      Lote,\n      MpUme,\n      MpFactor,\n      MpUmb,\n    } = e.target.elements;\n\n    let torden = ordenes.filter((o) => {\n      return o.Id == orden.value;\n    });\n\n    const data = {\n      PosProdId: Id,\n      CodComponentes: mprima,\n      \n    };\n\n    insRegProd(data, (err, res) => {\n      \n      history.push(\"/registro\");\n    });\n  };\n\n  const HandlerClose = (e) => {\n    e.preventDefault();\n    history.push(\"/registro\");\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={1}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.root}\n      >\n        <Grid item xs={10} sm={8} md={6} lg={6}>\n          <Paper elevation={3}>\n            <Grid\n              container\n              spacing={1}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              className={classes.root}\n            >\n              <form onSubmit={onFormSubmit}>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"SOrden\">Orden Producción</InputLabel>\n                    <Select\n                      native\n                      label=\"Orden\"\n                      name=\"orden\"\n                      className={classes.SelectStyle}\n                      onChange={onChangeOrden}\n                    >\n                      <option value=\"0\"> </option>\n                      {ordenes.map((orden) => {\n                        return (\n                          <option key={orden.Id} value={orden.Id}>\n                            {orden.Orden}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"Smateria\">Materia Prima</InputLabel>\n                    <Select\n                      native\n                      label=\"Materia Prima\"\n                      name=\"mprima\"\n                      className={classes.SelectStyle}\n                    >\n                      <option value=\"0\"> </option>\n                      {mprima.map((prima) => {\n                        return (\n                          <option key={prima.Id} value={prima.Id}>\n                            {prima.Componente}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"Lote\"\n                        name=\"Lote\"\n                        label=\"Lote\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"MpUme\"\n                        name=\"MpUme\"\n                        label=\"Consumo Acumulado\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"MpFactor\"\n                        name=\"MpFactor\"\n                        label=\"Factor\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"MpUmb\"\n                        name=\"MpUmb\"\n                        label=\"UMB\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.btnB}\n                      type=\"submit\"\n                    >\n                      Guardar\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.btnY}\n                      type=\"reset\"\n                      onClick={HandlerClose}\n                    >\n                      Cancelar\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default DataCompForm;\n","import \"moment\";\nimport React, { useState, useContext } from \"react\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Select,\n  makeStyles,\n  InputLabel,\n  Tooltip,\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport { useHistory } from 'react-router-dom'\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport {\n  getMotivoFallaSubArea,\n  getMotivoFallaLugarAveria,\n  getMotivoFalla,\n  insRegParada,\n} from \"../../context/Api\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    overflow: \"scroll\",\n  },\n  btnB: {\n    background: \"#003366\",\n    color: \"white\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#015CB7\",\n    },\n  },\n  btnY: {\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n  SelectStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n  InputTextStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n}));\n\nconst ParadaForm = () => {\n  const classes = useStyle();\n  const [HoraInicio, setHoraInicio] = useState(new Date());\n  const [HoraFin, setHoraFin] = useState(new Date());\n  const [subArea, setSubArea] = useState([]);\n  const [lugarFalla, setLugarFalla] = useState([]);\n  const [equipos, setEquipos] = useState([]);\n  const aceroContext = useContext(GlobalContex);\n  const history = useHistory()\n  const {\n    isLam,\n    ordenes,\n    cargos,\n    fallaAreas,\n    user,\n    headerReg,\n    loadRegPadadData,\n  } = aceroContext;\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    const {\n      PlqPerd,\n      PlqDesc,\n      InCargo,\n      SeArea,\n      SeSubArea,\n      SELugarF,\n      SEquipo,\n      SOrden,\n      Observ,\n    } = e.target.elements;\n\n    const data = {\n      HeaderRegId: headerReg.id,\n      OrdenProdId: SOrden.value,\n      HoraI: HoraInicio,\n      HoraF: HoraFin,\n      Cargo: InCargo.value,\n      AreaFallaId: SeArea.value,\n      LugarAveriaId: SELugarF.value,\n      subArea: SeSubArea.value,\n      Motivo: SEquipo.value,\n      Notas: Observ.value,\n      MpPerd: PlqPerd.value == undefined ? 0 : PlqPerd.value,\n      MpDesc: PlqDesc.value == undefined ? 0 : PlqDesc.value,\n      UsrReg: user.CodigoEmp,\n    };\n\n    insRegParada(data, (err, res) => {\n      if (err) {\n      } else {\n        loadRegPadadData(res);\n        history.push(\"/registro\")\n      }\n    });\n  };\n\n  const onChangeArea = (e) => {\n    e.preventDefault();\n    let areaid = e.target.value;\n    getMotivoFallaSubArea(areaid, (err, data) => {\n      if (err) {\n      } else {\n        setSubArea(data);\n      }\n    });\n  };\n\n  const onChangeSubArea = (e) => {\n    e.preventDefault();\n    let subAreaid = e.target.value;\n    getMotivoFallaLugarAveria(subAreaid, (err, data) => {\n      if (err) {\n      } else {\n        setLugarFalla(data);\n      }\n    });\n  };\n\n  const HandlerClose = (e) => {\n    e.preventDefault();\n    history.push(\"/registro\")\n  }\n\n  const onChangeLugar = (e) => {\n    e.preventDefault();\n    let lugarId = e.target.value;\n    getMotivoFalla(lugarId, (err, data) => {\n      if (err) {\n      } else {\n        setEquipos(data);\n      }\n    });\n  };\n\n  const handleHInicioChange = (date) => {\n    setHoraInicio(date);\n  };\n\n  const handleHFinChange = (date) => {\n    setHoraFin(date);\n  };\n\n  let Lam = null;\n  if (isLam) {\n    Lam = (\n      <>\n        <Grid\n          container\n          spacing={1}\n          alignItems=\"flex-end\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Tooltip title=\"Solo Números\" placement=\"right\">\n              <TextField\n                id=\"PlqP\"\n                name=\"PlqPerd\"\n                label=\"PLQ Perdidos\"\n                type=\"number\"\n                className={classes.InputTextStyle}\n              />\n            </Tooltip>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          spacing={1}\n          alignItems=\"flex-end\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Tooltip title=\"Solo Números\" placement=\"right\">\n              <TextField\n                id=\"Plqd\"\n                name=\"PlqDesc\"\n                label=\"PLQ Descartado\"\n                type=\"number\"\n                className={classes.InputTextStyle}\n              />\n            </Tooltip>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} alignItems=\"center\"></Grid>\n      </>\n    );\n  }\n  return (\n    <>\n      <Grid\n        container\n        spacing={1}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12} sm={10} md={6} lg={6}>\n          <Paper elevation={3}>\n            <Grid\n              container\n              spacing={1}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              className={classes.root}\n            >\n              <form onSubmit={onFormSubmit}>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                      <KeyboardTimePicker\n                        margin=\"normal\"\n                        id=\"HoraH\"\n                        label=\"Hora Inicio\"\n                        value={HoraInicio}\n                        onChange={handleHInicioChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"Tiempo ha cambiado\",\n                        }}\n                        className={classes.SelectStyle}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n                  </Grid>\n                  <Grid container spacing={1} alignItems=\"center\">\n                    <Grid item>\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <KeyboardTimePicker\n                          margin=\"normal\"\n                          id=\"HoraF\"\n                          label=\"Hora Fin\"\n                          value={HoraFin}\n                          onChange={handleHFinChange}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"Tiempo ha cambiado\",\n                          }}\n                          className={classes.SelectStyle}\n                        />\n                      </MuiPickersUtilsProvider>\n                  </Grid>\n                </Grid>\n                  <Grid container spacing={1} alignItems=\"center\">\n                    <Grid item>\n                      <InputLabel id=\"SCargo\">Cargo</InputLabel>\n                      <Select\n                        native\n                        name=\"InCargo\"\n                        label=\"SlCargo\"\n                        className={classes.SelectStyle}\n                      >\n                        {cargos.map((cargo) => {\n                          return (\n                            <option key={cargo.Id} value={cargo.Id}>\n                              {cargo.Codigo}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1} alignItems=\"center\">\n                      <Grid item>\n                        <InputLabel id=\"SlArea\">Area</InputLabel>\n                        <Select\n                          native\n                          label=\"SlArea\"\n                          id=\"SeArea\"\n                          name=\"SeArea\"\n                          className={classes.SelectStyle}\n                          onChange={onChangeArea}\n                        >\n                          <option value=\"0\"></option>\n                          {fallaAreas.map((area) => {\n                            return (\n                              <option key={area.Id} value={area.Id}>\n                                {area.Denominacion}\n                              </option>\n                            );\n                          })}\n                        </Select>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"SlSubArea\">SubArea</InputLabel>\n                    <Select\n                      native\n                      label=\"SlSubArea\"\n                      id=\"SeSubArea\"\n                      name=\"SeSubArea\"\n                      className={classes.SelectStyle}\n                      onChange={onChangeSubArea}\n                    >\n                      <option value=\"0\"></option>\n                      {subArea.map((sub) => {\n                        return (\n                          <option key={sub.Id} value={sub.Id}>\n                            {sub.Denominacion}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1} alignItems=\"center\">\n                    <Grid item>\n                      <InputLabel id=\"SLLugarF\">Lugar Falla</InputLabel>\n                      <Select\n                        native\n                        label=\"SLLugarF\"\n                        id=\"SELugarF\"\n                        name=\"SELugarF\"\n                        className={classes.SelectStyle}\n                        onChange={onChangeLugar}\n                      >\n                        <option value=\"0\"></option>\n                        {lugarFalla.map((Lug) => {\n                          return (\n                            <option key={Lug.Id} value={Lug.Id}>\n                              {Lug.Denominacion}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1} alignItems=\"center\">\n                    <Grid item>\n                      <InputLabel id=\"SLEquipo\">Motivo Falla</InputLabel>\n                      <Select\n                        native\n                        label=\"SLEquipo\"\n                        id=\"SEquipo\"\n                        name=\"SEquipo\"\n                        className={classes.SelectStyle}\n                      >\n                        <option value=\"0\"></option>\n                        {equipos.map((eq) => {\n                          return (\n                            <option key={eq.Id} value={eq.Id}>\n                              {eq.Denominacion}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1} alignItems=\"center\">\n                    <Grid item>\n                      <InputLabel id=\"SOrden\">Orden Producción</InputLabel>\n                      <Select\n                        native\n                        label=\"Orden\"\n                        id=\"SOrden\"\n                        name=\"SOrden\"\n                        className={classes.SelectStyle}\n                      >\n                        <option value=\"0\"> </option>\n                        {ordenes.map((orden) => {\n                          return (\n                            <option key={orden.Id} value={orden.Id}>\n                              {orden.Orden}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                    </Grid>\n                </Grid>\n                  {Lam}\n                  <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <TextField\n                      id=\"obs\"\n                      name=\"Observ\"\n                      label=\"Observación\"\n                      multiline\n                      rows={2}\n                      className={classes.InputTextStyle}\n                    />\n                  </Grid>\n                </Grid>\n                  <p></p>\n                  <Grid container spacing={1} alignItems=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    className={classes.btnB}\n                    type=\"submit\"\n                  >\n                    Aceptar\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.btnY}\n                    type=\"reset\"\n                    onClick={HandlerClose}\n                  >\n                    Cancelar\n                  </Button>\n                </Grid>\n              </form>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ParadaForm;\n","import React, { useState } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  Grid,\n  // TextField,\n  // Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination\n} from \"@material-ui/core\";\n\nconst columns = [\n  {\n    id: \"id\",\n    label: \"id\",\n    minWidth: \"100\",\n    align: \"left\",\n    format: value => value.toLocaleString() //toFixed(2),\n  },\n  {\n    id: \"Aufnr\",\n    label: \"Aufnr\",\n    minWidth: \"100\",\n    align: \"left\",\n    format: value => value.toLocaleString() //toFixed(2),\n  },\n  {\n    id: \"Meins\",\n    label: \"Meins\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"Idnrk\",\n    label: \"Idnrk\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: value => value.toLocaleString()\n  }\n]\n\nconst rows = [\n  {\n    id: 1,\n    Idnrk: \"PLQ-010\",\n    Aufnr: \"294633\",\n    Meins: \"TO\"\n  },\n  {\n    id: 2,\n    Idnrk: \"PLQ-011\",\n    Aufnr: \"294633\",\n    Meins: \"TO\"\n  },\n  {\n    id: 3,\n    Idnrk: \"PLQ-013\",\n    Aufnr: \"294633\",\n    Meins: \"TO\"\n  },\n  {\n    id: 4,\n    Idnrk: \"PLQ-045\",\n    Aufnr: \"294633\",\n    Meins: \"TO\"\n  },\n  {\n    id: 5,\n    Idnrk: \"AT-061\",\n    Aufnr: \"294633\",\n    Meins: \"QQ\"\n  },\n  {\n    id: 6,\n    Idnrk: \"CPC-002\",\n    Aufnr: \"294633\",\n    Meins: \"ST\"\n  },\n  {\n    id: 7,\n    Idnrk: \"PLQ-020\",\n    Aufnr: \"294633\",\n    Meins: \"TO\"\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  rootContainer: {},\n  SearchPaper: {\n    margin: \"1rem 0 .5rem 0\",\n    padding: '.5rem',\n    width: \"30rem\"\n  },\n  SearchImput: {\n    width: \"20rem\"\n  },\n  SearchButton: {\n    margin: '.5rem .5rem',\n    background: '#FFCC00',\n    color: \"#003366\",\n    '&:hover': {\n      background: \"#FFE166\"\n    }\n  },\n  ResultPaper: {\n    margin: '.5rem',\n    padding: '0.5rem',\n    width: '80rem'\n  }\n}));\n\nconst Componentes = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Paper elevation={3} className={classes.ResultPaper}>\n          <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell key={column.id} id={column.id} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        </Paper>\n      </Grid>\n  )\n};\n\nexport default Componentes;\n","import React, { useState } from \"react\";\nimport { makeStyles, \n          Paper, \n          Grid, \n          TextField, \n          Button,\n          Table,\n          TableBody,\n          TableCell,\n          TableContainer,\n          TableHead,\n          TableRow,\n          TablePagination\n        } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nimport NavigationBar from \"../Util/NavBar\";\nimport Componentes from './Componentes'\n\nconst columns = [\n  {\n    id: 'id',\n    label: \"id\",\n    minWidth: \"100\",\n    align: 'left',\n    format: value => value.toLocaleString() //toFixed(2),\n  },\n  {\n    id: 'Arbpl',\n    label: \"Arbpl\",\n    minWidth: \"100\",\n    align: 'left',\n    format: value => value.toLocaleString() //toFixed(2),\n  },\n  {\n    id: 'Aufnr',\n    label: \"Aufnr\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Bmsch',\n    label: \"Bmsch\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Eph',\n    label: \"Eph\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Gamng',\n    label: \"Gamng\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString(),\n  },\n  {\n    id: 'Gltrs',\n    label: \"Gltrs\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Gmein',\n    label: \"Gmein\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Gstrp',\n    label: \"Gstrp\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Plnbez',\n    label: \"Plnbez\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Plnnr',\n    label: \"Plnnr\",\n    minWidth: \"170\",\n    align: 'center',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Verid',\n    label: \"Verid\",\n    minWidth: \"170\",\n    align: 'center',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Vgw01',\n    label: \"Vgw01\",\n    minWidth: \"170\",\n    align: 'center',\n    format: value => value.toLocaleString()\n  },\n  {\n    id: 'Vornr',\n    label: \"Vornr\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  },{\n    id: 'Werks',\n    label: \"Werks\",\n    minWidth: \"170\",\n    align: 'left',\n    format: value => value.toLocaleString()\n  }\n];\n\nconst rows = [\n  {\n    id: 1,\n    Arbpl: \"CLAV-004\",\n    Aufnr: \"294633\",\n    Eph: \"2.51\",\n    Gamng: \"120.0\",\n    Gltrs: '2020-01-25',\n    Gmein: \"QQ\",\n    Gstrp: \"2020-01-23\",\n    Plnbez: 'CC001',\n    Plnnr: \"50001654\",\n    Verid: \"0005\",\n    Vgw01: \"8.400\",\n    Vornr: \"0010\",\n    Werks: \"1001\",\n    Bmsch: \"1000.0\"\n  },\n  {\n    id: 2,\n    Arbpl: \"CLAV-009\",\n    Aufnr: \"294633\",\n    Eph: \"12.5\",\n    Gamng: \"120.0\",\n    Gltrs: '2020-01-25',\n    Gmein: \"QQ\",\n    Gstrp: \"2020-01-23\",\n    Plnbez: 'CC001',\n    Plnnr: \"50001654\",\n    Verid: \"0005\",\n    Vgw01: \"80000\",\n    Vornr: \"0020\",\n    Werks: \"1001\",\n    Bmsch: \"1000.0\"\n  }\n];\n\n\nconst useStyles = makeStyles(theme => ({\n  rootContainer: {},\n  SearchPaper: {\n    margin: \"1rem 0 .5rem 0\",\n    padding: '.5rem',\n    width: \"30rem\"\n  },\n  SearchImput: {\n    width: \"20rem\"\n  },\n  SearchButton: {\n    margin: '.5rem .5rem',\n    background: '#FFCC00',\n    color: \"#003366\",\n    '&:hover': {\n      background: \"#FFE166\"\n    }\n  },\n  ResultPaper: {\n    margin: '.5rem',\n    padding: '0.5rem',\n    width: '80rem'\n  }\n}));\nconst OrdenProduccion = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Grid>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <NavigationBar />\n        <Paper elevation={3} className={classes.SearchPaper}>\n          <TextField \n            id=\"outlined-textarea\"\n            label=\"Busqueda\"\n            placeholder=\"Busqueda...\"\n            variant=\"outlined\"\n            className={classes.SearchImput}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.SearchButton}\n            startIcon={<Search />}\n          >\n            Buscar\n          </Button>\n        </Paper>\n      </Grid>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Paper elevation={3} className={classes.ResultPaper}>\n          <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell key={column.id} id={column.id} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        </Paper>\n      </Grid>\n      <Componentes/>\n    </Grid>\n  );\n};\n\nexport default OrdenProduccion;\n","import React, { useContext, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Button,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport MomentUtils from \"@date-io/moment\";\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport { insChatarraHeader, getChatarraPos } from '../../context/Api'\n\nconst useStyle = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n  },\n  formStyle: {\n    padding: \"1em 0\",\n    margin: \"1em 0\",\n  },\n  GridMain: {\n    margin: \"2.5em\",\n    paddin: \"1em\",\n  },\n  PtContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    border: \"1px solid lightgray\",\n    margin: \"2em 1em\",\n    padding: \".5em .2em\",\n    width: \"30em\",\n  },\n  grupoContainer: {\n    margin: \"1em 0\",\n  },\n  PaperStyle: {\n    padding: \"1em\",\n  },\n  SelectStyle: {\n    width: \"12em\",\n  },\n  InputTextStyle: {\n    width: \"12em\",\n    margin: \"1em 0\",\n  },\n  DatePick: {\n    margin: \".8em 0\",\n    width: \"12em\",\n  },\n  ButtonSection: {\n    margin: \".5em 0 0 -.5em\",\n  },\n  btnB: {\n    background: \"#003366\",\n    color: \"white\",\n    margin: \"1rem .5em\",\n    \"&:hover\": {\n      background: \"#015CB7\",\n    },\n  },\n\n  btnY: {\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    margin: \"1rem .5em\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n}));\n\nconst ChatarraHead = () => {\n  const classes = useStyle();\n  const AceroContex = useContext(GlobalContex);\n  const { SetChatarraPos, turnos, user, LoadChataraHeader } = AceroContex;\n  const [TodayDate, setTodayDate] = React.useState(new Date());\n\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    const {Fecha,Turno, UserC,  } = event.target.elements\n\n    const data = {\n      Fecha: Fecha.value,\n      Turno: parseInt(Turno.value),\n      Operador: parseInt(UserC.value),\n      Estatus: 'A',\n      UsrReg: user.CodigoEmp,\n      RegDate: new Date()\n    }\n    insChatarraHeader(data, (err, data)=>{\n      if(err){\n\n      }else {\n        LoadChataraHeader(data)\n        getChatarraPos(data.Id,(err, data)=> {\n            if(err) {\n\n            } else {\n              if(data.length>0){\n                SetChatarraPos(data)\n              }\n            }\n        })\n      }\n    })\n  };\n\n  const handleDateChange = (date) => {\n    setTodayDate(date);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={1}\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n        wrap=\"nowrap\"\n        className={classes.GridMain}\n      >\n        <h2>Chatarra</h2>\n        <Paper elevation={3} className={classes.PtContainer}>\n          <form onSubmit={handlerSubmit} className={classes.formStyle}>\n            <Grid item xs={10} sm={10} md={8} lg={6}>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                  <KeyboardDatePicker\n                    autoOk\n                    name=\"Fecha\"\n                    variant=\"inline\"\n                    inputVariant=\"outlined\"\n                    label=\"Seleccione Fecha\"\n                    format=\"MM/DD/YYYY\"\n                    className={classes.DatePick}\n                    value={TodayDate}\n                    InputAdornmentProps={{ position: \"end\" }}\n                    onChange={handleDateChange}\n                  />\n                </MuiPickersUtilsProvider>\n              </FormControl>\n            </Grid>\n            <Grid item xs={10} sm={10} md={8} lg={6}>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"Lturno\">Turnos</InputLabel>\n                  <Select\n                    native\n                    name=\"Turno\"\n                    label=\"Turnos\"\n                    id=\"Sturno\"\n                    className={classes.SelectStyle}\n                  >\n                    {turnos.map((turno) => {\n                      return (\n                        <option key={turno.id} value={turno.Id}>\n                          {turno.Descripcion}\n                        </option>\n                      );\n                    })}\n                  </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={10} sm={10} md={8} lg={6}>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <TextField\n                    id=\"usr\"\n                    name=\"UserC\"\n                    label=\"Operador\"\n                    variant=\"outlined\"\n                    className={classes.InputTextStyle}\n                  />\n                </FormControl>\n            </Grid>\n            <Grid className={classes.ButtonSection}>\n              <Button type=\"submit\" className={classes.btnB}>\n                Aceptar\n              </Button>\n              <Button type=\"reset\" className={classes.btnY}>\n                Cancelar\n              </Button>\n            </Grid>\n          </form>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nexport default ChatarraHead;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Fab,\n} from \"@material-ui/core\";\nimport { Add } from '@material-ui/icons'\nimport { GlobalContex } from \"../../context/GlobalState\";\nconst columns = [\n  {\n    id: \"Id\",\n    label: \"Posicion\",\n    minWidth: \"100\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(), //toFixed(2),\n  },\n  {\n    id: \"puestoTr\",\n    label: \"Linea Producción\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"PesoEntrada\",\n    label: \"Peso Entrada\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"PesoSalida\",\n    label: \"Peso Salida\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"PesoChatarra\",\n    label: \"Peso Chatarra\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"motivo\",\n    label: \"Motivo Chatarra\",\n    minWidth: \"200\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"tipochatarra\",\n    label: \"Tipo Chatarra\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Texto\",\n    label: \"Observación\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nlet rows = []\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"relative\"\n  },\n  FabStyle: {\n    position: 'absolute',\n    background: '#FFCC00',\n    color: '#003366',\n    right: '0',\n    top: '-4rem',\n    zIndex: '999',\n    '&:hover':{\n      background: \"#FFE166\"\n    }\n  },\n}));\n\nconst ChatarraPos = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const aceroContext = useContext(GlobalContex)\n  const { chatarraPos } = aceroContext\n  \n  useEffect(() => {\n    if (chatarraPos !== null && chatarraPos !== undefined) {\n      rows = chatarraPos\n    }\n  },[])\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return(\n    <Paper className={classes.root}>\n      <Link to=\"/chatarra/chatarForm\">\n        <Fab aria-label=\"add\" className={classes.FabStyle}>\n            <Add/>\n        </Fab>\n      </Link>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell key={column.id} id={column.id} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idreg}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  )\n\n};\n\nexport default ChatarraPos;\n","import React, { useContext } from \"react\";\nimport { Grid, Paper, Button, makeStyles } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { ArrowBackIosRounded } from \"@material-ui/icons\";\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport { sapSendChatarra } from '../../context/Api'\n\nconst useStyles = makeStyles((theme) => ({\n  PaperSite: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"2rem\",\n    margin: \"2rem\",\n    height: \"13rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      overflow: \"scroll\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      overflow: \"scroll\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      overflow: \"hiden\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      overflow: \"hiden\",\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      overflow: \"hiden\",\n    },\n  },\n  GridContainer: {},\n  GridSections: {\n    padding: \"2rem\",\n    margin: \"2rem\",\n  },\n  GridSideTable: {},\n  dividerStyle: {\n    margin: \".3rem\",\n  },\n\n  ButtonSection: {\n    bottom: \"0\",\n    left: \"39rem\",\n  },\n  btnB: {\n    background: \"#003366\",\n    color: \"white\",\n    margin: \".6em 0\",\n    marginBottom: \"-5rm\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \" #003499\",\n    },\n  },\n}));\n\nconst HeaderPanel = () => {\n  const classes = useStyles();\n  const AceroContex = useContext(GlobalContex);\n  const { chatarraHeader, chatarraPos, ClearChatarra  } = AceroContex;\n\n  let btn = null\n\n  const chatarraToSap = (e) =>{\n    e.preventDefault();\n    let date = new Date()\n    let dareg = new Date(chatarraHeader.Fecha)\n    let Posiciones = [];\n\n    const Header = {\n      DocDate : `${dareg.getFullYear()}${dareg.getMonth()+1}${dareg.getDate()}`,\n      PstngDate : `${date.getFullYear()}${date.getMonth()+1}${date.getDate()}`,\n      HeaderTxt : `Chatarra ${chatarraHeader.OperadorId}-${chatarraHeader.Operador}`\n    }\n\n    chatarraPos.map((p) => {\n      Posiciones.push({\n        Material: \"DCL001\",\n        Plant: \"1000\",\n        StgeLoc: \"0420\",\n        MoveType: \"913\",\n        EntryQnt: 1360,\n        EntryUom: \"KG\",\n        Costcenter: \"1000181080\",\n        MoveReas: 30\n      })\n    })\n\n    let ZgmAcerogmChatarra = {\n      Header,\n      Posiciones\n    }\n\n    sapSendChatarra(ZgmAcerogmChatarra, (err, data) =>{\n      console.log(data)\n    })\n  }\n\n  if(chatarraHeader.RegistroSap) {\n    btn = <Button className={classes.btnB} disabled>Enviar a Sap</Button>\n  } else {\n    btn = <Button className={classes.btnB} onClick={chatarraToSap}>Enviar a Sap</Button>\n  }\n\n  const handlerBack = (e) => {\n    e.preventDefault();\n    ClearChatarra()\n  };\n\n  return (\n    <>\n      <Paper elevation={4} className={classes.PaperSite}>\n        <Grid\n          spacing={2}\n          container\n          justify=\"flex-start\"\n          alignContent=\"space-between\"\n          wrap=\"wrap\"\n          direction=\"row\"\n        >\n          <Grid item>\n            <div>\n              <Button onClick={handlerBack}>\n                <ArrowBackIosRounded />\n              </Button>\n            </div>\n            <h3>Chatarra</h3>\n            <div>\n              <b>Fecha:</b> {moment(chatarraHeader.Fecha).format('L')}\n            </div>\n            <div>\n              <b>Turno:</b> {chatarraHeader.Turno}\n            </div>\n            <div>\n              <b>Operador:</b> {chatarraHeader.Operador}\n            </div>\n            <div>\n              <b>Registro Sap:</b> {chatarraHeader.RegistroSap}\n            </div>\n            <div>\n              {btn}\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nexport default HeaderPanel;\n","import React, { useContext, useEffect } from 'react'\nimport ChatarraHead from './ChatarraHead'\nimport ChatarraPos from './ChatarraPos'\nimport HeaderPanel from './HeaderPanel'\nimport NavigationBar from '../Util/NavBar'\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { GlobalContex } from '../../context/GlobalState'\nimport { GetMotivoChatarra, GetTipoChatarra } from '../../context/Api'\n\n\nconst Chatarra = () => {\n    const aceroContext = useContext(GlobalContex)\n    const { chatarraHeader, motivoChatara, tipoChatarra, ChatarraMotivo, ChatarraTipo } = aceroContext\n\n    let children \n\n    useEffect(() => {\n        if(tipoChatarra === null) {\n            GetTipoChatarra((err,data) => {\n                if(err){\n                    toast.error(\"Error al cargar tipo de chatarra\", {\n                        position: toast.POSITION.BOTTOM_RIGHT,\n                        autoClose: 3000\n                    });\n                }\n                else {\n                    ChatarraTipo(data)\n                }\n                \n            })\n        }\n\n        if(motivoChatara === null) {\n            GetMotivoChatarra((err, data) => {\n                if(err) {\n                    toast.error(\"Error al cargar el motivo de chatarra\", {\n                        position: toast.POSITION.BOTTOM_RIGHT,\n                        autoClose: 3000\n                    });\n                }else {\n                    ChatarraMotivo(data)\n                }\n            })\n        }\n    },[])\n    \n    if(chatarraHeader == null){\n        children = <ChatarraHead/>\n    } else {\n        children = <div>\n                <HeaderPanel/>\n                <ChatarraPos/>\n            </div>\n    }\n\n    return (\n        <div>\n            <NavigationBar/>\n            {children}\n        </div>\n    )\n}\n\nexport default Chatarra\n","import \"moment\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport {\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Select,\n  makeStyles,\n  InputLabel,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport { insChatarraPos } from \"../../context/Api\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    overflow: \"scroll\",\n  },\n  LogoSize: {\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"11rem\",\n      heigth: \"2rem\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"16.5rem\",\n      heigth: \"3rem\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"22rem\",\n      heigth: \"4rem\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {},\n  },\n  btnB: {\n    background: \"#003366\",\n    color: \"white\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#015CB7\",\n    },\n  },\n  btnY: {\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    margin: \"0 .5em\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n  SelectStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n  InputTextStyle: {\n    margin: \".5rem 0\",\n    width: \"15rem\",\n  },\n}));\n\nconst ChatarraForm = () => {\n  const classes = useStyle();\n  const aceroContext = useContext(GlobalContex);\n  const history = useHistory()\n  const {\n    userInfo,\n    chatarraHeader,\n    user,\n    motivoChatara,\n    tipoChatarra,\n    chatarraPos,\n  } = aceroContext;\n  const puestos = userInfo.map((puesto) => {\n    return {\n      id: puesto.PuestoTrId,\n      Descrit: puesto.PuestoTr,\n      TypeNot: puesto.TipoNotif,\n    };\n  });\n\n  const HandlerClose = (e) => {\n    e.preventDefault();\n    history.push(\"/chatarra\")\n  }\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      puestotr,\n      tipoChatarra,\n      PesoEnt,\n      PesoSal,\n      motchatarra,\n      Texto,\n    } = e.target.elements;\n\n    const data = {\n      HeaderId: chatarraHeader.Id,\n      PuestoTr: puestotr.value,\n      PesoEntrada: PesoEnt.value,\n      PesoSalida: PesoSal.value,\n      PesoChatarra: parseInt(PesoEnt.value) - parseInt(PesoSal.value),\n      TipoChatarra: tipoChatarra.value,\n      MotivoChatarra: motchatarra.value,\n      Texto: Texto.value,\n      UsrReg: user.CodigoEmp,\n      RegDate: new Date(),\n      UpdDate: new Date(),\n    };\n\n    insChatarraPos(data, (err, data) => {\n      if (err) {\n      } else {\n        chatarraPos(data);\n        history.push(\"/chatarra\")\n      }\n    });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={1}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.root}\n      >\n        <Grid item xs={10} sm={8} md={6} lg={6}>\n          <Paper elevation={3}>\n            <Grid\n              container\n              spacing={1}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              className={classes.root}\n            >\n              <form onSubmit={onFormSubmit}>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"SPtr\">Puesto de Trabajo</InputLabel>\n                    <Select\n                      native\n                      label=\"Puesto de Trabajo\"\n                      name=\"puestotr\"\n                      className={classes.SelectStyle}\n                    >\n                      <option value=\"0\"> </option>\n                      {puestos.map((p) => {\n                        return (\n                          <option key={p.id} value={p.id}>\n                            {p.Descrit}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"STchatarra\">Tipo Chatarra</InputLabel>\n                    <Select\n                      native\n                      label=\"Tipo Chatarra\"\n                      name=\"tipoChatarra\"\n                      className={classes.SelectStyle}\n                    >\n                      <option value=\"0\"> </option>\n                      {tipoChatarra.map((t) => {\n                        return (\n                          <option key={t.Id} value={t.Id}>\n                            {t.Denominacion}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"PesoEnt\"\n                        name=\"PesoEnt\"\n                        label=\"Peso Entrada\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\n                      <TextField\n                        id=\"PesoSal\"\n                        name=\"PesoSal\"\n                        label=\"Peso Salida\"\n                        type=\"number\"\n                        className={classes.InputTextStyle}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <InputLabel id=\"SMChatarra\">Motivo Chatarra</InputLabel>\n                    <Select\n                      native\n                      label=\"Motivo Chatarra\"\n                      name=\"motchatarra\"\n                      className={classes.SelectStyle}\n                    >\n                      <option value=\"0\"> </option>\n                      {motivoChatara.map((p) => {\n                        return (\n                          <option key={p.Id} value={p.Id}>\n                            {p.Denominacion}\n                          </option>\n                        );\n                      })}\n                    </Select>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={1} alignItems=\"center\">\n                  <Grid item>\n                    <TextField\n                      id=\"Txt\"\n                      name=\"Texto\"\n                      label=\"Texto\"\n                      className={classes.InputTextStyle}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.btnB}\n                      type=\"submit\"\n                    >\n                      Aceptar\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.btnY}\n                      type=\"reset\"\n                      onClick={HandlerClose}\n                    >\n                      Cancelar\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ChatarraForm;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Button,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { Search } from \"@material-ui/icons\";\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport MomentUtils from \"@date-io/moment\";\n\nimport { getDemoras } from '../../context/Api'\n\nconst useStyles = makeStyles((theme) => ({\n  PaperSite: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"2rem\",\n    margin: \"2rem\",\n    height: \"4rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      overflow: \"scroll\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      overflow: \"scroll\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      overflow: \"hiden\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      overflow: \"hiden\",\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      overflow: \"hiden\",\n    },\n  },\n  DatePick: {},\n  formStyle: {\n    padding: \"1em 0\",\n    margin: \"1em 0\",\n  },\n  SelectStyle: {\n    width: \"12em\",\n  },\n  GridContainer: {},\n  GridSections: {\n    padding: \"2rem\",\n    margin: \"2rem\",\n  },\n  GridSideTable: {},\n  dividerStyle: {\n    margin: \".3rem\",\n  },\n\n  ButtonSection: {\n    bottom: \"0\",\n    left: \"39rem\",\n  },\n  btnB: {\n    background: \"red\",\n    color: \"white\",\n    margin: \"0 .5em\",\n    marginBottom: \"-5rm\",\n    \"&:hover\": {\n      color: \"black\",\n      background: \" #ffcccb\",\n    },\n  },\n  buttonSearch: {\n    marginTop: \"0.2rem\",\n  },\n}));\n\nconst SearchDemora = () => {\n  const classes = useStyles();\n  const [FechaI, SetFechaI] = useState(new Date());\n  const [FechaF, SetFechaF] = useState(new Date());\n  const AceroContex = useContext(GlobalContex);\n  const { userInfo, LoadDemora } = AceroContex;\n  const puestos = userInfo.map((puesto) => {\n    return {\n      id: puesto.PuestoTrId,\n      Descrit: puesto.PuestoTr,\n      TypeNot: puesto.TipoNotif,\n    };\n  });\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    \n    const { ptr } = e.target.elements\n    const demora = {\n      FechaI,\n      FechaF,\n      PtrId: ptr.value\n    }\n    getDemoras(demora,(err, res)=> {\n      if(err) {\n\n      } else {\n        LoadDemora(res)\n      }\n    } )\n  };\n\n  const handleFICHange = (date) => {\n    SetFechaI(date._d);\n  };\n\n  const handleFFCHange = (date) => {\n    SetFechaF(date._d);\n  };\n\n  return (\n    <>\n      <Paper elevation={4} className={classes.PaperSite}>\n        <form onSubmit={handlerSubmit} className={classes.formStyle}>\n          <Grid\n            spacing={3}\n            container\n            justify=\"flex-start\"\n            alignContent=\"space-around\"\n            wrap=\"wrap\"\n            direction=\"row\"\n          >\n            <Grid item>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardDatePicker\n                  autoOk\n                  name=\"FechaI\"\n                  variant=\"inline\"\n                  inputVariant=\"outlined\"\n                  label=\"Seleccione Fecha Inicial\"\n                  format=\"MM/DD/YYYY\"\n                  className={classes.DatePick}\n                  value={FechaI}\n                  InputAdornmentProps={{ position: \"end\" }}\n                  onChange={handleFICHange}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardDatePicker\n                  autoOk\n                  name=\"FechaF\"\n                  variant=\"inline\"\n                  inputVariant=\"outlined\"\n                  label=\"Seleccione Fecha Final\"\n                  format=\"MM/DD/YYYY\"\n                  className={classes.DatePick}\n                  value={FechaF}\n                  InputAdornmentProps={{ position: \"end\" }}\n                  onChange={handleFFCHange}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"LPt\">Puesto de Trabajo</InputLabel>\n                <Select\n                  id=\"ptr\"\n                  name=\"ptr\"\n                  native\n                  label=\"Puesto de Trabajo\"\n                  className={classes.SelectStyle}\n                >\n                  {puestos.map((puesto) => {\n                    return (\n                      <option\n                        key={puesto.Descrit}\n                        value={puesto.id}\n                        data-type={puesto.TypeNot}\n                      >\n                        {puesto.Descrit}\n                      </option>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                className={classes.buttonSearch}\n                startIcon={<Search />}\n              >\n                Buscar\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </>\n  );\n}\n\nexport default SearchDemora;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n} from \"@material-ui/core\";\nimport { GlobalContex } from \"../../context/GlobalState\";\nimport moment from \"moment\";\nconst columns = [\n  {\n    id: \"HoraInicio\",\n    label: \"Hora Inicio\",\n    minWidth: \"195\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"HoraFin\",\n    label: \"Hora Fin\",\n    minWidth: \"195\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Tiempo\",\n    label: \"Tiempo Parada\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"TiempoStandard\",\n    label: \"Tiempo Programado\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"cargo\",\n    label: \"Cargo\",\n    minWidth: \"200\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"area_falla\",\n    label: \"Area Parada\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Equipo\",\n    label: \"Equipo Parada\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"CausaFalla\",\n    label: \"Causa Parada\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"MP_Perd\",\n    label: \"PLQ Perdidas\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"MP_Desc\",\n    label: \"PLQ Descartado\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Orden\",\n    label: \"Orden Producción\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Material\",\n    label: \"Producto\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Perfil\",\n    label: \"Seccion\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"ComentarioDemora\",\n    label: \"Observacion\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"gatillo\",\n    label: \"Gatillo\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"EstadoTF\",\n    label: \"Realizar TF\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Nota\",\n    label: \"Comentario Demora\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nlet rows = [];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  FabStyle: {\n    position: \"absolute\",\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    right: \"0\",\n    top: \"-4rem\",\n    zIndex: \"999\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n}));\nconst DataDemora = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const AceroContex = useContext(GlobalContex);\n  const { regDemora } = AceroContex;\n\n  useEffect(()=>{\n    if(regDemora != null && regDemora !== undefined) {\n      regDemora.map((reg) => {\n        reg.HoraInicio = moment(new Date(reg.HoraInicio)).format(\"LT\");\n        reg.HoraFin = moment(new Date(reg.HoraFin)).format(\"LT\");\n        return reg;\n      });\n      console.log(\"demora row\")\n      rows = regDemora\n    }\n  },[])\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  id={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default DataDemora;\n","import React from 'react'\n\nimport NavigationBar from '../Util/NavBar'\nimport SearchDemora from './SearchDemora'\nimport DataDemora from './DataDemora'\nconst Demora = () => {\n    return (\n        <>\n          <NavigationBar/>\n          <SearchDemora/>\n          <DataDemora/>\n        </>\n    )\n}\n\nexport default Demora\n","import React, { useState, useContext } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Button,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { NewReleases } from \"@material-ui/icons\";\nimport MomentUtils from \"@date-io/moment\";\nimport { GlobalContex } from \"../../context/GlobalState\";\n\nconst useStyles = makeStyles((theme) => ({\n  PaperSite: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"2rem\",\n    margin: \"2rem\",\n    height: \"4rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      overflow: \"scroll\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      overflow: \"scroll\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      overflow: \"hiden\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      overflow: \"hiden\",\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      overflow: \"hiden\",\n    },\n  },\n  DatePick: {},\n  formStyle: {\n    padding: \"1em 0\",\n    margin: \"1em 0\",\n  },\n  SelectStyle: {\n    width: \"12em\",\n  },\n  GridContainer: {},\n  GridSections: {\n    padding: \"2rem\",\n    margin: \"2rem\",\n  },\n  GridSideTable: {},\n  dividerStyle: {\n    margin: \".3rem\",\n  },\n\n  ButtonSection: {\n    bottom: \"0\",\n    left: \"39rem\",\n  },\n  btnB: {\n    background: \"red\",\n    color: \"white\",\n    margin: \"0 .5em\",\n    marginBottom: \"-5rm\",\n    \"&:hover\": {\n      color: \"black\",\n      background: \" #ffcccb\",\n    },\n  },\n  buttonSearch: {\n    marginTop: \"0.2rem\",\n  },\n}));\n\nconst HeadSearch = () => {\n  const classes = useStyles();\n  const [Fecha, SetFecha] = useState(new Date());\n  const AceroContex = useContext(GlobalContex);\n  const { userInfo } = AceroContex;\n  const puestos = userInfo.map((puesto) => {\n    return {\n      id: puesto.PuestoTrId,\n      Descrit: puesto.PuestoTr,\n      TypeNot: puesto.TipoNotif,\n    };\n  });\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const handleFechaCHange = (date) => {\n    SetFecha(date._d);\n  };\n\n  return (\n    <>\n      <Paper elevation={4} className={classes.PaperSite}>\n        <form onSubmit={handlerSubmit} className={classes.formStyle}>\n          <Grid\n            spacing={3}\n            container\n            justify=\"flex-start\"\n            alignContent=\"space-around\"\n            wrap=\"wrap\"\n            direction=\"row\"\n          >\n            <Grid item>\n              <MuiPickersUtilsProvider utils={MomentUtils}>\n                <KeyboardDatePicker\n                  autoOk\n                  name=\"Fecha\"\n                  variant=\"inline\"\n                  inputVariant=\"outlined\"\n                  label=\"Seleccione Fecha Inicial\"\n                  format=\"MM/DD/YYYY\"\n                  className={classes.DatePick}\n                  value={Fecha}\n                  InputAdornmentProps={{ position: \"end\" }}\n                  onChange={handleFechaCHange}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"LPt\">Puesto de Trabajo</InputLabel>\n                <Select\n                  id=\"ptr\"\n                  name=\"ptr\"\n                  native\n                  label=\"Puesto de Trabajo\"\n                  className={classes.SelectStyle}\n                >\n                  {puestos.map((puesto) => {\n                    return (\n                      <option\n                        key={puesto.Descrit}\n                        value={puesto.id}\n                        data-type={puesto.TypeNot}\n                      >\n                        {puesto.Descrit}\n                      </option>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                className={classes.buttonSearch}\n                startIcon={<NewReleases />}\n              >\n                Generar\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </>\n  );\n};\n\nexport default HeadSearch;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  makeStyles,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { Pageview } from '@material-ui/icons'\n\n\nimport NotifPos from './NotifPos'\n\nconst columns = [\n  {\n    id: \"Orden\",\n    label: \"Orden\",\n    minWidth: \"175\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"NumOperacion\",\n    label: \"Operacion\",\n    minWidth: \"175\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Fecha\",\n    label: \"Fecha\",\n    minWidth: \"195\",\n    align: \"left\",\n    format: (value) => moment(value.toLocaleString()).format('L'), //value.toLocaleString()\n  },\n  {\n    id: \"Centro\",\n    label: \"Centro\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"UmPt\",\n    label: \"Und Medida\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"CantNot\",\n    label: \"CantNot\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"HoraMaquina\",\n    label: \"Hora Maquina\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"UndHM\",\n    label: \"Und HM\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"HoraHombre\",\n    label: \"Hora Hombre\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"UndHH\",\n    label: \"Und HH\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Turno\",\n    label: \"Turno\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"UnTurno\",\n    label: \"Seccion\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"ComentarioDemora\",\n    label: \"Observacion\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"gatillo\",\n    label: \"Gatillo\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"EstadoTF\",\n    label: \"Realizar TF\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Nota\",\n    label: \"Comentario Demora\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Id\",\n    label: \"...\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => <Button><Pageview/> </Button>,\n  },\n];\n\nlet rows = [];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  FabStyle: {\n    position: \"absolute\",\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    right: \"0\",\n    top: \"-4rem\",\n    zIndex: \"999\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n}));\n\nconst HeaderTable = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  id={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default HeaderTable;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n} from \"@material-ui/core\";\n\nconst columns = [\n  {\n    id: \"Centro\",\n    label: \"Centro\",\n    minWidth: \"175\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Almacen\",\n    label: \"Almacen\",\n    minWidth: \"175\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"clmv\",\n    label: \"clmv\",\n    minWidth: \"195\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Cant\",\n    label: \"Cant\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"UndMed\",\n    label: \"Und Medida\",\n    minWidth: \"170\",\n    align: \"left\",\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: \"Batch\",\n    label: \"Batch\",\n    minWidth: \"170\",\n    align: \"center\",\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nlet rows = [];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  FabStyle: {\n    position: \"absolute\",\n    background: \"#FFCC00\",\n    color: \"#003366\",\n    right: \"0\",\n    top: \"-4rem\",\n    zIndex: \"999\",\n    \"&:hover\": {\n      background: \"#FFE166\",\n    },\n  },\n}));\n\nconst NotifPos = () => {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  id={column.id}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 50, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n\n};\n\nexport default NotifPos;\n","import React from 'react'\n\nimport NavigationBar from '../Util/NavBar'\nimport HeaderSearch from './HeadSearch'\nimport HeaderTable from './HeaderTable'\n\nconst Index = () => {\n    return (\n        <>\n          <NavigationBar/>\n          <HeaderSearch/>  \n          <HeaderTable/>\n        </>\n    )\n}\n\nexport default Index\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport PublicRoute from './components/Util/PublicRoute'\nimport PrivateRoute from './components/Util/PrivateRoute'\n\nimport Login from \"./components/Login/Index\";\nimport Test from \"./components/Util/DrawerMenu\";\nimport Dashboard from \"./components/Dashboard/Index\";\nimport Registro from \"./components/Registro/Index\";\nimport ProdForm from \"./components/Registro/ProdForm\"\nimport ProdCompForm from \"./components/Registro/DataCompForm\"\nimport ParadaForm from \"./components/Registro/ParadaForm\"\nimport OrdenProduccion from \"./components/OrdenProduccion/Index\";\nimport Chatarra from \"./components/Chatarra/index\"\nimport ChatarraForm from \"./components/Chatarra/ChatarraForm\"\nimport Demora from \"./components/Demora/Index\"\nimport Notif from \"./components/Notif/Index\"\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <div>\n            <Switch>\n                <PublicRoute restricted={false} component={Login} exact path=\"/\" />\n                <Route exact path=\"/test\">\n                  <Test />\n                </Route>\n                <PrivateRoute component={Dashboard} exact path=\"/dashboard\" />\n                <PrivateRoute component={Registro} exact path=\"/registro\" />\n                <PrivateRoute component={ProdForm} exact path=\"/registro/prodreg\"/>\n                <PrivateRoute component={ProdCompForm} exact path=\"/registro/prodcomp\"/>\n                <PrivateRoute component={ParadaForm} exact path=\"/registro/paradreg\" />\n                <PrivateRoute component={OrdenProduccion} exact path=\"/ordenprod\" />\n                <PrivateRoute component={Chatarra} exact path=\"/chatarra\"/>\n                <PrivateRoute component={ChatarraForm} exact path=\"/chatarra/chatarForm\"/>\n                <PrivateRoute component={Demora} exact path=\"/demora\"/>\n                <PrivateRoute component={Notif} exact path=\"/notif\" />\n          </Switch>\n        </div>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}