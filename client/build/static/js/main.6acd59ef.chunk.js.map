{"version":3,"sources":["context/AppReducer.js","context/Actions.js","context/GlobalState.js","components/Util/PublicRoute.js","components/Util/PrivateRoute.js","context/Api.js","components/Login/Reset.js","components/Login/Index.js","components/Util/DrawerMenu.js","components/Util/NavBar.js","components/Util/LogoutPopup.js","components/Dashboard/Index.js","components/Registro/PuestoTr.js","components/Registro/HeaderReg.js","components/Registro/DatosProduccion.js","components/Registro/DatosParada.js","components/Registro/DataPanel.js","components/Registro/DataCompPanel.js","components/Registro/Index.js","components/Registro/ProdForm.js","components/Registro/DataCompForm.js","components/Registro/ParadaForm.js","components/OrdenProduccion/Componentes.js","components/OrdenProduccion/Index.js","components/Chatarra/ChatarraHead.js","components/Chatarra/ChatarraPos.js","components/Chatarra/HeaderPanel.js","components/Chatarra/index.js","components/Chatarra/ChatarraForm.js","components/Demora/SearchDemora.js","components/Demora/DataDemora.js","components/Demora/Index.js","components/Notif/HeadSearch.js","components/Notif/HeaderTable.js","components/Notif/NotifPos.js","components/Notif/Index.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","puestosTrabajo","payload","user","isLogin","userInfo","turnos","grupos","integrantesGrp","isLam","headerReg","regproddata","regparaddata","ordenes","cargos","fallaAreas","chatarraHeader","chatarraPos","tipoChatarra","motivoChatara","regDemora","compNumber","regprodcompdata","InitialState","equipos","LocalState","JSON","parse","localStorage","getItem","GlobalContex","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","getPuestoTrabajo","ptrabajo","getTurnos","getGrupos","getIntegrantesGrupos","lista","setUserLogin","setHeaderRegActive","header","r","PuestoTrabajoId","setUserInfo","info","LogoutUser","removeItem","clearHeaderRegActive","loadRegProdData","regProData","loadRegPadadData","getOrdenes","LoadCargos","LoadFallaArea","LoadChataraHeader","ClearChatarra","ChatarraMotivo","motivo","ChatarraTipo","tipo","SetChatarraPos","chaPos","LoadDemora","demora","ClearDemora","LoadRegCompData","CompData","SetNumComp","Num","ClearRegComp","PublicRoute","Component","component","restricted","rest","useContext","render","props","to","PrivateRoute","base","getOdenenComp","Orden","callback","axios","post","headers","then","response","data","catch","error","useStyle","makeStyles","theme","root","padding","spacing","LogPanel","textAlign","FormCenter","margin","InputTextStyle","marginBottom","FormInputs","border","ButtonArea","btnB","background","color","btnY","LogoSize","breakpoints","down","width","heigth","up","Reset","HandlerClose","classes","history","useHistory","Grid","container","direction","justify","alignItems","className","item","xs","sm","md","lg","Paper","elevation","src","alt","onSubmit","e","preventDefault","push","AccountCircleRounded","TextField","id","name","label","CodeRounded","Tooltip","title","placement","VpnKeyRounded","Button","onClick","LinkArea","position","modalPanel","MainModal","Login","AceroContext","useState","open","setOpen","handleClose","window","location","origin","target","elements","password","CodigoEmp","Password","LoginUser","parseInt","logininfo","toast","POSITION","BOTTOM_RIGHT","console","log","message","undefined","length","warn","wrap","variant","href","Modal","onClose","aria-labelledby","aria-describedby","useStyles","list","fullList","linkStyle","textDecoration","userPanel","height","userSection","BtnLogout","DrawerMenu","draw","onToggle","onHandlerLogout","Drawer","role","onKeyDown","AccountCircle","codigoEmp","nombres","List","ListItem","button","ListItemIcon","Note","ListItemText","primary","Divider","NextWeek","startIcon","PowerSettingsNew","flexGrow","menuButton","marginRight","logoStyles","marginLeft","NavBar","setDraw","toggleDrawer","event","key","AppBar","Toolbar","IconButton","edge","aria-label","Menu","Typography","LogoutPopup","warnTimeout","logoutTimeout","autoClose","logoutAction","logout","setTimeout","setTimeouts","clearTimeouts","clearTimeout","events","resetTimeout","i","addEventListener","removeEventListener","Dashboard","err","get","getCargos","getApiOdenenes","getApiGrupos","getApiIntegrantesGrp","formControl","minWidth","formStyle","GridMain","paddin","PtContainer","display","justifyContent","alignContent","grupoContainer","PaperStyle","SelectStyle","DatePick","ButtonSection","PuestoTr","AceroContex","React","Date","TodayDate","setTodayDate","puestos","map","puesto","PuestoTrId","Descrit","TypeNot","TipoNotif","listaGrupos","grp","grupo","Id","arr","prop","nuevoArray","lookup","eliminarObjetosDuplicados","Set","Ptr","Fecha","Grupo","Turno","GrupoId","TurnoId","Estatus","UsrReg","RegDate","res","FormControl","InputLabel","Select","native","data-type","utils","MomentUtils","autoOk","inputVariant","format","InputAdornmentProps","onChange","date","turno","Descripcion","PaperSite","flexDirection","flexWrap","overflow","GridContainer","GridSections","GridSideTable","dividerStyle","bottom","left","HeaderReg","aceroContext","listaGrp","nombre","Nombres","filter","g","headerid","getRegParada","ArrowBackIosRounded","moment","Puesto","l","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Delete","rows","FabStyle","right","top","zIndex","DatosProduccion","page","setPage","rowsPerPage","setRowsPerPage","columns","align","toLocaleString","data-Id","handleGetPrima","Pageview","handleAddMPrima","Edit","currentTarget","dataset","PosProdId","reg","Hora","Fab","Add","stickyHeader","column","style","slice","row","hover","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","DatosParada","red","horaI","horaF","idreg","TabPanel","index","other","hidden","Box","p","a11yProps","backgroundColor","palette","paper","navTapStyle","DataPanel","setValue","Tabs","newValue","Tab","DataProduccion","DataCompPanel","Registro","subChildren","ProdFrom","hora","setHora","mprima","setMprima","comb","setComb","Lam","c","proddat","orden","consacumulado","prodacumulado","observ","combustible","conscombustible","torden","o","HeaderRegId","OrdenProdId","MPrima","PT_UME","PT_UMB","Notas","EPH","TotalComb","Total_Potencia","nativeEvent","selectedIndex","text","prima","Componente","KeyboardButtonProps","multiline","DataCompForm","ParadaForm","HoraInicio","setHoraInicio","HoraFin","setHoraFin","subArea","setSubArea","lugarFalla","setLugarFalla","setEquipos","regParadaD","PlqPerd","PlqDesc","InCargo","SeArea","SeSubArea","SELugarF","SEquipo","SOrden","Observ","HoraI","HoraF","Cargo","AreaFallaId","LugarAveriaId","Motivo","MpPerd","MpDesc","cargo","Codigo","AreaId","areaid","area","Denominacion","SubArea","subAreaid","sub","lugarId","Lug","eq","Idnrk","Aufnr","Meins","rootContainer","SearchPaper","SearchImput","SearchButton","ResultPaper","Componentes","Arbpl","Eph","Gamng","Gltrs","Gmein","Gstrp","Plnbez","Plnnr","Verid","Vgw01","Vornr","Werks","Bmsch","OrdenProduccion","placeholder","Search","ChatarraHead","UserC","ChatarraHeader","insChatarraHeader","Operador","HeaderId","ChatarraPos","HeaderPanel","btn","RegistroSap","disabled","dareg","Posiciones","Header","DocDate","getFullYear","getMonth","getDate","PstngDate","HeaderTxt","OperadorId","Material","Plant","StgeLoc","MoveType","EntryQnt","EntryUom","Costcenter","MoveReas","ZgmAcerogmChatarra","sapSendChatarra","Chatarra","GetMotivoChatarra","ChatarraForm","puestotr","PesoEnt","PesoSal","motchatarra","Texto","PesoEntrada","PesoSalida","PesoChatarra","TipoChatarra","MotivoChatarra","UpdDate","t","buttonSearch","marginTop","SearchDemora","FechaI","SetFechaI","FechaF","SetFechaF","ptr","getDemoras","PtrId","_d","DataDemora","Demora","HeadSearch","SetFecha","NewReleases","HeaderTable","Index","App","exact","path","ProdForm","ProdCompForm","Notif","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6acd59ef.chunk.js","sourcesContent":["import {\r\n    GET_PUESTOS_TRABAJO,\r\n    USER_INFO,\r\n    USER_LOGIN,\r\n    LOGOUT,\r\n    GET_TURNOS,\r\n    GET_GRUPOS,\r\n    GET_INTEGRANTES_GRUPOS,\r\n    LOAD_HEADER_REG,\r\n    GET_REG_PARAD_DATA,\r\n    CLEAR_HEADER_REG,\r\n    IS_LAM,\r\n    GET_REG_PROD_DATA,\r\n    GET_ORDENES,\r\n    GET_CARGOS,\r\n    LOAD_FALLA_AREA,\r\n    LOAD_CHATARRA,\r\n    CLEAR_CHATARRA,\r\n    LOAD_TIPOCHATARRA,\r\n    LOAD_MOTIVOCHATERRA,\r\n    LOAD_CHATARRA_POS,\r\n    LOAD_DEMORA,\r\n    CLEAR_DEMORA,\r\n    LOAD_REG_COMP_DATA,\r\n    LOAD_COMP_NUMBER,\r\n    CLEAR_REG_COMP_DATA\r\n    \r\n} from './Actions'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_PUESTOS_TRABAJO:\r\n            return {\r\n                ...state,\r\n                puestosTrabajo: [action.payload, ...state.puestosTrabajo]\r\n            }\r\n        case USER_LOGIN:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isLogin: true\r\n            }\r\n        case USER_INFO:\r\n            return {\r\n                ...state,\r\n                userInfo: action.payload\r\n            }\r\n        case LOGOUT: \r\n            return {\r\n                state: action.payload\r\n            }\r\n        \r\n        case GET_TURNOS: \r\n            return {\r\n                ...state,\r\n                turnos: action.payload\r\n                }\r\n        case GET_GRUPOS:\r\n            return {\r\n                ...state,\r\n                grupos: action.payload\r\n            }\r\n        case GET_INTEGRANTES_GRUPOS:\r\n            return {\r\n                ...state,\r\n                integrantesGrp: action.payload\r\n            }\r\n        case IS_LAM:\r\n            return {\r\n                ...state,\r\n                isLam: action.payload\r\n            }\r\n        case LOAD_HEADER_REG:\r\n            return {\r\n                ...state,\r\n                headerReg: action.payload\r\n            }\r\n        case CLEAR_HEADER_REG:\r\n            return {\r\n                ...state,\r\n                headerReg: null,\r\n                regproddata: null,\r\n                regparaddata: null,\r\n            }\r\n        case GET_REG_PROD_DATA:\r\n            return {\r\n                ...state,\r\n                regproddata: action.payload\r\n            }\r\n        case GET_ORDENES:\r\n            return {\r\n                ...state,\r\n                ordenes: action.payload\r\n            }\r\n        case GET_CARGOS:\r\n            return {\r\n                ...state,\r\n                cargos: action.payload\r\n            }\r\n        case LOAD_FALLA_AREA:\r\n            return {\r\n                ...state,\r\n                fallaAreas: action.payload\r\n            }\r\n        case GET_REG_PARAD_DATA:\r\n            return {\r\n                ...state,\r\n                regparaddata: action.payload\r\n            }\r\n        case LOAD_CHATARRA:\r\n            return {\r\n                ...state,\r\n                chatarraHeader: action.payload\r\n            }\r\n        case CLEAR_CHATARRA:\r\n            return {\r\n                ...state,\r\n                chatarraHeader: null,\r\n                chatarraPos: null\r\n            }\r\n        case LOAD_TIPOCHATARRA: \r\n            return {\r\n                ...state,\r\n                tipoChatarra: action.payload\r\n            }\r\n        case LOAD_MOTIVOCHATERRA: \r\n            return {\r\n                ...state,\r\n                motivoChatara: action.payload\r\n            }\r\n        case LOAD_CHATARRA_POS:\r\n            return {\r\n                ...state,\r\n                chatarraPos: action.payload\r\n            }\r\n        case LOAD_DEMORA:\r\n            return {\r\n                ...state,\r\n                regDemora: action.payload\r\n            }\r\n        case CLEAR_DEMORA:\r\n            return {\r\n                ...state,\r\n                regDemora: null\r\n            }\r\n        case LOAD_COMP_NUMBER:\r\n            return {\r\n                ...state,\r\n                compNumber: action.payload\r\n            }\r\n        case LOAD_REG_COMP_DATA:\r\n            return {\r\n                ...state,\r\n                regprodcompdata: action.payload\r\n            }\r\n        case CLEAR_REG_COMP_DATA:\r\n            return {\r\n                ...state,\r\n                regprodcompdata: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const GET_PUESTOS_TRABAJO = 'GET_PUESTOS_TRABAJO'\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_INFO = 'USER_INFO'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const GET_TURNOS = 'GET_TURNOS'\r\nexport const GET_GRUPOS = 'GET_GRUPOS'\r\nexport const GET_INTEGRANTES_GRUPOS = 'GET_INTEGRANTES_GRUPOS'\r\nexport const LOAD_HEADER_REG = 'LOAD_HEADER_REG'\r\nexport const CLEAR_HEADER_REG = 'CLEAR_HEADER_REG'\r\nexport const IS_LAM = 'IS_LAM'\r\nexport const GET_REG_PROD_DATA = 'GET_REG_PROD_DATA'\r\nexport const GET_ORDENES = 'GET_ORDENES'\r\nexport const GET_REG_PARAD_DATA = 'GET_REG_PARAD_DATA' \r\nexport const GET_CARGOS = 'GET_CARGOS'\r\nexport const LOAD_FALLA_AREA = 'LOAD_FALLA_AREA'\r\nexport const LOAD_CHATARRA = 'LOAD_CHATARRA'\r\nexport const CLEAR_CHATARRA = 'CLEAR_CHATARRA'\r\nexport const LOAD_TIPOCHATARRA = 'LOAD_TIPOCHATARRA'\r\nexport const LOAD_MOTIVOCHATERRA = 'LOAD_MOTIVOCHATERRA'\r\nexport const LOAD_CHATARRA_POS = 'LOAD_CHATARRA_POS'\r\nexport const LOAD_DEMORA = 'LOAD_DEMORA'\r\nexport const CLEAR_DEMORA = 'CLEAR_DEMORA'\r\nexport const LOAD_REG_COMP_DATA = 'LOAD_REG_COMP_DATA'\r\nexport const LOAD_COMP_NUMBER = 'LOAD_COMP_NUMBER'\r\nexport const CLEAR_REG_COMP_DATA ='CLEAR_REG_COMP_DATA'\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport {\r\n    GET_PUESTOS_TRABAJO,\r\n    USER_LOGIN,\r\n    USER_INFO,\r\n    LOGOUT,\r\n    GET_TURNOS,\r\n    GET_GRUPOS,\r\n    GET_INTEGRANTES_GRUPOS,\r\n    LOAD_HEADER_REG,\r\n    CLEAR_HEADER_REG,\r\n    IS_LAM,\r\n    GET_REG_PROD_DATA,\r\n    GET_ORDENES,\r\n    GET_REG_PARAD_DATA,\r\n    GET_CARGOS,\r\n    LOAD_FALLA_AREA,\r\n    LOAD_CHATARRA,\r\n    CLEAR_CHATARRA,\r\n    LOAD_MOTIVOCHATERRA,\r\n    LOAD_TIPOCHATARRA,\r\n    LOAD_CHATARRA_POS,\r\n    LOAD_DEMORA,\r\n    CLEAR_DEMORA,\r\n    LOAD_COMP_NUMBER,\r\n    LOAD_REG_COMP_DATA,\r\n    CLEAR_REG_COMP_DATA\r\n} from \"./Actions\";\r\n\r\nconst InitialState = {\r\n  puestosTrabajo: [],\r\n    user: {},\r\n    turnos: null,\r\n    isLam: false,\r\n    grupos: null,\r\n    cargos: null,\r\n    equipos: null,\r\n    integrantesGrp: null,\r\n    isLogin: false,\r\n    userInfo: [],\r\n    headerReg: null,\r\n    regproddata: null,\r\n    regparaddata: null,\r\n    regprodcompdata: null,\r\n    ordenes: null,\r\n    fallaAreas: null,\r\n    chatarraHeader: null,\r\n    chatarraPos: null,\r\n    motivoChatara: null,\r\n    tipoChatarra: null,\r\n    regDemora: null,\r\n    compNumber: null,\r\n};\r\n\r\nconst LocalState = JSON.parse(localStorage.getItem(\"acero\"))\r\n\r\nexport const GlobalContex = createContext(InitialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, LocalState || InitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"acero\", JSON.stringify(state))\r\n    }, [state])\r\n\r\n  function getPuestoTrabajo(ptrabajo) {\r\n    dispatch({\r\n      type: GET_PUESTOS_TRABAJO,\r\n      payload: ptrabajo\r\n    });\r\n  }\r\n\r\n  function setUserLogin(user) {\r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n  }\r\n\r\n    function setUserInfo(info) {\r\n        dispatch({\r\n            type: USER_INFO,\r\n            payload: info\r\n        })\r\n    }\r\n\r\n    function LogoutUser() {\r\n        localStorage.removeItem(\"acero\")\r\n        dispatch( {\r\n            type: LOGOUT,\r\n            payload: InitialState\r\n        })\r\n    }\r\n\r\n    function getTurnos(turnos) {\r\n        dispatch({\r\n            type: GET_TURNOS,\r\n            payload: turnos\r\n        })\r\n    }\r\n\r\n    function getGrupos(grupos) {\r\n        dispatch({\r\n            type: GET_GRUPOS,\r\n            payload: grupos\r\n        })\r\n    }\r\n\r\n    function getIntegrantesGrupos(lista){\r\n        dispatch({\r\n            type: GET_INTEGRANTES_GRUPOS,\r\n            payload: lista\r\n        })\r\n    }\r\n\r\n    function setHeaderRegActive(header) {\r\n        let r = false\r\n        if (header.PuestoTrabajoId === 1 || header.PuestoTrabajoId === 2) {\r\n            r = true\r\n        }\r\n        dispatch({\r\n            type: IS_LAM,\r\n            payload: r\r\n        })\r\n\r\n        dispatch({\r\n            type: LOAD_HEADER_REG,\r\n            payload: header\r\n        })\r\n    }\r\n\r\n    function clearHeaderRegActive() {\r\n        dispatch({\r\n            type: CLEAR_HEADER_REG,\r\n        })\r\n    }\r\n\r\n    function loadRegProdData(regProData) {\r\n        dispatch({\r\n            type: GET_REG_PROD_DATA,\r\n            payload: regProData\r\n        })\r\n    }\r\n\r\n    function loadRegPadadData(regparaddata){\r\n      dispatch({\r\n        type: GET_REG_PARAD_DATA,\r\n        payload: regparaddata\r\n      })\r\n    }\r\n\r\n    function getOrdenes(ordenes) {\r\n        dispatch({\r\n            type: GET_ORDENES,\r\n            payload: ordenes\r\n        })\r\n    }\r\n\r\n    function LoadCargos(cargos){\r\n      dispatch({\r\n        type: GET_CARGOS,\r\n        payload: cargos\r\n      })\r\n    }\r\n\r\n    function LoadFallaArea(fallaAreas){\r\n      dispatch({\r\n        type: LOAD_FALLA_AREA,\r\n        payload: fallaAreas\r\n      })\r\n    }\r\n\r\n    function LoadChataraHeader(chatarraHeader){\r\n      dispatch({\r\n        type: LOAD_CHATARRA,\r\n        payload: chatarraHeader\r\n      })\r\n    }\r\n\r\n    function LoadDemora(demora) {\r\n      dispatch({\r\n        type: LOAD_DEMORA,\r\n        payload: demora\r\n      })\r\n    }\r\n\r\n    function ClearDemora() {\r\n      dispatch({\r\n        type: CLEAR_DEMORA\r\n      })\r\n    }\r\n\r\n    function ClearChatarra(){\r\n      dispatch({\r\n        type: CLEAR_CHATARRA\r\n      })\r\n    } \r\n\r\n    function ChatarraMotivo(motivo){\r\n      dispatch({\r\n        type: LOAD_MOTIVOCHATERRA,\r\n        payload: motivo\r\n      })\r\n    }\r\n\r\n    function ChatarraTipo(tipo){\r\n      dispatch({\r\n        type: LOAD_TIPOCHATARRA,\r\n        payload: tipo\r\n      })\r\n    }\r\n\r\n    function SetChatarraPos(chaPos){\r\n      dispatch({\r\n        type: LOAD_CHATARRA_POS,\r\n        payload: chaPos\r\n      })\r\n    }\r\n\r\n    function LoadRegCompData(CompData) {\r\n      dispatch({\r\n        type: LOAD_REG_COMP_DATA,\r\n        payload: CompData\r\n      })\r\n    }\r\n\r\n    function SetNumComp(Num) {\r\n      dispatch({\r\n        type: LOAD_COMP_NUMBER,\r\n        payload: Num\r\n      })\r\n    }\r\n\r\n    function ClearRegComp(){\r\n      dispatch({\r\n        type: CLEAR_REG_COMP_DATA\r\n      })\r\n    }\r\n\r\n  return (\r\n    <GlobalContex.Provider\r\n      value={{\r\n        getPuestoTrabajo,\r\n        getTurnos,\r\n        getGrupos,\r\n        getIntegrantesGrupos,\r\n        setUserLogin,\r\n        setHeaderRegActive,\r\n        setUserInfo,\r\n        LogoutUser,\r\n        clearHeaderRegActive,\r\n        loadRegProdData,\r\n        loadRegPadadData,\r\n        getOrdenes,\r\n        LoadCargos,\r\n        LoadFallaArea,\r\n        LoadChataraHeader,\r\n        ClearChatarra,\r\n        ChatarraMotivo,\r\n        ChatarraTipo,\r\n        SetChatarraPos,\r\n        LoadDemora,\r\n        ClearDemora,\r\n        LoadRegCompData,\r\n        SetNumComp,\r\n        ClearRegComp,\r\n\r\n        userInfo: state.userInfo,\r\n        user: state.user,\r\n        isLogin: state.isLogin,\r\n        turnos: state.turnos,\r\n        grupos: state.grupos,\r\n        integrantesGrp: state.integrantesGrp,\r\n        headerReg: state.headerReg,\r\n        isLam: state.isLam,\r\n        regproddata: state.regproddata,\r\n        regparaddata: state.regparaddata,\r\n        regprodcompdata: state.regprodcompdata,\r\n        ordenes: state.ordenes,\r\n        cargos: state.cargos,\r\n        fallaAreas: state.fallaAreas,\r\n        chatarraHeader: state.chatarraHeader,\r\n        chatarraPos: state.chatarraPos,\r\n        motivoChatara: state.motivoChatara,\r\n        tipoChatarra: state.tipoChatarra,\r\n        regDemora: state.regDemora,\r\n        compNumber: state.compNumber,\r\n\r\n          }}\r\n    >\r\n      {children}\r\n    </GlobalContex.Provider>\r\n  );\r\n};\r\n","import React, { useContext} from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\n\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n    const AceroContex = useContext(GlobalContex)\r\n    const { isLogin } = AceroContex\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            isLogin && restricted ?\r\n                <Redirect to=\"/dashboard\" />\r\n                : <Component {...props} />\r\n        )} />\r\n        )\r\n}\r\n\r\n    export default PublicRoute","import React, { useContext} from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const AceroContex = useContext(GlobalContex)\r\n    const { isLogin } = AceroContex\r\n \r\n    return (\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin ?\r\n                <Component {...props} />\r\n                : <Redirect to=\"/\" />\r\n        )} />\r\n        )\r\n}\r\n\r\nexport default PrivateRoute","import axios from 'axios'\r\n\r\n//const base = \"http://10.82.33.70:5000/api\"\r\nconst base = \"http://localhost:5000/api\"\r\n\r\nconst LoginUser = (CodigoEmp, Password, callback) => {    \r\n    axios.post(`${base}/agm/loginUser`, {CodigoEmp, Password}\r\n    , {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then((response)=> {\r\n        callback(null, response.data)\r\n    })\r\n        .catch((error)=>{\r\n            callback(error, null)\r\n        })\r\n}\r\nconst UserInfo = (CodigoEmp, callback) => {\r\n\r\n    axios.post(`${base}/agm/getUserInfo`, {CodigoEmp}\r\n        , {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        }) \r\n}\r\nconst getApiIntegrantesGrp = (callback) => {\r\n    axios.get(`${base}/agm/getGruposIntegrantes`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\nconst getApiTurnos = (callback) => {\r\n    axios.get(`${base}/agm/getTurnos`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\nconst getApiGrupos = (callback) => {\r\n    axios.get(`${base}/agm/getGrupos`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst getCargos = (callback) => {\r\n    axios.get(`${base}/agm/getCargo`, {\r\n        headers: {\r\n            'Context-Type': 'application/json'\r\n        }\r\n    }).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function (err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst InsertHeaderRegistro = (header, callback) => {\r\n\r\n    axios.post(`${base}/registro/insHeaderReg`, {header}\r\n        , {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then(function (response) {\r\n        callback(null, response.data[0])\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\nconst getRegProd = (headerid, callback) => {\r\n    axios.get(`${base}/registro/getregproddata?headerid=${headerid}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst getApiRegProdComp = (PosProdId, callback) => {\r\n    axios.get(`${base}/registro/getregprodcompdata?PosProdId=${PosProdId}`)\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst getApiOdenenes = (callback) => {\r\n    axios.get(`${base}/ordenes/getOrdenes`,\r\n        {\r\n            headers: {\r\n                    'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then((response) => {\r\n        callback(null, response.data)\r\n    }).catch((error) => {\r\n        callback(error, null)\r\n    })\r\n} \r\nconst getOdenenComp = (Orden, callback) => {\r\n    axios.post(`${base}/ordenes/getOrdenesComp`, { Orden }\r\n        , {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\nconst getOdenenPartida = (comp, callback) => {\r\n    const data = JSON.stringify( { comp })\r\n    axios.get(`${base}/ordenes/getOrdenesPartida`, {data},\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    ).then((response) => {\r\n        callback(null, response.data)\r\n    }).catch((error) => {\r\n        callback(error, null)\r\n    })\r\n} \r\nconst insRegProd = (proddat, callback) => {\r\n\r\n    axios.post(`${base}/registro/insProdData`, {proddat},\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\nconst getMotivoFallaArea = (PuestoTr, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFallaArea?PuestoTr=${PuestoTr}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst getMotivoFallaSubArea = (AreaId, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFallaSubArea?AreaId=${AreaId}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst getMotivoFallaLugarAveria = (SubArea, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFallaLugarAveria?SubArea=${SubArea}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst getMotivoFalla = (LugarAveriaId, callback) => {\r\n    axios.get(`${base}/registro/getMotivoFalla?LugarAveriaId=${LugarAveriaId}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst getTipoComb = (callback) => {\r\n    \r\n    axios.get(`${base}/registro/getTipoComb`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst getRegParada = (headerid, callback) => {\r\n    axios.get(`${base}/registro/getParadaData?headerid=${headerid}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst insRegParada = (regParadaD, callback) => {\r\n    axios.post(`${base}/registro/insPosRegParada`, {regParadaD},\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    })\r\n        .catch(function (error) {\r\n            callback(error, null)\r\n        })\r\n}\r\n\r\nconst insChatarraHeader = (ChatarraHeader, callback) => {\r\n    axios.post(`${base}/Chatarra/InsHeader`, {ChatarraHeader}\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function(err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst insChatarraPos = (ChatarraPos, callback) => {\r\n    axios.post(`${base}/Chatarra/InsPos`, {ChatarraPos}\r\n    ).then(function (response) {\r\n        callback(null, response.data)\r\n    }).catch(function(err) {\r\n        callback(err, null)\r\n    })\r\n}\r\n\r\nconst getChatarraPos = (HeaderId, callback) => {\r\n    axios.get(`${base}/Chatarra/getChatarra?HeaderId=${HeaderId}`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\nconst GetTipoChatarra = (callback) => {\r\n    axios.get(`${base}/chatarra/gettipo`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst GetMotivoChatarra = (callback) => {\r\n    axios.get(`${base}/chatarra/getmotivo`\r\n    )\r\n    .then(response => { callback(null, response.data)})\r\n    .catch(err => console.warn(err));\r\n}\r\n\r\nconst sapSendChatarra = (ZgmAcerogmChatarra, callback) => {\r\n    axios.post('http://appincap01/AgmSapApi/setChatarra', {ZgmAcerogmChatarra})\r\n            .then(function (response) {\r\n                callback(null, response.data)\r\n            }).catch(function(err) {\r\n                callback(err, null)\r\n            })\r\n}\r\n\r\nconst getDemoras = (demora, callback) => {\r\n    console.log('Esto es el post de demora')\r\n    axios.post(`${base}/demora`, {demora}\r\n    , {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(function(res) {\r\n            callback(null, res.data)\r\n        }).catch(function(err){\r\n            callback(err, null)\r\n        })\r\n} \r\n\r\nexport {\r\n    LoginUser,\r\n    UserInfo,\r\n    getCargos,\r\n    getApiIntegrantesGrp,\r\n    getApiTurnos,\r\n    getApiGrupos,\r\n    InsertHeaderRegistro,\r\n    getRegProd,\r\n    getApiOdenenes,\r\n    getOdenenComp,\r\n    getOdenenPartida,\r\n    insRegProd,\r\n    getRegParada,\r\n    insRegParada,\r\n    getMotivoFallaArea,\r\n    getMotivoFallaSubArea,\r\n    getMotivoFallaLugarAveria,\r\n    getMotivoFalla,\r\n    getTipoComb,\r\n    insChatarraHeader,\r\n    insChatarraPos,\r\n    getChatarraPos,\r\n    GetTipoChatarra,\r\n    GetMotivoChatarra,\r\n    sapSendChatarra,\r\n    getDemoras,\r\n    getApiRegProdComp,\r\n\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  makeStyles,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AccountCircleRounded,\r\n  VpnKeyRounded,\r\n  CodeRounded,\r\n} from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//import logo from \"../../assets/logo.png\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  LogPanel: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  FormCenter: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  InputTextStyle: {\r\n    marginBottom: \"1em\",\r\n  },\r\n  FormInputs: {\r\n    border: \"1px solid lightgray\",\r\n    padding: \"1em\",\r\n  },\r\n  ButtonArea: {\r\n    textAlign: \"center\",\r\n    margin: \"1.5em\",\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#015CB7\",\r\n    },\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n  LogoSize: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"11rem\",\r\n      heigth: \"2rem\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"16.5rem\",\r\n      heigth: \"3rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"22rem\",\r\n      heigth: \"4rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {},\r\n  },\r\n}));\r\nconst Reset = ({ HandlerClose }) => {\r\n  const classes = useStyle();\r\n  const history = useHistory();\r\n\r\n  function onFormSubmint(e) {\r\n    e.preventDefault();\r\n    // const { user, password } = e.target.elements;\r\n    // console.log(user.value, password.value);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={10} sm={8} md={6} lg={6}>\r\n          <Paper elevation={3} className={classes.LogPanel}>\r\n            <img src={process.env.PUBLIC_URL + '/logo.png'} className={classes.LogoSize} alt=\"logo\" />\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <form onSubmit={onFormSubmint}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccountCircleRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField id=\"rusername\" name=\"ruser\" label=\"Usuario\" />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <CodeRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"code\"\r\n                        name=\"rcode\"\r\n                        label=\"código\"\r\n                        type=\"number\"\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <VpnKeyRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"rpassword\"\r\n                      name=\"rpassword\"\r\n                      type=\"password\"\r\n                      label=\"Contraseña\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <VpnKeyRounded />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"rusernamew\"\r\n                      name=\"rpassword2\"\r\n                      label=\"Confirmar Contaseña\"\r\n                      type=\"password\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <div className={classes.ButtonArea}>\r\n                  <Button type=\"submit\" className={classes.btnB}>\r\n                    Aceptar\r\n                  </Button>\r\n                  <Button className={classes.btnY} onClick={HandlerClose}>\r\n                    Cancelar\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  makeStyles,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, Link } from \"react-router-dom\"\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport { LoginUser, UserInfo } from '../../context/Api'\r\n\r\nimport Reset from \"./Reset\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  LogPanel: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  FormCenter: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  InputTextStyle: {\r\n    marginBottom: \"1em\",\r\n  },\r\n  FormInputs: {\r\n    border: \"1px solid lightgray\",\r\n    padding: \"1em\",\r\n  },\r\n  LinkArea: {\r\n    position: \"relative\",\r\n    textAlign: \"center\",\r\n    margin: \".5em 0 .5em -4.5em\",\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#015CB7\"\r\n    }\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#FFE166\"\r\n    }\r\n  },\r\n  LogoSize: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"11em\",\r\n      heigth: \"2em\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"16.5em\",\r\n      heigth: \"3em\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"22em\",\r\n      heigth: \"4em\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {},\r\n  },\r\n  modalPanel: {\r\n    \r\n  },\r\n  MainModal: {\r\n  },\r\n}));\r\nconst Login = () => {\r\n  const classes = useStyle();\r\n  const AceroContext = useContext(GlobalContex)\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n  };\r\n\r\n  function onFormSubmint(e) {\r\n    e.preventDefault();\r\n      const { setUserLogin, setUserInfo } = AceroContext\r\n    const { user, password } = e.target.elements;\r\n      LoginUser(parseInt(user.value), password.value, (error, logininfo) => {\r\n          if (error) {\r\n              toast.error(\"Error al intentar inicio\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT\r\n              });\r\n              console.log(error.message)\r\n              return\r\n          }\r\n          console.log(logininfo)\r\n          if (logininfo !== \"\" && logininfo !== undefined && logininfo !== null || logininfo.length != 0) {\r\n              setUserLogin(logininfo)\r\n              UserInfo(parseInt(user.value), (error, info) => {\r\n                  if (error) {\r\n                      toast.error(\"Error al cargar roles de usuario\", {\r\n                          position: toast.POSITION.BOTTOM_RIGHT\r\n                      });\r\n                      console.log(error.message)\r\n                      return\r\n                  }\r\n                  if (info !== \"\" && info !== undefined && info !== null) {\r\n                      setUserInfo(info)\r\n                      history.push(\"/dashboard\")\r\n                  } else {\r\n                      toast.warn(\"No se encontro Roles asociados al usuario!\", {\r\n                          position: toast.POSITION.BOTTOM_RIGHT\r\n                      });\r\n                  }\r\n              })\r\n          } else {\r\n              toast.warn(\"Verifique usuario y Contreaseña !\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT\r\n              });\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={10} sm={8} md={6} lg={6}>\r\n          <Paper elevation={3} className={classes.LogPanel}>\r\n                      <img src={window.location.origin + '/logo.png'} className={classes.LogoSize} alt=\"logo\" />\r\n            <h1>Acero Gm</h1>\r\n            <form className={classes.FormCenter} onSubmit={onFormSubmint}>\r\n              <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                wrap=\"nowrap\"\r\n                className={classes.FormInputs}\r\n              >\r\n                <TextField\r\n                  id=\"Username\"\r\n                  name=\"user\"\r\n                  label=\"Usuario\"\r\n                  variant=\"outlined\"\r\n                  className={classes.InputTextStyle}\r\n                />\r\n                <TextField\r\n                  id=\"Password\"\r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  className={classes.InputTextStyle}\r\n                />\r\n              </Grid>\r\n              <div className={classes.LinkArea} xs={10} sm={8} md={6} lg={6}>\r\n                <a href=\"!#\" onClick={handleOpen}>Olvide mi Contraseña</a>\r\n                <br />\r\n                <Link to=\"\">Reporte Anomalias</Link>\r\n              </div>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.btnB}\r\n                type=\"submit\"\r\n              >\r\n                Aceptar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.btnY}\r\n                type=\"reset\"\r\n              >\r\n                Cancelar\r\n              </Button>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal\r\n        open={open}\r\n        xs={10} sm={8} md={6} lg={6}\r\n        className={classes.MainModal}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className={classes.modalPanel}>\r\n          <Reset HandlerClose={handleClose}/>\r\n        </div>\r\n          </Modal>\r\n          <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  makeStyles,\r\n  Drawer\r\n} from \"@material-ui/core\";\r\nimport { Note, NextWeek, AccountCircle, PowerSettingsNew } from \"@material-ui/icons\";\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n    },\r\n    linkStyle: {\r\n        color: \"inherit\",\r\n        textDecoration: \"none\"\r\n    },\r\n    userPanel: {\r\n        height: \"8rem\",\r\n        background: '#003366',\r\n        color: '#FFCC00'\r\n    },\r\n    userSection: {\r\n        margin: \"0 .5em\",\r\n\r\n    },\r\n    BtnLogout: {\r\n        background: \"red\",\r\n        color: \"white\",\r\n        margin: \"0 .5em\",\r\n        '&:hover': {\r\n            background: \"lightred\"\r\n        }\r\n    },\r\n});\r\n\r\nconst DrawerMenu = ({ draw, onToggle }) => {\r\n    const classes = useStyles();\r\n    const AceroContext = useContext(GlobalContex)\r\n    const { user, LogoutUser } = AceroContext\r\n\r\n    const onHandlerLogout = (e) => {\r\n        e.preventDefault()\r\n        LogoutUser()\r\n    }\r\n\r\n  const sideList = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={onToggle(false)}\r\n      onKeyDown={onToggle(false)}\r\n      >\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2} className={classes.userPanel}>\r\n              <Grid item>\r\n                  <AccountCircle/>\r\n              </Grid>\r\n              <Grid container direction=\"column\" spacing={1} className={classes.userSection}>\r\n                  <Grid item>\r\n                      Codigo: {user.codigoEmp}\r\n                  </Grid>\r\n                  <Grid item>\r\n                      Nombre: {user.nombres}\r\n                  </Grid>\r\n              </Grid>\r\n          </Grid>\r\n          <List>\r\n              <Link to='/registro' className={classes.linkStyle}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <Note />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Registro\" />\r\n            </ListItem>\r\n        </Link>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n              <Link to=\"/chatarra\" className={classes.linkStyle}> \r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <NextWeek />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"chatarra\" />\r\n            </ListItem>\r\n        </Link>\r\n          </List>\r\n      <Divider />\r\n      <List>\r\n              <Link to=\"/ordenprod\" className={classes.linkStyle}> \r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <NextWeek />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Ordenes de Produccion\" />\r\n            </ListItem>\r\n        </Link>\r\n          </List>\r\n          <Grid container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              spacing={1}>\r\n            <Grid item>\r\n                  \r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={onHandlerLogout}\r\n                    className={classes.BtnLogout}\r\n                    startIcon={<PowerSettingsNew />}\r\n                >\r\n                    Logout\r\n                </Button>\r\n            </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        open={draw}\r\n        onClose={onToggle(false)}\r\n      >\r\n        {sideList(\"left\")}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\n\r\nimport DrawerMenu from \"./DrawerMenu\";\r\n\r\n//import logo from \"../../assets/logo.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: '#ffcc00',\r\n    color: '#003366'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  logoStyles: { \r\n    width: '11em',\r\n    height: '2em',\r\n    marginRight: '.5em',\r\n    marginLeft: '-1.5em'\r\n  }\r\n}));\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const [draw, setDraw] = useState(false);\r\n  const toggleDrawer = open => event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    if (open === undefined) {\r\n      setDraw(true);\r\n    } else {\r\n      setDraw(open);\r\n    }\r\n  };\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={toggleDrawer()}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"logo\" className={classes.logoStyles} />\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          AceroGm\r\n        </Typography>\r\n      </Toolbar>\r\n      <DrawerMenu draw={draw} onToggle={toggleDrawer} />\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\nconst LogoutPopup = () => {\r\n    const signoutTime = 3660000;\r\n    const redirectTime = 3800;\r\n    const warningTime = 3540000;\r\n    const aceroContext = useContext(GlobalContex)\r\n    const { LogoutUser } = aceroContext\r\n    let warnTimeout;\r\n    let logoutTimeout;\r\n    let reditectTimeout;\r\n    \r\n\r\n    const warn = () => {\r\n        toast.warn(\"Tu sección sera cerrada en 1 minuto por inactividad\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            autoClose: 5000\r\n        });\r\n    };\r\n\r\n    const logoutAction = () => {\r\n        LogoutUser()\r\n    }\r\n\r\n    const logout = () => {\r\n        toast.error(\"Tu sección fue cerrada por inactividad\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n            autoClose: 3000\r\n        });\r\n        reditectTimeout = setTimeout(logoutAction, redirectTime)\r\n    };\r\n\r\n    const setTimeouts = () => {\r\n        warnTimeout = setTimeout(warn, warningTime);\r\n        logoutTimeout = setTimeout(logout, signoutTime);\r\n    };\r\n\r\n    const clearTimeouts = () => {\r\n        if (warnTimeout) clearTimeout(warnTimeout);\r\n        if (logoutTimeout) clearTimeout(logoutTimeout);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const events = [\r\n            \"load\",\r\n            \"mousemove\",\r\n            \"mousedown\",\r\n            \"click\",\r\n            \"scroll\",\r\n            \"keypress\",\r\n        ];\r\n\r\n        const resetTimeout = () => {\r\n            clearTimeouts();\r\n            setTimeouts();\r\n        };\r\n\r\n        for (let i in events) {\r\n            window.addEventListener(events[i], resetTimeout);\r\n        }\r\n\r\n        setTimeouts();\r\n        return () => {\r\n            for (let i in events) {\r\n                window.removeEventListener(events[i], resetTimeout);\r\n                clearTimeouts();\r\n            }\r\n        };\r\n    }, [clearTimeouts, setTimeouts]);\r\n\r\n    return <div>\r\n        <ToastContainer />\r\n    </div>;\r\n};\r\nexport default LogoutPopup;\r\n","import React, { useContext, useEffect } from 'react'\r\n\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport { getApiTurnos, getApiGrupos, getApiIntegrantesGrp, getApiOdenenes, getCargos, getMotivoFallaArea } from '../../context/Api'\r\nimport NavigationBar from '../Util/NavBar'\r\nimport LogoutPopup from '../Util/LogoutPopup'\r\n\r\n\r\nconst Dashboard = () => {\r\n    const AceroContext = useContext(GlobalContex)\r\n    const { getTurnos\r\n        , getGrupos\r\n        , getIntegrantesGrupos\r\n        , turnos\r\n        , grupos\r\n        , cargos\r\n        , integrantesGrp\r\n        , ordenes\r\n        , getOrdenes\r\n        , LoadCargos\r\n        \r\n    } = AceroContext\r\n\r\n    useEffect(() => {\r\n        \r\n        if (turnos === null || turnos === undefined) {\r\n            getApiTurnos((err, data) => {\r\n                if (err) {\r\n\r\n                } else {\r\n                    getTurnos(data)\r\n                }\r\n            })\r\n        }\r\n\r\n        if(cargos === null || turnos === undefined) {\r\n            getCargos((err, data) => {\r\n                if(err) {\r\n\r\n                } else {\r\n                    LoadCargos(data)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (ordenes === null || ordenes === undefined) {\r\n            getApiOdenenes((err, data) => {\r\n                if (err) {\r\n\r\n                }\r\n                else {\r\n                    getOrdenes(data)\r\n                }\r\n            })\r\n        }\r\n\r\n        if (grupos === null || grupos === undefined) {\r\n            getApiGrupos((err, grupos) => {\r\n                if (err) {\r\n\r\n                } else {\r\n                    getGrupos(grupos)\r\n                }\r\n            })\r\n            if (integrantesGrp === null || integrantesGrp === undefined) {\r\n                getApiIntegrantesGrp((err, lista) => {\r\n                    if (err) {\r\n\r\n                    } else {\r\n                        getIntegrantesGrupos(lista)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <NavigationBar/>\r\n            Dashboard\r\n            <LogoutPopup/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import \"moment\";\r\nimport React, { useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Paper,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport { InsertHeaderRegistro, GetHeaderRegistro } from '../../context/Api'\r\nconst useStyle = makeStyles(theme => ({\r\n\r\n  formControl: {\r\n    minWidth: 120\r\n  },\r\n  formStyle: {\r\n    padding: \"1em 0\",\r\n    margin: \"1em 0\"\r\n  },\r\n  GridMain: {\r\n    margin: \"2.5em\",\r\n    paddin: \"1em\"\r\n  },\r\n  PtContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    border: \"1px solid lightgray\",\r\n    margin: \"2em 1em\",\r\n    padding: \".5em .2em\",\r\n    width: \"30em\"\r\n  },\r\n  grupoContainer: {\r\n    margin: \"1em 0\"\r\n  },\r\n  PaperStyle: {\r\n    padding: \"1em\"\r\n  },\r\n  SelectStyle: {\r\n    width: \"12em\"\r\n  },\r\n  DatePick: {\r\n    margin: \".8em 0\",\r\n    width: \"12em\"\r\n  },\r\n  ButtonSection: {\r\n    margin: \".5em 0 0 -.5em\"\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#015CB7\"\r\n    }\r\n  },\r\n  \r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    '&:hover':{\r\n      background: \"#FFE166\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst PuestoTr = () => {\r\n  const classes = useStyle();\r\n  const AceroContex = useContext(GlobalContex) \r\n  const { userInfo, turnos, grupos, user, setHeaderRegActive } = AceroContex\r\n  const [TodayDate, setTodayDate] = React.useState(new Date());\r\n  const puestos = userInfo.map(puesto => {\r\n        return {\r\n            id: puesto.PuestoTrId,\r\n            Descrit: puesto.PuestoTr,\r\n            TypeNot: puesto.TipoNotif\r\n        }\r\n    })\r\n  let listaGrupos = null\r\n  let grp = grupos.map(grupo => {\r\n      return { id: grupo.Id, grupo: grupo.grupo }\r\n  })\r\n\r\n    grp = [... new Set(grp)]\r\n    \r\n\r\n  const eliminarObjetosDuplicados = (arr, prop) => {\r\n        var nuevoArray = [];\r\n        var lookup = {};\r\n\r\n        for (var i in arr) {\r\n            lookup[arr[i][prop]] = arr[i];\r\n        }\r\n\r\n        for (i in lookup) {\r\n            nuevoArray.push(lookup[i]);\r\n        }\r\n\r\n        return nuevoArray;\r\n    }\r\n\r\n  listaGrupos = eliminarObjetosDuplicados(grp, \"id\")\r\n\r\n  const handlerSubmit = event => {\r\n    event.preventDefault();\r\n      const { Ptr, Fecha, Grupo, Turno } = event.target.elements\r\n\r\n      const data = {\r\n          Fecha: new Date(Fecha.value),\r\n          GrupoId: parseInt(Grupo.value),\r\n          TurnoId: parseInt(Turno.value),\r\n          PuestoTrabajoId: parseInt(Ptr.value),\r\n          Estatus: 'A',\r\n          UsrReg: user.CodigoEmp,\r\n          RegDate: new Date()\r\n      }\r\n      console.log(data)\r\n      \r\n      InsertHeaderRegistro(data, (err, res) => {\r\n          \r\n          setHeaderRegActive(res)\r\n          \r\n      })\r\n\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    setTodayDate(date);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        wrap=\"nowrap\"\r\n        className={classes.GridMain}\r\n      >\r\n        <Paper elevation={3} className={classes.PtContainer}>\r\n          <form onSubmit={handlerSubmit} className={classes.formStyle}>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"LPt\">Puesto de Trabajo</InputLabel>\r\n                <Select\r\n                  name=\"Ptr\"\r\n                  native\r\n                  label=\"Puesto de Trabajo\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  {puestos.map(puesto => {\r\n                    return (\r\n                      <option\r\n                        key={puesto.Descrit}\r\n                        value={puesto.id}\r\n                        data-type={puesto.TypeNot}\r\n                      >\r\n                        {puesto.Descrit}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  name=\"Fecha\"\r\n                  variant=\"inline\"\r\n                  inputVariant=\"outlined\"\r\n                  label=\"Seleccione Fecha\"\r\n                  format=\"MM/DD/YYYY\"\r\n                  className={classes.DatePick}\r\n                  value={TodayDate}\r\n                  InputAdornmentProps={{ position: \"end\" }}\r\n                  onChange={handleDateChange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"Lturno\">Turnos</InputLabel>\r\n                <Select\r\n                  native\r\n                  name=\"Turno\"\r\n                  label=\"Turnos\"\r\n                  id=\"Sturno\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  {turnos.map(turno => {\r\n                    return (\r\n                      <option key={turno.id} value={turno.Id}>\r\n                          {turno.Descripcion}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.grupoContainer}\r\n              >\r\n                <InputLabel id=\"LGrupo\">Grupos</InputLabel>\r\n                <Select\r\n                  native\r\n                  name=\"Grupo\"\r\n                  label=\"Grupos\"\r\n                  id=\"SGrupo\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  <option value=\"0\">\r\n                    {\" \"}\r\n                  </option>\r\n                    {listaGrupos.map(grupo => {\r\n                    return (\r\n                      <option key={grupo.id} value={grupo.id}>\r\n                        {grupo.grupo}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid className={classes.ButtonSection}>\r\n              <Button type=\"submit\" className={classes.btnB}>\r\n                Aceptar\r\n              </Button>\r\n              <Button type=\"reset\" className={classes.btnY}>\r\n                Cancelar\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PuestoTr;\r\n\r\n","import React, { useContext , useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableContainer,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport {\r\n    ArrowBackIosRounded,\r\n    Delete\r\n} from '@material-ui/icons'\r\nimport moment from 'moment'\r\nimport { getRegProd, getRegParada } from '../../context/Api' \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    PaperSite: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"2rem\",\r\n    margin: \"2rem\",\r\n    height: \"16rem\",\r\n    [theme.breakpoints.down('xs')]: {\r\n        overflow: \"scroll\"\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n        overflow: \"scroll\"\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        overflow: \"hiden\"\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n        overflow: \"hiden\"\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n        overflow: \"hiden\"\r\n    }\r\n    \r\n  },\r\n  GridContainer: {\r\n    \r\n  },\r\n  GridSections: {\r\n      padding: \"2rem\",\r\n      margin: \"2rem\"\r\n  },\r\n  GridSideTable: {\r\n  },\r\n  dividerStyle: {\r\n    margin: '.3rem'\r\n  },\r\n\r\n  ButtonSection: {\r\n    bottom: '0',\r\n    left: '39rem'\r\n  },\r\n  btnB: {\r\n    background: \"red\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    marginBottom: \"-5rm\",\r\n    '&:hover': {\r\n        color: 'black', \r\n        background: \" #ffcccb\"\r\n}\r\n  }\r\n\r\n}));\r\n\r\nconst HeaderReg = ({ header }) => {\r\n    const classes = useStyles();\r\n    const aceroContext = useContext(GlobalContex)\r\n    const { integrantesGrp, clearHeaderRegActive, loadRegProdData, loadRegPadadData  } = aceroContext\r\n\r\n    let listaGrp = integrantesGrp.map(grp => {\r\n        return {\r\n            nombre: grp.Nombres,\r\n            grupo: grp.grupo\r\n        }\r\n    }).filter(g => {\r\n        return g.grupo === header.Grupo\r\n    })\r\n    listaGrp = [... new Set(listaGrp)]\r\n\r\n    useEffect(() => {\r\n        console.log(header.id)\r\n        getRegProd(header.id, (err, data) => {\r\n            loadRegProdData(data)\r\n        })\r\n        getRegParada(header.id, (err, data) => {\r\n            loadRegPadadData(data)\r\n        })\r\n    },[])\r\n\r\n    const handlerBack = (e) => {\r\n        e.preventDefault()\r\n        clearHeaderRegActive()\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={4} className={classes.PaperSite}>\r\n        <Grid\r\n          spacing={3}\r\n          container\r\n          justify=\"flex-start\"\r\n          alignContent=\"space-between\"\r\n          wrap=\"wrap\"\r\n          direction=\"row\"\r\n        >\r\n          <Grid item>\r\n            <div><Button onClick={handlerBack}><ArrowBackIosRounded/></Button></div>\r\n            <div><b>Fecha:</b> {moment(header.Fecha).format('L')}</div>\r\n            <div><b>Turno:</b> {header.Turno}</div>\r\n            <div><b>Grupo:</b> {header.Grupo}</div>\r\n            <div><b>Puesto de Trabajo: </b> {header.Puesto}</div>\r\n            {\r\n                listaGrp.map(l => {\r\n                    return <div key={l.nombre}><b>Operador: </b>{l.nombre}</div>\r\n                })\r\n            }\r\n          </Grid>\r\n          <Grid item>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <b>TC</b>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <b>TL</b>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <b>TE</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>0</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <Grid item >\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <b>TI</b>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <b>TP</b>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <b>M</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>\r\n                      <b>M</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>\r\n                      <b>O</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>0</TableCell>\r\n                    <TableCell>\r\n                      <b>TOT</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <Grid item className={classes.GridSections}>\r\n            <Button type=\"submit\" className={classes.btnB} startIcon={<Delete />}>\r\n              Eliminar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderReg;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport { Add, Pageview, Edit } from \"@material-ui/icons\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport { getApiRegProdComp } from \"../../context/Api\"\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  FabStyle: {\r\n    position: \"absolute\",\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    right: \"0\",\r\n    top: \"-4rem\",\r\n    zIndex: \"999\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DatosProduccion = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const aceroContext = useContext(GlobalContex);\r\n  const { regproddata, LoadRegCompData, SetNumComp } = aceroContext;\r\n  const history = useHistory()\r\n  const columns = [\r\n    {\r\n      id: \"id\",\r\n      label: \"Cod Reg\",\r\n      minWidth: \"100\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(), //toFixed(2),\r\n    },\r\n    {\r\n      id: \"Orden\",\r\n      label: \"Orden Prod\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"mprima\",\r\n      label: \"Materia Prima\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"lote\",\r\n      label: \"Lote Mp\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"producto\",\r\n      label: \"Producto\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"Hora\",\r\n      label: \"Hora\",\r\n      minWidth: \"200\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"Eph\",\r\n      label: \"EPH\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"ume\",\r\n      label: \"Consumo Acumulado\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"emb\",\r\n      label: \"Producción Acumulado\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"comb\",\r\n      label: \"Combustible\",\r\n      minWidth: \"170\",\r\n      align: \"center\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"conscomb\",\r\n      label: \"Consumo Combustible\",\r\n      minWidth: \"170\",\r\n      align: \"center\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"conselect\",\r\n      label: \"Consumo Electricidad\",\r\n      minWidth: \"170\",\r\n      align: \"center\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"Notas\",\r\n      label: \"Observación\",\r\n      minWidth: \"170\",\r\n      align: \"left\",\r\n      format: (value) => value.toLocaleString(),\r\n    },{\r\n      id: \"id\",\r\n      label: \"\",\r\n      minWidth: \"100\",\r\n      align: \"left\",\r\n      format: (value) => <Button data-Id={value.toLocaleString()} onClick={handleGetPrima}> <Pageview/> </Button>,\r\n    },{\r\n      id: \"id\",\r\n      label: \"\",\r\n      minWidth: \"100\",\r\n      align: \"left\",\r\n      format: (value) => <Button data-Id={value.toLocaleString()} onClick={handleAddMPrima}> <Edit/> </Button>,\r\n    },\r\n  ]\r\n  \r\n  const handleAddMPrima = (e) => {\r\n    e.preventDefault()\r\n    history.push(\"/registro/prodcomp\")\r\n    SetNumComp(e.currentTarget.dataset.id)\r\n  }\r\n\r\n  const handleGetPrima = (e) => {\r\n    e.preventDefault()\r\n    getApiRegProdComp(e.currentTarget.dataset.id, (err, data) => {\r\n      console.log(data)\r\n      if(err) {\r\n\r\n      }else {\r\n        LoadRegCompData(data)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (regproddata !== null && regproddata !== undefined) {\r\n      regproddata.map((reg) => {\r\n        reg.Hora = moment(new Date(reg.Hora)).format(\"LT\");\r\n        return reg;\r\n      });\r\n      rows = regproddata;\r\n    }\r\n  }, [regproddata]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Link to=\"/registro/prodreg\">\r\n        <Fab aria-label=\"add\" className={classes.FabStyle}>\r\n          <Add />\r\n        </Fab>\r\n      </Link>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  id={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\nexport default DatosProduccion;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport { getMotivoFallaArea } from \"../../context/Api\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nconst columns = [\r\n  {\r\n    id: \"idreg\",\r\n    label: \"Id\",\r\n    minWidth: \"100\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(), //toFixed(2),\r\n  },\r\n  {\r\n    id: \"horaI\",\r\n    label: \"Hora Inicio\",\r\n    minWidth: \"200\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"horaF\",\r\n    label: \"Hora Fin\",\r\n    minWidth: \"200\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Tiempo\",\r\n    label: \"Tiempo Parada\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"tprogramado\",\r\n    label: \"Tiempo Programado\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"cargo\",\r\n    label: \"Cargo\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"area\",\r\n    label: \"Area\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"equipo\",\r\n    label: \"Equipo\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"causa\",\r\n    label: \"Causa\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"plqp\",\r\n    label: \"PLQ Perdidas\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"plqd\",\r\n    label: \"PLQ Descartados\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"ordennp\",\r\n    label: \"Orden Producción\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"prod\",\r\n    label: \"Producto\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"proda\",\r\n    label: \"Producto Anterior\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Notas\",\r\n    label: \"Observaciones\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n];\r\n\r\nlet rows = [];\r\n\r\nconst DatosParada = () => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      position: \"relative\",\r\n    },\r\n    FabStyle: {\r\n      position: \"absolute\",\r\n      background: \"#FFCC00\",\r\n      color: \"#003366\",\r\n      right: \"0\",\r\n      top: \"-4rem\",\r\n      zIndex: \"999\",\r\n      \"&:hover\": {\r\n        background: \"#FFE166\",\r\n      },\r\n      MainModal: {\r\n        overflow: \"scroll\",\r\n        background: red,\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          heigth: \"50em\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n          heigth: \"60em\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n          heigth: \"70em\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {},\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const AceroContext = useContext(GlobalContex);\r\n  const {\r\n    regparaddata,\r\n    fallaAreas,\r\n    LoadFallaArea,\r\n    headerReg,\r\n  } = AceroContext;\r\n\r\n  useEffect(() => {\r\n    if (regparaddata !== null && regparaddata !== undefined) {\r\n      regparaddata.map((reg) => {\r\n        reg.horaI = moment(new Date(reg.horaI)).format(\"LT\");\r\n        reg.horaF = moment(new Date(reg.horaF)).format(\"LT\");\r\n        return reg;\r\n      });\r\n      rows = regparaddata;\r\n    }\r\n\r\n    if (fallaAreas === null || fallaAreas === undefined) {\r\n      getMotivoFallaArea(headerReg.PuestoTrabajoId, (err, data) => {\r\n        if (err) {\r\n        } else {\r\n          LoadFallaArea(data);\r\n        }\r\n      });\r\n    }\r\n  }, [regparaddata]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Link to=\"/registro/paradreg\">\r\n        <Fab aria-label=\"add\" className={classes.FabStyle}>\r\n          <Add />\r\n        </Fab>\r\n      </Link>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  id={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idreg}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DatosParada;\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport DataProduccion from './DatosProduccion'\r\nimport DatosParada from './DatosParada'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  \r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  navTapStyle: {\r\n    background: '#003366',\r\n    color: \"#FFCC00\"\r\n  }\r\n}));\r\n\r\nfunction DataPanel() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.navTapStyle}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"\"\r\n        >\r\n          <Tab label=\"Datos Producción\" {...a11yProps(0)} />\r\n          <Tab label=\"Paradas\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        {DataProduccion}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {DatosParada}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataPanel;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  ArrowBackIosRounded\r\n} from '@material-ui/icons'\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Id\",\r\n    label: \"Cod Reg\",\r\n    minWidth: \"100\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(), //toFixed(2),\r\n  },\r\n  {\r\n    id: \"CodComponentes\",\r\n    label: \"Componentes\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Descripcion\",\r\n    label: \"Descripcion\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Batch\",\r\n    label: \"Lote\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"MP_UME\",\r\n    label: \"Consumo Acumulado\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"MP_Factor\",\r\n    label: \"Factor\",\r\n    minWidth: \"200\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"MP_UMB\",\r\n    label: \"UMB\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n]\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  FabStyle: {\r\n    position: \"absolute\",\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    right: \"0\",\r\n    top: \"-4rem\",\r\n    zIndex: \"999\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DataCompPanel = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const history = useHistory();\r\n  const aceroContext = useContext(GlobalContex);\r\n  const { regprodcompdata, ClearRegComp } = aceroContext;\r\n  \r\n  useEffect(()=> {\r\n    if(regprodcompdata != null) {\r\n      rows = regprodcompdata\r\n    }\r\n  },[regprodcompdata])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const HandlerClose = (e) => {\r\n    e.preventDefault();\r\n    ClearRegComp()\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div><Button onClick={HandlerClose}><ArrowBackIosRounded/></Button></div>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  id={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DataCompPanel;\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContex } from '../../context/GlobalState'\r\n\r\nimport NavigationBar from '../Util/NavBar'\r\nimport PuestoTr from \"./PuestoTr\"\r\nimport HeaderReg from './HeaderReg'\r\nimport DataPanel from './DataPanel'\r\nimport CompData from './DataCompPanel'\r\n\r\nconst Registro = () => {\r\n    const aceroContext = useContext(GlobalContex)\r\n    const { headerReg, regprodcompdata } = aceroContext\r\n    let children\r\n    let subChildren\r\n\r\n    if(regprodcompdata == null) {\r\n        subChildren =  <DataPanel/>\r\n    } else {\r\n        subChildren = <CompData/>\r\n    }\r\n\r\n\r\n    if (headerReg == null) {\r\n        children = <PuestoTr />\r\n    } else {\r\n        children = <div>\r\n            <HeaderReg header={headerReg}  />\r\n            {subChildren}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavigationBar />\r\n            {children}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Registro\r\n","import \"moment\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  makeStyles,\r\n  InputLabel,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport { getOdenenComp, insRegProd, getTipoComb } from \"../../context/Api\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"scroll\",\r\n  },\r\n  LogoSize: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"11rem\",\r\n      heigth: \"2rem\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"16.5rem\",\r\n      heigth: \"3rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"22rem\",\r\n      heigth: \"4rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {},\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#015CB7\",\r\n    },\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n  SelectStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n  InputTextStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n}));\r\n\r\nconst ProdFrom = () => {\r\n  const classes = useStyle();\r\n  const [hora, setHora] = useState(new Date());\r\n  const [mprima, setMprima] = useState([]);\r\n  const [comb, setComb] = useState([]);\r\n  const aceroContext = useContext(GlobalContex);\r\n  const { isLam, ordenes, headerReg, user, loadRegProdData } = aceroContext;\r\n  const history = useHistory();\r\n  let Lam = null;\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      orden,\r\n      mprima,\r\n      consacumulado,\r\n      prodacumulado,\r\n      observ,\r\n      combustible,\r\n      conscombustible,\r\n    } = e.target.elements;\r\n\r\n    let torden = ordenes.filter((o) => {\r\n      return o.Id == orden.value;\r\n    });\r\n\r\n    const data = {\r\n      HeaderRegId: headerReg.id,\r\n      OrdenProdId: orden.value,\r\n      Hora: hora,\r\n      MPrima: mprima.value,\r\n      PT_UME: consacumulado.value,\r\n      PT_UMB: prodacumulado.value,\r\n      Notas: observ.value,\r\n      EPH: torden.EPH,\r\n      TotalComb: combustible.value == undefined ? 0 : combustible.value,\r\n      Total_Potencia:\r\n        conscombustible.value == undefined ? 0 : combustible.value,\r\n      UsrReg: user.CodigoEmp,\r\n    };\r\n\r\n    insRegProd(data, (err, res) => {\r\n      loadRegProdData(res);\r\n      history.push(\"/registro\");\r\n    });\r\n  };\r\n\r\n  const HandlerClose = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/registro\");\r\n  };\r\n\r\n  const onChangeOrden = (e) => {\r\n    e.preventDefault();\r\n    let index = e.nativeEvent.target.selectedIndex;\r\n    let label = e.nativeEvent.target[index].text;\r\n\r\n    getOdenenComp(label, (err, data) => {\r\n      if (err) {\r\n      } else {\r\n        setMprima(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setHora(date);\r\n  };\r\n\r\n  if (isLam) {\r\n    Lam = (\r\n      <>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <InputLabel id=\"SCombustible\">Combustible</InputLabel>\r\n            <Select\r\n              native\r\n              label=\"Combustible\"\r\n              name=\"combustible\"\r\n              id=\"Smateria\"\r\n              className={classes.SelectStyle}\r\n            >\r\n              <option value=\"0\"></option>\r\n              {comb.map((c) => {\r\n                return (\r\n                  <option key={c.Id} value={c.Id}>\r\n                    {c.Descripcion}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <Tooltip title=\"Solo Números\" placement=\"right\">\r\n              <TextField\r\n                id=\"ConsComb\"\r\n                name=\"conscombustible\"\r\n                label=\"Consumo Combustible\"\r\n                type=\"number\"\r\n                className={classes.InputTextStyle}\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if (isLam) {\r\n      getTipoComb((err, data) => {\r\n        if (err) {\r\n        } else {\r\n          setComb(data);\r\n        }\r\n      });\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={10} sm={8} md={6} lg={6}>\r\n          <Paper elevation={3}>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <form onSubmit={onFormSubmit}>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"SOrden\">Orden Producción</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Orden\"\r\n                      name=\"orden\"\r\n                      className={classes.SelectStyle}\r\n                      onChange={onChangeOrden}\r\n                    >\r\n                      <option value=\"0\"> </option>\r\n                      {ordenes.map((orden) => {\r\n                        return (\r\n                          <option key={orden.Id} value={orden.Id}>\r\n                            {orden.Orden}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"Smateria\">Materia Prima</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Materia Prima\"\r\n                      name=\"mprima\"\r\n                      className={classes.SelectStyle}\r\n                    >\r\n                      <option value=\"0\"> </option>\r\n                      {mprima.map((prima) => {\r\n                        return (\r\n                          <option key={prima.Id} value={prima.Id}>\r\n                            {prima.Componente}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"time-picker\"\r\n                        label=\"Time picker\"\r\n                        value={hora}\r\n                        onChange={handleDateChange}\r\n                        className={classes.InputTextStyle}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change time\",\r\n                        }}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"ConsAcu\"\r\n                        name=\"consacumulado\"\r\n                        label=\"Consumo Acumulado\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"ProdAcu\"\r\n                        name=\"prodacumulado\"\r\n                        label=\"Producción Acumulado\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"obs\"\r\n                      name=\"observ\"\r\n                      label=\"Observación\"\r\n                      multiline\r\n                      rows={2}\r\n                      className={classes.InputTextStyle}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                {Lam}\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={classes.btnB}\r\n                      type=\"submit\"\r\n                    >\r\n                      Aceptar\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={classes.btnY}\r\n                      type=\"reset\"\r\n                      onClick={HandlerClose}\r\n                    >\r\n                      Cancelar\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProdFrom;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  makeStyles,\r\n  InputLabel,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport HeaderPrincipal from '../Util/NavBar'\r\n\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport { getOdenenComp, insRegProd, getTipoComb } from \"../../context/Api\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  LogoSize: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"11rem\",\r\n      heigth: \"2rem\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"16.5rem\",\r\n      heigth: \"3rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"22rem\",\r\n      heigth: \"4rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {},\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#015CB7\",\r\n    },\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n  SelectStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n  InputTextStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n}));\r\n\r\nconst DataCompForm = ({ Id }) => {\r\n  const classes = useStyle();\r\n  const [mprima, setMprima] = useState([]);\r\n  const aceroContext = useContext(GlobalContex);\r\n  const { ordenes, compNumber } = aceroContext;\r\n  const history = useHistory();\r\n\r\n  const onChangeOrden = (e) => {\r\n    e.preventDefault();\r\n    let index = e.nativeEvent.target.selectedIndex;\r\n    let label = e.nativeEvent.target[index].text;\r\n\r\n    getOdenenComp(label, (err, data) => {\r\n      if (err) {\r\n      } else {\r\n        setMprima(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(compNumber)\r\n    // const {\r\n    //   orden,\r\n    //   mprima,\r\n    //   Lote,\r\n    //   MpUme,\r\n    //   MpFactor,\r\n    //   MpUmb,\r\n    // } = e.target.elements;\r\n\r\n    // let torden = ordenes.filter((o) => {\r\n    //   return o.Id == orden.value;\r\n    // });\r\n\r\n    // const data = {\r\n    //   PosProdId: Id,\r\n    //   CodComponentes: mprima,\r\n      \r\n    // };\r\n\r\n    // insRegProd(data, (err, res) => {\r\n      \r\n    //   history.push(\"/registro\");\r\n    // });\r\n  };\r\n\r\n  const HandlerClose = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/registro\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderPrincipal/>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={10} sm={8} md={6} lg={6}>\r\n          <Paper elevation={3}>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <form onSubmit={onFormSubmit}>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"SOrden\">Orden Producción</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Orden\"\r\n                      name=\"orden\"\r\n                      className={classes.SelectStyle}\r\n                      onChange={onChangeOrden}\r\n                    >\r\n                      <option value=\"0\"> </option>\r\n                      {ordenes.map((orden) => {\r\n                        return (\r\n                          <option key={orden.Id} value={orden.Id}>\r\n                            {orden.Orden}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"Smateria\">Materia Prima</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Materia Prima\"\r\n                      name=\"mprima\"\r\n                      className={classes.SelectStyle}\r\n                    >\r\n                      <option value=\"0\"> </option>\r\n                      {mprima.map((prima) => {\r\n                        return (\r\n                          <option key={prima.Id} value={prima.Id}>\r\n                            {prima.Componente}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"Lote\"\r\n                        name=\"Lote\"\r\n                        label=\"Lote\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"MpUme\"\r\n                        name=\"MpUme\"\r\n                        label=\"Consumo Acumulado\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"MpFactor\"\r\n                        name=\"MpFactor\"\r\n                        label=\"Factor\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"MpUmb\"\r\n                        name=\"MpUmb\"\r\n                        label=\"UMB\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={classes.btnB}\r\n                      type=\"submit\"\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={classes.btnY}\r\n                      type=\"reset\"\r\n                      onClick={HandlerClose}\r\n                    >\r\n                      Cancelar\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataCompForm;\r\n","import \"moment\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  makeStyles,\r\n  InputLabel,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport {\r\n  getMotivoFallaSubArea,\r\n  getMotivoFallaLugarAveria,\r\n  getMotivoFalla,\r\n  insRegParada,\r\n} from \"../../context/Api\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"scroll\",\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#015CB7\",\r\n    },\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n  SelectStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n  InputTextStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n}));\r\n\r\nconst ParadaForm = () => {\r\n  const classes = useStyle();\r\n  const [HoraInicio, setHoraInicio] = useState(new Date());\r\n  const [HoraFin, setHoraFin] = useState(new Date());\r\n  const [subArea, setSubArea] = useState([]);\r\n  const [lugarFalla, setLugarFalla] = useState([]);\r\n  const [equipos, setEquipos] = useState([]);\r\n  const aceroContext = useContext(GlobalContex);\r\n  const history = useHistory()\r\n  const {\r\n    isLam,\r\n    ordenes,\r\n    cargos,\r\n    fallaAreas,\r\n    user,\r\n    headerReg,\r\n    loadRegPadadData,\r\n  } = aceroContext;\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      PlqPerd,\r\n      PlqDesc,\r\n      InCargo,\r\n      SeArea,\r\n      SeSubArea,\r\n      SELugarF,\r\n      SEquipo,\r\n      SOrden,\r\n      Observ,\r\n    } = e.target.elements;\r\n\r\n    const data = {\r\n      HeaderRegId: headerReg.id,\r\n      OrdenProdId: SOrden.value,\r\n      HoraI: HoraInicio,\r\n      HoraF: HoraFin,\r\n      Cargo: InCargo.value,\r\n      AreaFallaId: SeArea.value,\r\n      LugarAveriaId: SELugarF.value,\r\n      subArea: SeSubArea.value,\r\n      Motivo: SEquipo.value,\r\n      Notas: Observ.value,\r\n      MpPerd: PlqPerd.value == undefined ? 0 : PlqPerd.value,\r\n      MpDesc: PlqDesc.value == undefined ? 0 : PlqDesc.value,\r\n      UsrReg: user.CodigoEmp,\r\n    };\r\n\r\n    insRegParada(data, (err, res) => {\r\n      if (err) {\r\n      } else {\r\n        loadRegPadadData(res);\r\n        history.push(\"/registro\")\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeArea = (e) => {\r\n    e.preventDefault();\r\n    let areaid = e.target.value;\r\n    getMotivoFallaSubArea(areaid, (err, data) => {\r\n      if (err) {\r\n      } else {\r\n        setSubArea(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChangeSubArea = (e) => {\r\n    e.preventDefault();\r\n    let subAreaid = e.target.value;\r\n    getMotivoFallaLugarAveria(subAreaid, (err, data) => {\r\n      if (err) {\r\n      } else {\r\n        setLugarFalla(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const HandlerClose = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/registro\")\r\n  }\r\n\r\n  const onChangeLugar = (e) => {\r\n    e.preventDefault();\r\n    let lugarId = e.target.value;\r\n    getMotivoFalla(lugarId, (err, data) => {\r\n      if (err) {\r\n      } else {\r\n        setEquipos(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleHInicioChange = (date) => {\r\n    setHoraInicio(date);\r\n  };\r\n\r\n  const handleHFinChange = (date) => {\r\n    setHoraFin(date);\r\n  };\r\n\r\n  let Lam = null;\r\n  if (isLam) {\r\n    Lam = (\r\n      <>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          alignItems=\"flex-end\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Tooltip title=\"Solo Números\" placement=\"right\">\r\n              <TextField\r\n                id=\"PlqP\"\r\n                name=\"PlqPerd\"\r\n                label=\"PLQ Perdidos\"\r\n                type=\"number\"\r\n                className={classes.InputTextStyle}\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          alignItems=\"flex-end\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Tooltip title=\"Solo Números\" placement=\"right\">\r\n              <TextField\r\n                id=\"Plqd\"\r\n                name=\"PlqDesc\"\r\n                label=\"PLQ Descartado\"\r\n                type=\"number\"\r\n                className={classes.InputTextStyle}\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} alignItems=\"center\"></Grid>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12} sm={10} md={6} lg={6}>\r\n          <Paper elevation={3}>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <form onSubmit={onFormSubmit}>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                      <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"HoraH\"\r\n                        label=\"Hora Inicio\"\r\n                        value={HoraInicio}\r\n                        onChange={handleHInicioChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"Tiempo ha cambiado\",\r\n                        }}\r\n                        className={classes.SelectStyle}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid item>\r\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                        <KeyboardTimePicker\r\n                          margin=\"normal\"\r\n                          id=\"HoraF\"\r\n                          label=\"Hora Fin\"\r\n                          value={HoraFin}\r\n                          onChange={handleHFinChange}\r\n                          KeyboardButtonProps={{\r\n                            \"aria-label\": \"Tiempo ha cambiado\",\r\n                          }}\r\n                          className={classes.SelectStyle}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                </Grid>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid item>\r\n                      <InputLabel id=\"SCargo\">Cargo</InputLabel>\r\n                      <Select\r\n                        native\r\n                        name=\"InCargo\"\r\n                        label=\"SlCargo\"\r\n                        className={classes.SelectStyle}\r\n                      >\r\n                        {cargos.map((cargo) => {\r\n                          return (\r\n                            <option key={cargo.Id} value={cargo.Id}>\r\n                              {cargo.Codigo}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                      <Grid item>\r\n                        <InputLabel id=\"SlArea\">Area</InputLabel>\r\n                        <Select\r\n                          native\r\n                          label=\"SlArea\"\r\n                          id=\"SeArea\"\r\n                          name=\"SeArea\"\r\n                          className={classes.SelectStyle}\r\n                          onChange={onChangeArea}\r\n                        >\r\n                          <option value=\"0\"></option>\r\n                          {fallaAreas.map((area) => {\r\n                            return (\r\n                              <option key={area.Id} value={area.Id}>\r\n                                {area.Denominacion}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"SlSubArea\">SubArea</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"SlSubArea\"\r\n                      id=\"SeSubArea\"\r\n                      name=\"SeSubArea\"\r\n                      className={classes.SelectStyle}\r\n                      onChange={onChangeSubArea}\r\n                    >\r\n                      <option value=\"0\"></option>\r\n                      {subArea.map((sub) => {\r\n                        return (\r\n                          <option key={sub.Id} value={sub.Id}>\r\n                            {sub.Denominacion}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid item>\r\n                      <InputLabel id=\"SLLugarF\">Lugar Falla</InputLabel>\r\n                      <Select\r\n                        native\r\n                        label=\"SLLugarF\"\r\n                        id=\"SELugarF\"\r\n                        name=\"SELugarF\"\r\n                        className={classes.SelectStyle}\r\n                        onChange={onChangeLugar}\r\n                      >\r\n                        <option value=\"0\"></option>\r\n                        {lugarFalla.map((Lug) => {\r\n                          return (\r\n                            <option key={Lug.Id} value={Lug.Id}>\r\n                              {Lug.Denominacion}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid item>\r\n                      <InputLabel id=\"SLEquipo\">Motivo Falla</InputLabel>\r\n                      <Select\r\n                        native\r\n                        label=\"SLEquipo\"\r\n                        id=\"SEquipo\"\r\n                        name=\"SEquipo\"\r\n                        className={classes.SelectStyle}\r\n                      >\r\n                        <option value=\"0\"></option>\r\n                        {equipos.map((eq) => {\r\n                          return (\r\n                            <option key={eq.Id} value={eq.Id}>\r\n                              {eq.Denominacion}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid item>\r\n                      <InputLabel id=\"SOrden\">Orden Producción</InputLabel>\r\n                      <Select\r\n                        native\r\n                        label=\"Orden\"\r\n                        id=\"SOrden\"\r\n                        name=\"SOrden\"\r\n                        className={classes.SelectStyle}\r\n                      >\r\n                        <option value=\"0\"> </option>\r\n                        {ordenes.map((orden) => {\r\n                          return (\r\n                            <option key={orden.Id} value={orden.Id}>\r\n                              {orden.Orden}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Grid>\r\n                </Grid>\r\n                  {Lam}\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"obs\"\r\n                      name=\"Observ\"\r\n                      label=\"Observación\"\r\n                      multiline\r\n                      rows={2}\r\n                      className={classes.InputTextStyle}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                  <p></p>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.btnB}\r\n                    type=\"submit\"\r\n                  >\r\n                    Aceptar\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.btnY}\r\n                    type=\"reset\"\r\n                    onClick={HandlerClose}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParadaForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Grid,\r\n  // TextField,\r\n  // Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination\r\n} from \"@material-ui/core\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"id\",\r\n    label: \"id\",\r\n    minWidth: \"100\",\r\n    align: \"left\",\r\n    format: value => value.toLocaleString() //toFixed(2),\r\n  },\r\n  {\r\n    id: \"Aufnr\",\r\n    label: \"Aufnr\",\r\n    minWidth: \"100\",\r\n    align: \"left\",\r\n    format: value => value.toLocaleString() //toFixed(2),\r\n  },\r\n  {\r\n    id: \"Meins\",\r\n    label: \"Meins\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Idnrk\",\r\n    label: \"Idnrk\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: value => value.toLocaleString()\r\n  }\r\n]\r\n\r\nconst rows = [\r\n  {\r\n    id: 1,\r\n    Idnrk: \"PLQ-010\",\r\n    Aufnr: \"294633\",\r\n    Meins: \"TO\"\r\n  },\r\n  {\r\n    id: 2,\r\n    Idnrk: \"PLQ-011\",\r\n    Aufnr: \"294633\",\r\n    Meins: \"TO\"\r\n  },\r\n  {\r\n    id: 3,\r\n    Idnrk: \"PLQ-013\",\r\n    Aufnr: \"294633\",\r\n    Meins: \"TO\"\r\n  },\r\n  {\r\n    id: 4,\r\n    Idnrk: \"PLQ-045\",\r\n    Aufnr: \"294633\",\r\n    Meins: \"TO\"\r\n  },\r\n  {\r\n    id: 5,\r\n    Idnrk: \"AT-061\",\r\n    Aufnr: \"294633\",\r\n    Meins: \"QQ\"\r\n  },\r\n  {\r\n    id: 6,\r\n    Idnrk: \"CPC-002\",\r\n    Aufnr: \"294633\",\r\n    Meins: \"ST\"\r\n  },\r\n  {\r\n    id: 7,\r\n    Idnrk: \"PLQ-020\",\r\n    Aufnr: \"294633\",\r\n    Meins: \"TO\"\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rootContainer: {},\r\n  SearchPaper: {\r\n    margin: \"1rem 0 .5rem 0\",\r\n    padding: '.5rem',\r\n    width: \"30rem\"\r\n  },\r\n  SearchImput: {\r\n    width: \"20rem\"\r\n  },\r\n  SearchButton: {\r\n    margin: '.5rem .5rem',\r\n    background: '#FFCC00',\r\n    color: \"#003366\",\r\n    '&:hover': {\r\n      background: \"#FFE166\"\r\n    }\r\n  },\r\n  ResultPaper: {\r\n    margin: '.5rem',\r\n    padding: '0.5rem',\r\n    width: '80rem'\r\n  }\r\n}));\r\n\r\nconst Componentes = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Paper elevation={3} className={classes.ResultPaper}>\r\n          <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell key={column.id} id={column.id} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                  {columns.map(column => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        </Paper>\r\n      </Grid>\r\n  )\r\n};\r\n\r\nexport default Componentes;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, \r\n          Paper, \r\n          Grid, \r\n          TextField, \r\n          Button,\r\n          Table,\r\n          TableBody,\r\n          TableCell,\r\n          TableContainer,\r\n          TableHead,\r\n          TableRow,\r\n          TablePagination\r\n        } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nimport NavigationBar from \"../Util/NavBar\";\r\nimport Componentes from './Componentes'\r\n\r\nconst columns = [\r\n  {\r\n    id: 'id',\r\n    label: \"id\",\r\n    minWidth: \"100\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString() //toFixed(2),\r\n  },\r\n  {\r\n    id: 'Arbpl',\r\n    label: \"Arbpl\",\r\n    minWidth: \"100\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString() //toFixed(2),\r\n  },\r\n  {\r\n    id: 'Aufnr',\r\n    label: \"Aufnr\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Bmsch',\r\n    label: \"Bmsch\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Eph',\r\n    label: \"Eph\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Gamng',\r\n    label: \"Gamng\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: 'Gltrs',\r\n    label: \"Gltrs\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Gmein',\r\n    label: \"Gmein\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Gstrp',\r\n    label: \"Gstrp\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Plnbez',\r\n    label: \"Plnbez\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Plnnr',\r\n    label: \"Plnnr\",\r\n    minWidth: \"170\",\r\n    align: 'center',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Verid',\r\n    label: \"Verid\",\r\n    minWidth: \"170\",\r\n    align: 'center',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Vgw01',\r\n    label: \"Vgw01\",\r\n    minWidth: \"170\",\r\n    align: 'center',\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: 'Vornr',\r\n    label: \"Vornr\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  },{\r\n    id: 'Werks',\r\n    label: \"Werks\",\r\n    minWidth: \"170\",\r\n    align: 'left',\r\n    format: value => value.toLocaleString()\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  {\r\n    id: 1,\r\n    Arbpl: \"CLAV-004\",\r\n    Aufnr: \"294633\",\r\n    Eph: \"2.51\",\r\n    Gamng: \"120.0\",\r\n    Gltrs: '2020-01-25',\r\n    Gmein: \"QQ\",\r\n    Gstrp: \"2020-01-23\",\r\n    Plnbez: 'CC001',\r\n    Plnnr: \"50001654\",\r\n    Verid: \"0005\",\r\n    Vgw01: \"8.400\",\r\n    Vornr: \"0010\",\r\n    Werks: \"1001\",\r\n    Bmsch: \"1000.0\"\r\n  },\r\n  {\r\n    id: 2,\r\n    Arbpl: \"CLAV-009\",\r\n    Aufnr: \"294633\",\r\n    Eph: \"12.5\",\r\n    Gamng: \"120.0\",\r\n    Gltrs: '2020-01-25',\r\n    Gmein: \"QQ\",\r\n    Gstrp: \"2020-01-23\",\r\n    Plnbez: 'CC001',\r\n    Plnnr: \"50001654\",\r\n    Verid: \"0005\",\r\n    Vgw01: \"80000\",\r\n    Vornr: \"0020\",\r\n    Werks: \"1001\",\r\n    Bmsch: \"1000.0\"\r\n  }\r\n];\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rootContainer: {},\r\n  SearchPaper: {\r\n    margin: \"1rem 0 .5rem 0\",\r\n    padding: '.5rem',\r\n    width: \"30rem\"\r\n  },\r\n  SearchImput: {\r\n    width: \"20rem\"\r\n  },\r\n  SearchButton: {\r\n    margin: '.5rem .5rem',\r\n    background: '#FFCC00',\r\n    color: \"#003366\",\r\n    '&:hover': {\r\n      background: \"#FFE166\"\r\n    }\r\n  },\r\n  ResultPaper: {\r\n    margin: '.5rem',\r\n    padding: '0.5rem',\r\n    width: '80rem'\r\n  }\r\n}));\r\nconst OrdenProduccion = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <NavigationBar />\r\n        <Paper elevation={3} className={classes.SearchPaper}>\r\n          <TextField \r\n            id=\"outlined-textarea\"\r\n            label=\"Busqueda\"\r\n            placeholder=\"Busqueda...\"\r\n            variant=\"outlined\"\r\n            className={classes.SearchImput}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            className={classes.SearchButton}\r\n            startIcon={<Search />}\r\n          >\r\n            Buscar\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Paper elevation={3} className={classes.ResultPaper}>\r\n          <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell key={column.id} id={column.id} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                  {columns.map(column => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        </Paper>\r\n      </Grid>\r\n      <Componentes/>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrdenProduccion;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport { insChatarraHeader, getChatarraPos } from '../../context/Api'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  formStyle: {\r\n    padding: \"1em 0\",\r\n    margin: \"1em 0\",\r\n  },\r\n  GridMain: {\r\n    margin: \"2.5em\",\r\n    paddin: \"1em\",\r\n  },\r\n  PtContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    border: \"1px solid lightgray\",\r\n    margin: \"2em 1em\",\r\n    padding: \".5em .2em\",\r\n    width: \"30em\",\r\n  },\r\n  grupoContainer: {\r\n    margin: \"1em 0\",\r\n  },\r\n  PaperStyle: {\r\n    padding: \"1em\",\r\n  },\r\n  SelectStyle: {\r\n    width: \"12em\",\r\n  },\r\n  InputTextStyle: {\r\n    width: \"12em\",\r\n    margin: \"1em 0\",\r\n  },\r\n  DatePick: {\r\n    margin: \".8em 0\",\r\n    width: \"12em\",\r\n  },\r\n  ButtonSection: {\r\n    margin: \".5em 0 0 -.5em\",\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"1rem .5em\",\r\n    \"&:hover\": {\r\n      background: \"#015CB7\",\r\n    },\r\n  },\r\n\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"1rem .5em\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatarraHead = () => {\r\n  const classes = useStyle();\r\n  const AceroContex = useContext(GlobalContex);\r\n  const { SetChatarraPos, turnos, user, LoadChataraHeader } = AceroContex;\r\n  const [TodayDate, setTodayDate] = React.useState(new Date());\r\n\r\n  const handlerSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {Fecha,Turno, UserC,  } = event.target.elements\r\n\r\n    const data = {\r\n      Fecha: Fecha.value,\r\n      Turno: parseInt(Turno.value),\r\n      Operador: parseInt(UserC.value),\r\n      Estatus: 'A',\r\n      UsrReg: user.CodigoEmp,\r\n      RegDate: new Date()\r\n    }\r\n    insChatarraHeader(data, (err, data)=>{\r\n      if(err){\r\n\r\n      }else {\r\n        LoadChataraHeader(data)\r\n        getChatarraPos(data.Id,(err, data)=> {\r\n            if(err) {\r\n\r\n            } else {\r\n              if(data.length>0){\r\n                SetChatarraPos(data)\r\n              }\r\n            }\r\n        })\r\n      }\r\n    })\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setTodayDate(date);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        wrap=\"nowrap\"\r\n        className={classes.GridMain}\r\n      >\r\n        <h2>Chatarra</h2>\r\n        <Paper elevation={3} className={classes.PtContainer}>\r\n          <form onSubmit={handlerSubmit} className={classes.formStyle}>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <KeyboardDatePicker\r\n                    autoOk\r\n                    name=\"Fecha\"\r\n                    variant=\"inline\"\r\n                    inputVariant=\"outlined\"\r\n                    label=\"Seleccione Fecha\"\r\n                    format=\"MM/DD/YYYY\"\r\n                    className={classes.DatePick}\r\n                    value={TodayDate}\r\n                    InputAdornmentProps={{ position: \"end\" }}\r\n                    onChange={handleDateChange}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"Lturno\">Turnos</InputLabel>\r\n                  <Select\r\n                    native\r\n                    name=\"Turno\"\r\n                    label=\"Turnos\"\r\n                    id=\"Sturno\"\r\n                    className={classes.SelectStyle}\r\n                  >\r\n                    {turnos.map((turno) => {\r\n                      return (\r\n                        <option key={turno.id} value={turno.Id}>\r\n                          {turno.Descripcion}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={10} sm={10} md={8} lg={6}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <TextField\r\n                    id=\"usr\"\r\n                    name=\"UserC\"\r\n                    label=\"Operador\"\r\n                    variant=\"outlined\"\r\n                    className={classes.InputTextStyle}\r\n                  />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid className={classes.ButtonSection}>\r\n              <Button type=\"submit\" className={classes.btnB}>\r\n                Aceptar\r\n              </Button>\r\n              <Button type=\"reset\" className={classes.btnY}>\r\n                Cancelar\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatarraHead;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport { Add } from '@material-ui/icons'\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nconst columns = [\r\n  {\r\n    id: \"Id\",\r\n    label: \"Posicion\",\r\n    minWidth: \"100\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(), //toFixed(2),\r\n  },\r\n  {\r\n    id: \"puestoTr\",\r\n    label: \"Linea Producción\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"PesoEntrada\",\r\n    label: \"Peso Entrada\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"PesoSalida\",\r\n    label: \"Peso Salida\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"PesoChatarra\",\r\n    label: \"Peso Chatarra\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"motivo\",\r\n    label: \"Motivo Chatarra\",\r\n    minWidth: \"200\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"tipochatarra\",\r\n    label: \"Tipo Chatarra\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Texto\",\r\n    label: \"Observación\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n];\r\n\r\nlet rows = []\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"relative\"\r\n  },\r\n  FabStyle: {\r\n    position: 'absolute',\r\n    background: '#FFCC00',\r\n    color: '#003366',\r\n    right: '0',\r\n    top: '-4rem',\r\n    zIndex: '999',\r\n    '&:hover':{\r\n      background: \"#FFE166\"\r\n    }\r\n  },\r\n}));\r\n\r\nconst ChatarraPos = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const aceroContext = useContext(GlobalContex)\r\n  const { chatarraPos } = aceroContext\r\n  \r\n  useEffect(() => {\r\n    if (chatarraPos !== null && chatarraPos !== undefined) {\r\n      rows = chatarraPos\r\n    }\r\n  },[])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return(\r\n    <Paper className={classes.root}>\r\n      <Link to=\"/chatarra/chatarForm\">\r\n        <Fab aria-label=\"add\" className={classes.FabStyle}>\r\n            <Add/>\r\n        </Fab>\r\n      </Link>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell key={column.id} id={column.id} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idreg}>\r\n                  {columns.map(column => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  )\r\n\r\n};\r\n\r\nexport default ChatarraPos;\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Paper, Button, makeStyles } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { ArrowBackIosRounded } from \"@material-ui/icons\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport { sapSendChatarra } from '../../context/Api'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  PaperSite: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"2rem\",\r\n    margin: \"2rem\",\r\n    height: \"13rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n  },\r\n  GridContainer: {},\r\n  GridSections: {\r\n    padding: \"2rem\",\r\n    margin: \"2rem\",\r\n  },\r\n  GridSideTable: {},\r\n  dividerStyle: {\r\n    margin: \".3rem\",\r\n  },\r\n\r\n  ButtonSection: {\r\n    bottom: \"0\",\r\n    left: \"39rem\",\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \".6em 0\",\r\n    marginBottom: \"-5rm\",\r\n    \"&:hover\": {\r\n      color: \"white\",\r\n      background: \" #003499\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderPanel = () => {\r\n  const classes = useStyles();\r\n  const AceroContex = useContext(GlobalContex);\r\n  const { chatarraHeader, chatarraPos, ClearChatarra  } = AceroContex;\r\n\r\n  let btn = null\r\n\r\n  const chatarraToSap = (e) =>{\r\n    e.preventDefault();\r\n    let date = new Date()\r\n    let dareg = new Date(chatarraHeader.Fecha)\r\n    let Posiciones = [];\r\n\r\n    const Header = {\r\n      DocDate : `${dareg.getFullYear()}${dareg.getMonth()+1}${dareg.getDate()}`,\r\n      PstngDate : `${date.getFullYear()}${date.getMonth()+1}${date.getDate()}`,\r\n      HeaderTxt : `Chatarra ${chatarraHeader.OperadorId}-${chatarraHeader.Operador}`\r\n    }\r\n\r\n    chatarraPos.map((p) => {\r\n      Posiciones.push({\r\n        Material: \"DCL001\",\r\n        Plant: \"1000\",\r\n        StgeLoc: \"0420\",\r\n        MoveType: \"913\",\r\n        EntryQnt: 1360,\r\n        EntryUom: \"KG\",\r\n        Costcenter: \"1000181080\",\r\n        MoveReas: 30\r\n      })\r\n    })\r\n\r\n    let ZgmAcerogmChatarra = {\r\n      Header,\r\n      Posiciones\r\n    }\r\n\r\n    sapSendChatarra(ZgmAcerogmChatarra, (err, data) =>{\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n  if(chatarraHeader.RegistroSap) {\r\n    btn = <Button className={classes.btnB} disabled>Enviar a Sap</Button>\r\n  } else {\r\n    btn = <Button className={classes.btnB} onClick={chatarraToSap}>Enviar a Sap</Button>\r\n  }\r\n\r\n  const handlerBack = (e) => {\r\n    e.preventDefault();\r\n    ClearChatarra()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={4} className={classes.PaperSite}>\r\n        <Grid\r\n          spacing={2}\r\n          container\r\n          justify=\"flex-start\"\r\n          alignContent=\"space-between\"\r\n          wrap=\"wrap\"\r\n          direction=\"row\"\r\n        >\r\n          <Grid item>\r\n            <div>\r\n              <Button onClick={handlerBack}>\r\n                <ArrowBackIosRounded />\r\n              </Button>\r\n            </div>\r\n            <h3>Chatarra</h3>\r\n            <div>\r\n              <b>Fecha:</b> {moment(chatarraHeader.Fecha).format('L')}\r\n            </div>\r\n            <div>\r\n              <b>Turno:</b> {chatarraHeader.Turno}\r\n            </div>\r\n            <div>\r\n              <b>Operador:</b> {chatarraHeader.Operador}\r\n            </div>\r\n            <div>\r\n              <b>Registro Sap:</b> {chatarraHeader.RegistroSap}\r\n            </div>\r\n            <div>\r\n              {btn}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderPanel;\r\n","import React, { useContext, useEffect } from 'react'\r\nimport ChatarraHead from './ChatarraHead'\r\nimport ChatarraPos from './ChatarraPos'\r\nimport HeaderPanel from './HeaderPanel'\r\nimport NavigationBar from '../Util/NavBar'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { GlobalContex } from '../../context/GlobalState'\r\nimport { GetMotivoChatarra, GetTipoChatarra } from '../../context/Api'\r\n\r\n\r\nconst Chatarra = () => {\r\n    const aceroContext = useContext(GlobalContex)\r\n    const { chatarraHeader, motivoChatara, tipoChatarra, ChatarraMotivo, ChatarraTipo } = aceroContext\r\n\r\n    let children \r\n\r\n    useEffect(() => {\r\n        if(tipoChatarra === null) {\r\n            GetTipoChatarra((err,data) => {\r\n                if(err){\r\n                    toast.error(\"Error al cargar tipo de chatarra\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        autoClose: 3000\r\n                    });\r\n                }\r\n                else {\r\n                    ChatarraTipo(data)\r\n                }\r\n                \r\n            })\r\n        }\r\n\r\n        if(motivoChatara === null) {\r\n            GetMotivoChatarra((err, data) => {\r\n                if(err) {\r\n                    toast.error(\"Error al cargar el motivo de chatarra\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        autoClose: 3000\r\n                    });\r\n                }else {\r\n                    ChatarraMotivo(data)\r\n                }\r\n            })\r\n        }\r\n    },[])\r\n    \r\n    if(chatarraHeader == null){\r\n        children = <ChatarraHead/>\r\n    } else {\r\n        children = <div>\r\n                <HeaderPanel/>\r\n                <ChatarraPos/>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavigationBar/>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatarra\r\n","import \"moment\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  makeStyles,\r\n  InputLabel,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport { insChatarraPos } from \"../../context/Api\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"scroll\",\r\n  },\r\n  LogoSize: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"11rem\",\r\n      heigth: \"2rem\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"16.5rem\",\r\n      heigth: \"3rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"22rem\",\r\n      heigth: \"4rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {},\r\n  },\r\n  btnB: {\r\n    background: \"#003366\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#015CB7\",\r\n    },\r\n  },\r\n  btnY: {\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    margin: \"0 .5em\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n  SelectStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n  InputTextStyle: {\r\n    margin: \".5rem 0\",\r\n    width: \"15rem\",\r\n  },\r\n}));\r\n\r\nconst ChatarraForm = () => {\r\n  const classes = useStyle();\r\n  const aceroContext = useContext(GlobalContex);\r\n  const history = useHistory()\r\n  const {\r\n    userInfo,\r\n    chatarraHeader,\r\n    user,\r\n    motivoChatara,\r\n    tipoChatarra,\r\n    chatarraPos,\r\n  } = aceroContext;\r\n  const puestos = userInfo.map((puesto) => {\r\n    return {\r\n      id: puesto.PuestoTrId,\r\n      Descrit: puesto.PuestoTr,\r\n      TypeNot: puesto.TipoNotif,\r\n    };\r\n  });\r\n\r\n  const HandlerClose = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/chatarra\")\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      puestotr,\r\n      tipoChatarra,\r\n      PesoEnt,\r\n      PesoSal,\r\n      motchatarra,\r\n      Texto,\r\n    } = e.target.elements;\r\n\r\n    const data = {\r\n      HeaderId: chatarraHeader.Id,\r\n      PuestoTr: puestotr.value,\r\n      PesoEntrada: PesoEnt.value,\r\n      PesoSalida: PesoSal.value,\r\n      PesoChatarra: parseInt(PesoEnt.value) - parseInt(PesoSal.value),\r\n      TipoChatarra: tipoChatarra.value,\r\n      MotivoChatarra: motchatarra.value,\r\n      Texto: Texto.value,\r\n      UsrReg: user.CodigoEmp,\r\n      RegDate: new Date(),\r\n      UpdDate: new Date(),\r\n    };\r\n\r\n    insChatarraPos(data, (err, data) => {\r\n      if (err) {\r\n      } else {\r\n        chatarraPos(data);\r\n        history.push(\"/chatarra\")\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.root}\r\n      >\r\n        <Grid item xs={10} sm={8} md={6} lg={6}>\r\n          <Paper elevation={3}>\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <form onSubmit={onFormSubmit}>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"SPtr\">Puesto de Trabajo</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Puesto de Trabajo\"\r\n                      name=\"puestotr\"\r\n                      className={classes.SelectStyle}\r\n                    >\r\n                      <option value=\"0\"> </option>\r\n                      {puestos.map((p) => {\r\n                        return (\r\n                          <option key={p.id} value={p.id}>\r\n                            {p.Descrit}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"STchatarra\">Tipo Chatarra</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Tipo Chatarra\"\r\n                      name=\"tipoChatarra\"\r\n                      className={classes.SelectStyle}\r\n                    >\r\n                      <option value=\"0\"> </option>\r\n                      {tipoChatarra.map((t) => {\r\n                        return (\r\n                          <option key={t.Id} value={t.Id}>\r\n                            {t.Denominacion}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"PesoEnt\"\r\n                        name=\"PesoEnt\"\r\n                        label=\"Peso Entrada\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Tooltip title=\"Solo Números\" placement=\"right\">\r\n                      <TextField\r\n                        id=\"PesoSal\"\r\n                        name=\"PesoSal\"\r\n                        label=\"Peso Salida\"\r\n                        type=\"number\"\r\n                        className={classes.InputTextStyle}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <InputLabel id=\"SMChatarra\">Motivo Chatarra</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Motivo Chatarra\"\r\n                      name=\"motchatarra\"\r\n                      className={classes.SelectStyle}\r\n                    >\r\n                      <option value=\"0\"> </option>\r\n                      {motivoChatara.map((p) => {\r\n                        return (\r\n                          <option key={p.Id} value={p.Id}>\r\n                            {p.Denominacion}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"Txt\"\r\n                      name=\"Texto\"\r\n                      label=\"Texto\"\r\n                      className={classes.InputTextStyle}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={classes.btnB}\r\n                      type=\"submit\"\r\n                    >\r\n                      Aceptar\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={classes.btnY}\r\n                      type=\"reset\"\r\n                      onClick={HandlerClose}\r\n                    >\r\n                      Cancelar\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatarraForm;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport { getDemoras } from '../../context/Api'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  PaperSite: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"2rem\",\r\n    margin: \"2rem\",\r\n    height: \"4rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n  },\r\n  DatePick: {},\r\n  formStyle: {\r\n    padding: \"1em 0\",\r\n    margin: \"1em 0\",\r\n  },\r\n  SelectStyle: {\r\n    width: \"12em\",\r\n  },\r\n  GridContainer: {},\r\n  GridSections: {\r\n    padding: \"2rem\",\r\n    margin: \"2rem\",\r\n  },\r\n  GridSideTable: {},\r\n  dividerStyle: {\r\n    margin: \".3rem\",\r\n  },\r\n\r\n  ButtonSection: {\r\n    bottom: \"0\",\r\n    left: \"39rem\",\r\n  },\r\n  btnB: {\r\n    background: \"red\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    marginBottom: \"-5rm\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n      background: \" #ffcccb\",\r\n    },\r\n  },\r\n  buttonSearch: {\r\n    marginTop: \"0.2rem\",\r\n  },\r\n}));\r\n\r\nconst SearchDemora = () => {\r\n  const classes = useStyles();\r\n  const [FechaI, SetFechaI] = useState(new Date());\r\n  const [FechaF, SetFechaF] = useState(new Date());\r\n  const AceroContex = useContext(GlobalContex);\r\n  const { userInfo, LoadDemora } = AceroContex;\r\n  const puestos = userInfo.map((puesto) => {\r\n    return {\r\n      id: puesto.PuestoTrId,\r\n      Descrit: puesto.PuestoTr,\r\n      TypeNot: puesto.TipoNotif,\r\n    };\r\n  });\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    const { ptr } = e.target.elements\r\n    const demora = {\r\n      FechaI,\r\n      FechaF,\r\n      PtrId: ptr.value\r\n    }\r\n    getDemoras(demora,(err, res)=> {\r\n      if(err) {\r\n\r\n      } else {\r\n        LoadDemora(res)\r\n      }\r\n    } )\r\n  };\r\n\r\n  const handleFICHange = (date) => {\r\n    SetFechaI(date._d);\r\n  };\r\n\r\n  const handleFFCHange = (date) => {\r\n    SetFechaF(date._d);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={4} className={classes.PaperSite}>\r\n        <form onSubmit={handlerSubmit} className={classes.formStyle}>\r\n          <Grid\r\n            spacing={3}\r\n            container\r\n            justify=\"flex-start\"\r\n            alignContent=\"space-around\"\r\n            wrap=\"wrap\"\r\n            direction=\"row\"\r\n          >\r\n            <Grid item>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  name=\"FechaI\"\r\n                  variant=\"inline\"\r\n                  inputVariant=\"outlined\"\r\n                  label=\"Seleccione Fecha Inicial\"\r\n                  format=\"MM/DD/YYYY\"\r\n                  className={classes.DatePick}\r\n                  value={FechaI}\r\n                  InputAdornmentProps={{ position: \"end\" }}\r\n                  onChange={handleFICHange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  name=\"FechaF\"\r\n                  variant=\"inline\"\r\n                  inputVariant=\"outlined\"\r\n                  label=\"Seleccione Fecha Final\"\r\n                  format=\"MM/DD/YYYY\"\r\n                  className={classes.DatePick}\r\n                  value={FechaF}\r\n                  InputAdornmentProps={{ position: \"end\" }}\r\n                  onChange={handleFFCHange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"LPt\">Puesto de Trabajo</InputLabel>\r\n                <Select\r\n                  id=\"ptr\"\r\n                  name=\"ptr\"\r\n                  native\r\n                  label=\"Puesto de Trabajo\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  {puestos.map((puesto) => {\r\n                    return (\r\n                      <option\r\n                        key={puesto.Descrit}\r\n                        value={puesto.id}\r\n                        data-type={puesto.TypeNot}\r\n                      >\r\n                        {puesto.Descrit}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.buttonSearch}\r\n                startIcon={<Search />}\r\n              >\r\n                Buscar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchDemora;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\nimport moment from \"moment\";\r\nconst columns = [\r\n  {\r\n    id: \"HoraInicio\",\r\n    label: \"Hora Inicio\",\r\n    minWidth: \"195\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"HoraFin\",\r\n    label: \"Hora Fin\",\r\n    minWidth: \"195\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Tiempo\",\r\n    label: \"Tiempo Parada\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"TiempoStandard\",\r\n    label: \"Tiempo Programado\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"cargo\",\r\n    label: \"Cargo\",\r\n    minWidth: \"200\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"area_falla\",\r\n    label: \"Area Parada\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Equipo\",\r\n    label: \"Equipo Parada\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"CausaFalla\",\r\n    label: \"Causa Parada\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"MP_Perd\",\r\n    label: \"PLQ Perdidas\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"MP_Desc\",\r\n    label: \"PLQ Descartado\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Orden\",\r\n    label: \"Orden Producción\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Material\",\r\n    label: \"Producto\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Perfil\",\r\n    label: \"Seccion\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"ComentarioDemora\",\r\n    label: \"Observacion\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"gatillo\",\r\n    label: \"Gatillo\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"EstadoTF\",\r\n    label: \"Realizar TF\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Nota\",\r\n    label: \"Comentario Demora\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n];\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  FabStyle: {\r\n    position: \"absolute\",\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    right: \"0\",\r\n    top: \"-4rem\",\r\n    zIndex: \"999\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n}));\r\nconst DataDemora = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const AceroContex = useContext(GlobalContex);\r\n  const { regDemora } = AceroContex;\r\n\r\n  useEffect(()=>{\r\n    if(regDemora != null && regDemora !== undefined) {\r\n      regDemora.map((reg) => {\r\n        reg.HoraInicio = moment(new Date(reg.HoraInicio)).format(\"LT\");\r\n        reg.HoraFin = moment(new Date(reg.HoraFin)).format(\"LT\");\r\n        return reg;\r\n      });\r\n      console.log(\"demora row\")\r\n      rows = regDemora\r\n    }\r\n  },[])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  id={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DataDemora;\r\n","import React from 'react'\r\n\r\nimport NavigationBar from '../Util/NavBar'\r\nimport SearchDemora from './SearchDemora'\r\nimport DataDemora from './DataDemora'\r\nconst Demora = () => {\r\n    return (\r\n        <>\r\n          <NavigationBar/>\r\n          <SearchDemora/>\r\n          <DataDemora/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Demora\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { NewReleases } from \"@material-ui/icons\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { GlobalContex } from \"../../context/GlobalState\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  PaperSite: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"2rem\",\r\n    margin: \"2rem\",\r\n    height: \"4rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      overflow: \"scroll\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      overflow: \"hiden\",\r\n    },\r\n  },\r\n  DatePick: {},\r\n  formStyle: {\r\n    padding: \"1em 0\",\r\n    margin: \"1em 0\",\r\n  },\r\n  SelectStyle: {\r\n    width: \"12em\",\r\n  },\r\n  GridContainer: {},\r\n  GridSections: {\r\n    padding: \"2rem\",\r\n    margin: \"2rem\",\r\n  },\r\n  GridSideTable: {},\r\n  dividerStyle: {\r\n    margin: \".3rem\",\r\n  },\r\n\r\n  ButtonSection: {\r\n    bottom: \"0\",\r\n    left: \"39rem\",\r\n  },\r\n  btnB: {\r\n    background: \"red\",\r\n    color: \"white\",\r\n    margin: \"0 .5em\",\r\n    marginBottom: \"-5rm\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n      background: \" #ffcccb\",\r\n    },\r\n  },\r\n  buttonSearch: {\r\n    marginTop: \"0.2rem\",\r\n  },\r\n}));\r\n\r\nconst HeadSearch = () => {\r\n  const classes = useStyles();\r\n  const [Fecha, SetFecha] = useState(new Date());\r\n  const AceroContex = useContext(GlobalContex);\r\n  const { userInfo } = AceroContex;\r\n  const puestos = userInfo.map((puesto) => {\r\n    return {\r\n      id: puesto.PuestoTrId,\r\n      Descrit: puesto.PuestoTr,\r\n      TypeNot: puesto.TipoNotif,\r\n    };\r\n  });\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleFechaCHange = (date) => {\r\n    SetFecha(date._d);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={4} className={classes.PaperSite}>\r\n        <form onSubmit={handlerSubmit} className={classes.formStyle}>\r\n          <Grid\r\n            spacing={3}\r\n            container\r\n            justify=\"flex-start\"\r\n            alignContent=\"space-around\"\r\n            wrap=\"wrap\"\r\n            direction=\"row\"\r\n          >\r\n            <Grid item>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  name=\"Fecha\"\r\n                  variant=\"inline\"\r\n                  inputVariant=\"outlined\"\r\n                  label=\"Seleccione Fecha Inicial\"\r\n                  format=\"MM/DD/YYYY\"\r\n                  className={classes.DatePick}\r\n                  value={Fecha}\r\n                  InputAdornmentProps={{ position: \"end\" }}\r\n                  onChange={handleFechaCHange}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"LPt\">Puesto de Trabajo</InputLabel>\r\n                <Select\r\n                  id=\"ptr\"\r\n                  name=\"ptr\"\r\n                  native\r\n                  label=\"Puesto de Trabajo\"\r\n                  className={classes.SelectStyle}\r\n                >\r\n                  {puestos.map((puesto) => {\r\n                    return (\r\n                      <option\r\n                        key={puesto.Descrit}\r\n                        value={puesto.id}\r\n                        data-type={puesto.TypeNot}\r\n                      >\r\n                        {puesto.Descrit}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.buttonSearch}\r\n                startIcon={<NewReleases />}\r\n              >\r\n                Generar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeadSearch;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { Pageview } from '@material-ui/icons'\r\n\r\n\r\nimport NotifPos from './NotifPos'\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Orden\",\r\n    label: \"Orden\",\r\n    minWidth: \"175\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"NumOperacion\",\r\n    label: \"Operacion\",\r\n    minWidth: \"175\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Fecha\",\r\n    label: \"Fecha\",\r\n    minWidth: \"195\",\r\n    align: \"left\",\r\n    format: (value) => moment(value.toLocaleString()).format('L'), //value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"Centro\",\r\n    label: \"Centro\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"UmPt\",\r\n    label: \"Und Medida\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"CantNot\",\r\n    label: \"CantNot\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"HoraMaquina\",\r\n    label: \"Hora Maquina\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"UndHM\",\r\n    label: \"Und HM\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"HoraHombre\",\r\n    label: \"Hora Hombre\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"UndHH\",\r\n    label: \"Und HH\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Turno\",\r\n    label: \"Turno\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"UnTurno\",\r\n    label: \"Seccion\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"ComentarioDemora\",\r\n    label: \"Observacion\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"gatillo\",\r\n    label: \"Gatillo\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"EstadoTF\",\r\n    label: \"Realizar TF\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Nota\",\r\n    label: \"Comentario Demora\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Id\",\r\n    label: \"...\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => <Button><Pageview/> </Button>,\r\n  },\r\n];\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  FabStyle: {\r\n    position: \"absolute\",\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    right: \"0\",\r\n    top: \"-4rem\",\r\n    zIndex: \"999\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderTable = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  id={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HeaderTable;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"Centro\",\r\n    label: \"Centro\",\r\n    minWidth: \"175\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Almacen\",\r\n    label: \"Almacen\",\r\n    minWidth: \"175\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"clmv\",\r\n    label: \"clmv\",\r\n    minWidth: \"195\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Cant\",\r\n    label: \"Cant\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"UndMed\",\r\n    label: \"Und Medida\",\r\n    minWidth: \"170\",\r\n    align: \"left\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"Batch\",\r\n    label: \"Batch\",\r\n    minWidth: \"170\",\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n];\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  FabStyle: {\r\n    position: \"absolute\",\r\n    background: \"#FFCC00\",\r\n    color: \"#003366\",\r\n    right: \"0\",\r\n    top: \"-4rem\",\r\n    zIndex: \"999\",\r\n    \"&:hover\": {\r\n      background: \"#FFE166\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst NotifPos = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  id={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n\r\n};\r\n\r\nexport default NotifPos;\r\n","import React from 'react'\r\n\r\nimport NavigationBar from '../Util/NavBar'\r\nimport HeaderSearch from './HeadSearch'\r\nimport HeaderTable from './HeaderTable'\r\n\r\nconst Index = () => {\r\n    return (\r\n        <>\r\n          <NavigationBar/>\r\n          <HeaderSearch/>  \r\n          <HeaderTable/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\n\r\nimport PublicRoute from './components/Util/PublicRoute'\r\nimport PrivateRoute from './components/Util/PrivateRoute'\r\n\r\nimport Login from \"./components/Login/Index\";\r\nimport Test from \"./components/Util/DrawerMenu\";\r\nimport Dashboard from \"./components/Dashboard/Index\";\r\nimport Registro from \"./components/Registro/Index\";\r\nimport ProdForm from \"./components/Registro/ProdForm\"\r\nimport ProdCompForm from \"./components/Registro/DataCompForm\"\r\nimport ParadaForm from \"./components/Registro/ParadaForm\"\r\nimport OrdenProduccion from \"./components/OrdenProduccion/Index\";\r\nimport Chatarra from \"./components/Chatarra/index\"\r\nimport ChatarraForm from \"./components/Chatarra/ChatarraForm\"\r\nimport Demora from \"./components/Demora/Index\"\r\nimport Notif from \"./components/Notif/Index\"\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Router>\r\n        <div>\r\n            <Switch>\r\n                <PublicRoute restricted={false} component={Login} exact path=\"/\" />\r\n                <Route exact path=\"/test\">\r\n                  <Test />\r\n                </Route>\r\n                <PrivateRoute component={Dashboard} exact path=\"/dashboard\" />\r\n                <PrivateRoute component={Registro} exact path=\"/registro\" />\r\n                <PrivateRoute component={ProdForm} exact path=\"/registro/prodreg\"/>\r\n                <PrivateRoute component={ProdCompForm} exact path=\"/registro/prodcomp\"/>\r\n                <PrivateRoute component={ParadaForm} exact path=\"/registro/paradreg\" />\r\n                <PrivateRoute component={OrdenProduccion} exact path=\"/ordenprod\" />\r\n                <PrivateRoute component={Chatarra} exact path=\"/chatarra\"/>\r\n                <PrivateRoute component={ChatarraForm} exact path=\"/chatarra/chatarForm\"/>\r\n                <PrivateRoute component={Demora} exact path=\"/demora\"/>\r\n                <PrivateRoute component={Notif} exact path=\"/notif\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}